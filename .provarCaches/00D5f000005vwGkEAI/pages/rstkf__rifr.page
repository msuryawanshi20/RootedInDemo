<apex:page id="pg" standardController="rstkf__rifr__c" extensions="rstkf.ControllerExtnRifr" sideBar="false" showHeader="true" action="{!doBeforePageLoad}">
    <apex:variable var="o" value="{!rstkf__rifr__c}" />
    <apex:variable var="f" value="{!$ObjectType.rstkf__rifr__c.fields}" />
    <apex:variable var="r" value="{!$ObjectType.rstkf__rifrsec__c.fields}" />
    <c:standardHeader cntr="{!controller}" title="{!$Label.rstkf__interactive_financial_reports}" displayListLink="true"/>
     <apex:stylesheet value="{!$Resource.rstkf__ModalPopup_css}"/>
    <apex:includeScript value="{!$Resource.rstkf__RowHandler_js}"/>
    <apex:includeScript value="{!$Resource.rstkf__jquery_tablesorter_cli}" />
    <apex:includeScript value="{!$Resource.rstkf__jquery_vfFloatingHeaders}" />
    <apex:stylesheet value="{!URLFOR($Resource.rstkf__images, 'fixedTableSort.css')}" />
    <style>
	    table.tablesorter thead tr .headerPad {
	        padding-right: 100px;
	        background-image: url({!URLFOR($Resource.images,'bg.gif')}) !important;
	        background-repeat: no-repeat !important;
	        background-position: center right !important;
	        cursor: pointer !important;
	    }
	        
	    table.tablesorter thead tr .headerPadSortUp {
	        background-image: url({!URLFOR($Resource.images,'asc.gif')}) !important;    
	        padding-right: 100px;
	    }    
	        
	    table.tablesorter thead tr .headerSortDown {
	        background-image: url({!URLFOR($Resource.images,'desc.gif')}) !important;
	        padding-right: 100px;
	    }
    </style>
	<apex:form id="fm">
        <apex:actionFunction name="doView" action="{!view}" immediate="true"/>
        <apex:actionFunction name="doEdit" action="{!edit}" immediate="true"/>
        <apex:actionFunction name="doDelete" action="{!doDelete}" immediate="true"/>
        <apex:actionFunction name="doCancel" action="{!doCancel}" immediate="true"/>
        <apex:actionFunction name="doSave" action="{!save}"  />
        <apex:actionFunction name="doClone" action="{!doClone}" immediate="true" rerender="pageMessages" />
        
        <apex:pageBlock id="pb" mode="detail" >
         <apex:pageBlock id="pb1" mode="detail" >
            <apex:pageBlockButtons >
                <c:standardButtons cntr="{!controller}" disableSaveAndNew="false" disableClone="false" />
            </apex:pageBlockButtons>    
            <apex:pageBlockSection id="pbs_main" columns="2" >
                <apex:pageBlockSectionItem helpText="{!f.rstkf__rifr_cmpno__c.inlineHelpText}">
                    <apex:outputLabel value="{!f.rstkf__rifr_cmpno__c.label}"/>
                    <apex:outputPanel >
                        <apex:outputField value="{!o.rstkf__rifr_cmpno__c}"/>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem />
                
                <apex:pageBlockSectionItem helpText="{!f.rstkf__rifr_rptname__c.inlineHelpText}">
                    <apex:outputLabel value="{!f.rstkf__rifr_rptname__c.label}"/>
                    <apex:outputPanel >
                        <apex:outputField value="{!o.rstkf__rifr_rptname__c}" rendered="{!OR(isView,isEdit)}"/>
                        <apex:inputField id="rifr_rptname__c" value="{!o.rstkf__rifr_rptname__c}" rendered="{!isNew}" required="true" onchange="checkForUniqueStmttype(this.value)"/>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                
                <apex:pageBlockSectionItem helpText="{!f.rstkf__rifr_disp_rptname__c.inlineHelpText}">
                    <apex:outputLabel value="{!f.rstkf__rifr_disp_rptname__c.label}"/>
                    <apex:outputPanel >
                        <apex:inputField id="rifr_disp_rptname__c" value="{!o.rstkf__rifr_disp_rptname__c}" rendered="{!OR(isNew,isEdit)}"/>
                        <apex:outputField value="{!o.rstkf__rifr_disp_rptname__c}" rendered="{!isView}"/>  
                    </apex:outputPanel>                    
                </apex:pageBlockSectionItem>
              
                <apex:pageBlockSectionItem helpText="{!f.rstkf__rifr_rpt_type__c.inlineHelpText}" rendered="{!!isClone}">
                    <apex:outputLabel value="{!f.rstkf__rifr_rpt_type__c   .label}"/>
                    <apex:outputPanel >
                        <apex:inputField id="rifr_rpt_type__c" value="{!o.rifr_rpt_type__c  }" required="true" rendered="{!OR(isNew,isEdit)}"/>
                        <apex:outputField value="{!o.rifr_rpt_type__c   }" rendered="{!isView}"/>   
                    </apex:outputPanel>                    
                </apex:pageBlockSectionItem>
                
                 <apex:pageBlockSectionItem rendered="{!isClone}" />
                
                <apex:pageBlockSectionItem helpText="{!f.rstkf__rifr_budgetdflt__c.inlineHelpText}">
                    <apex:outputLabel value="{!f.rstkf__rifr_budgetdflt__c.label}"/>
                    <apex:outputPanel >
	                    <apex:inputField id="rifr_budgetdflt__c"  value="{!o.rstkf__rifr_budgetdflt__c}" rendered="{!!isView}" />
	                    <apex:outputField value="{!o.rstkf__rifr_budgetdflt__c}" rendered="{!isView}"/>
                    </apex:outputPanel> 
                </apex:pageBlockSectionItem>
             </apex:pageBlockSection> 
          </apex:pageBlock>
          <apex:pageBlock rendered="{!!isClone}">
             <apex:pageBlockSection id="pbs_rifrsec" columns="1" title="{!$Label.rstkf__pagetab_rifr_interactive_financial_report_section_list}" collapsible="false">  
                 <apex:commandbutton value="{!$Label.rstkf__pagebtn_grid_maintenance}" onclick="_showDialogCustom('solpopup', 1600, 700, 30);return false;"/>
                 <apex:pageblocktable id="RifrSecList" value="{!RifrSecList}" var="rl"  width="100%" >
                      <apex:column headerValue="{!r.rstkf__rifrsec_seq__c.label}" value="{!rl.rstkf__rifrsec_seq__c}" />
                     <apex:column headerValue="Interactive Financial Report Section Name">
                         <apex:outputLink value="/apex/rifrsecView?id={!rl.id}" id="theViewLink">{!rl.Name}</apex:outputLink> 
                     </apex:column>
                      <apex:column headerValue="{!r.rstkf__rifrsec_display_section_name__c.label}" value="{!rl.rstkf__rifrsec_display_section_name__c}" />
                      <apex:column headerValue="{!r.rstkf__rifrsec_formula__c.label}" value="{!rl.rstkf__rifrsec_formula__c}" />
                      <apex:column headerValue="{!r.rstkf__rifrsec_numeric_scale__c.label}" value="{!rl.rstkf__rifrsec_numeric_scale__c}" />
                      <apex:column headerValue="{!r.rstkf__rifrsec_parent_rifrsec__c.label}" value="{!rl.rstkf__rifrsec_parent_rifrsec__c}" />
                      <apex:column headerValue="{!r.rstkf__rifrsec_section_type__c.label}" value="{!rl.rstkf__rifrsec_section_type__c}" />
                 </apex:pageblocktable>
            </apex:pageBlockSection> 
            <c:Popup popupId="solpopup" title="Financial Report Section List" onOk="closeButton()">
                <apex:outputPanel id="op_DetailsGrid">
                    <c:EditableGrid jsController="sol" data="{!rifrsec}" editable="false" ispopup="true"  tableSort="true" /> 
                </apex:outputPanel>    
            </c:Popup> 
      <script>
            function closeButton() {
                sol_saveAndClose();
                window.parent.location.reload();  
            }
              
            sol.onGridLoad = function() {
                sol.getSelectableRows().each(
                        function(index, el) {
                        	self = this;
                        	var row = jQuery(this);
                            var recId = sol.getRowValue(row, 'Id');
                            var paraentrecId = "{!rifrId}";
                            if (!isEmpty(recId)) {
                                //sol.getRowObj(row, 'rifrsec_secname__c').attr('disabled', true);
                            }
                            var secname = sol.getRowObj(row, 'rifrsec_secname__c')[0].value;
                            var parent_rifrsec = sol.getRowObj(row, 'rifrsec_parent_rifrsec__c')[0].value;
                            sol.getRowObj(row, 'rifrsec_parent_rifrsec__c')[0].length = 0;
                            sol.getRowObj(row, 'rifrsec_parent_rifrsec__c')[0].options[0] = new Option(
                            "--None--", "");
                            console.log('id '+recId);
                            var syInvDivs = execQuery("select id, name from rifrsec__c where id != '"
                                    + recId + "' and rifrsec_rifr__c = '"+ paraentrecId +"' order by rifrsec_secname__c ");
                            for (i = 0; i < syInvDivs.length; i++) {
                            sol.getRowObj(row, 'rifrsec_parent_rifrsec__c')[0].options[sol
                                    .getRowObj(row, 'rifrsec_parent_rifrsec__c')[0].length] = new Option(
                                    syInvDivs[i].Name, syInvDivs[i].Id, false,
                                    false);
                            }
                            sol.getRowObj(row, 'rifrsec_parent_rifrsec__c')[0].value = parent_rifrsec;
                    
                        });
                
                enableNewBatchFixedHeaderSort();
                enableSort();
            }

            sol.addRow = function(rowCallback) {
                self = this;
                solHandler.prototype.addRow.call(self, rowCallback);
                this
                        .getRows()
                        .each(
                                function(index, el) {
                                    var row = jQuery(this);
                                    var rowId = self.getRowValue(row, 'Id');
                                });

            }
            
            sol.entryChanged = function(row, rowNum, name, value) {
                if (name == 'rifrsec_secname__c') {
                    var secname = sol.getRowObj(row, 'rifrsec_secname__c')[0].value;  
                    var recId = sol.getRowValue(row, 'Id');
                    if (secname) {
                        var rifrsecList = execQuery("select name from rifrsec__c where rifrsec_secname__c = '"
                                + secname + "' and id != '"+recId+"' "); 
                            if(rifrsecList.length >0){
                            alert("{!$Label.ReportSectionNamemustbeunique}");
                            sol.getRowObj(row, 'rifrsec_secname__c')[0].value ='';
                        }
                    }
                }
            }
            
            sol.validate = function() {
                // alert('in validate');
                var self = this;
                var valid = true;
                self
                        .getSelectableRows()
                        .each(
                                function(index, el) {
                                    var row = jQuery(this);
                                    if (self.getRowValue(row,
                                            'rifrsec_secname__c') == null
                                            || self.getRowValue(row,
                                                    'rifrsec_secname__c').length <= 0) {
                                        alert("{!$Label.PleaseentervalueforReportSectionName}");
                                        valid = false;
                                    }
                                    
                                    if (self.getRowValue(row,
                                            'rifrsec_section_type__c') == null || self.getRowValue(row,
                                                    'rifrsec_section_type__c').length <= 0) {
                                        alert("{!$Label.PleaseentervalueforSectionType}");
                                        valid = false;
                                    }
                                    
                                    
                                });
                return valid;
            }
            
            function _showDialogCustom(forId, width, height, top)
            {
              var jel = jQuery('#'+escapeId(forId));
                        
              // Need to show the dialog before the offeset can be changed
              jel.show();
              _openDialog = jel;
              var thePopup=jel.find('.modalPopup');
              var theWin=jQuery(window);
              if (width != null) {
                thePopup.width(width);
              }
              if (height != null) {
                thePopup.height(height);
              }
                        
              if (!height)
                thePopup.css('max-height',theWin.height()*3/4);
                
              var topOffset = 200;
              if (top != null) {
                topOffset = top;
              }
            
              thePopup.offset({
                top  : topOffset + theWin.scrollTop(),
                left  : 20
              });
              //left  : (theWin.width() - thePopup.width()) / 2          
              fixupDialog();
            
              jel.find('[tabindex]:first').focus();
              jel.keypress(function(e) {
                if (e.which == 13) // return key pressed
                {
                  if (!(getSourceElement(e) instanceof HTMLTextAreaElement))
                  {
                    // treat as close request unless it's a TextArea
                    e.preventDefault();
                    _closeDialog();
                  }
                }
              });
            }   
            
    </script>
  
            <apex:tabPanel switchType="client" selectedTab="tab_Custom" id="theTabPanel">
                <apex:tab label="{!customFieldTabName}" name="tab_Custom" id="tab_Custom" rendered="{!hasCustomFields}">
                    <c:customFields cntr="{!controller}" cols="2"/>
                </apex:tab>
            </apex:tabPanel>
        </apex:pageBlock>
       </apex:pageBlock>
    </apex:form>   
    <c:footerInclude cntr="{!controller}" hideNotesAndAttachments="true"/>
    <div id="pleaseWaitPopup" style="display:none">
        <apex:outputPanel styleClass="topPopupBackground" layout="block"/>
        <apex:outputPanel styleClass="topPopup">
            <apex:image url="{!$Resource.rstkf__busy}"/>
        </apex:outputPanel>
    </div>
    <script>
        setSelectListRequired("gltype_fromacct__c");
        setSelectListRequired("gltype_toacct__c");
        function checkForUniqueStmttype(stmttype){
            //console.log('glacct_cli inside checkForUniqueAcctNum() : company  = '+ glcmp);
            var glcmp = "{!o.rstkf__rifr_cmpno__c}";
            var duplictes = execQuery("select count() from rifr__c where rifr_rptname__c = '"+stmttype+"' and rifr_cmpno__c = '"+glcmp+"'");
            if(stmttype != '' && duplictes != '0' && duplictes.length > 0 ){
                alert("{!$Label.X0_Report_Name_already_exists_for_selected_Company}",stmttype);
                sfffSetFieldValue('rifr_rptname__c','');
                getFmFld('rifr_rptname__c').focus();
                return false;
            }
            return true;
        }
    
       function enableNewBatchFixedHeaderSort() {
            var tableId = 'gridpbs:gridTable';
            var tbl = jQuery("table[id$=" + tableId + "]");
            var sortOptions = { 0: { sorter: false },  4: { sorter: false },  8: { sorter: false } };
            if (tbl) {
                tbl.vfFloatingHeaders();
                tbl.tablesorter({headers:sortOptions, cssHeader:'headerPad', cssAsc:'headerPadSortUp', cssAsc:'headerPadSortDown'});
            }
        }
        
        function enableSort() {
         	jQuery('table[id$=RifrSecList]').tablesorter({
                    headers: { 
                        0: { sorter: 'fancyNumber' },
                        4: { sorter: 'fancyNumber' },
                    }
                }).vfFloatingHeaders();
        }
    </script>
<!-- hello changes -->    
</apex:page>