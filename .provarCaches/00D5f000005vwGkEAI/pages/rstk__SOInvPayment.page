<apex:page id="pg" standardController="rstk__soinv__c" extensions="rstk.ControllerExtnSoInvPayment" sideBar="false" showHeader="false" 
    standardStylesheets="true" title="">
    <apex:variable var="o" value="{!rstk__soinv__c}" />
    <apex:variable var="f" value="{!$ObjectType.rstk__soinv__c.fields}" />
    <apex:variable var="fpay" value="{!$ObjectType.rstk__soinvpay__c.fields}" />
    
    <c:popupPageHeader enableAutocomplete="false" querysupport="true" nsprefix="{!NamespacePrefix}"/>
    <apex:includeScript value="{!$Resource.rstk__RowHandler_js}"/>
    <apex:stylesheet value="{!$Resource.rstk__ModalPopup_css}"/>
    
    <script>
    window.pageParms = {!pageParms};
    var soinvId = "{!o.Id}";
    var payRemaining = {!paymentRemaining};
    var mandatoryToken = {!mandatoryTokenJSON};
    var prerevcc = 'false';
    var ach = false;
    var achAdded = false;
    
    jQuery(function() {
	  sforce.connection.sessionId = __sfdcSessionId;
	  resetGUI();
    });
    
    function resetGUI() {
      console.log('***resetGUI');
      formatLocaleOutputFields();
	  soinvPayTypeShown = null;
	  onOpchanged();
    }
    
    function getTokenSelect() {
      return jQuery("[id$=token]").find('select');
    }

    function getTokenValue() {
      if (mandatoryToken != null) {
        return mandatoryToken.socusttoken_refid__c;
      }
      return getTokenSelect().val();
    }

    function setTokenValue(value) {
      if (mandatoryToken == null) {
        return getTokenSelect().val(value);
      }
    }

    
    function onSogatewayIdchanged() {
        console.log('***onSogatewayIdchanged');
        var tokenSelect = getTokenSelect();
    	setTokenValue('');
    	var gateId = jQuery("[id$=sogateway]").val();
    	var gate = execQuery("select sogateway_ach__c "+
    	                     "from sogateway__c "+
    	                     "where id = '"+gateId+"' ");
//    	if (gate[0].sogateway_ach__c == 'true') ach = true;
//    	else ach = false;
    	achAdded = false;
    	sogatewayIdchanged();
    }
    
    function onTokenChanged() {
      console.log('***onTokenChanged');
      var tokenSelected = getTokenValue();
      if (tokenSelected == 'ACH') {
          console.log('***ACH***');
          return;
      }
      if (achAdded == true) {
          achAdded = false;
          onSogatewayIdchanged();
          return;
      }
      var showUseToken = true;
      var gatewayField = jQuery("[id$=sogateway]");
      gatewayField.attr('disabled', false);
      if ((!isEmpty(tokenSelected) || enforeUseToken()) && prerevcc == 'false' && tokenSelected != 'ACH') {
        jQuery("[id$=ccdata]").hide();
        if (enforeUseToken()) {
          showUseToken = false;
        }
      } else {
        jQuery("[id$=ccdata]").show();
      }
      
      var usetokenSection = jQuery("[id*=usetokenSection]").closest('tr');;
      var sogatewaySection = jQuery("[id*=sogatewayPanel]");
      
      if (showUseToken) {
        usetokenSection.show();
        sogatewaySection.show();
      } else {
        usetokenSection.hide();
        
      }
      if (prerevcc == 'true') sogatewaySection.hide();
      
      var op = jQuery("[id$=opSelected]").val();
      if (op == 'PAY' && ach == true && achAdded == false) {
          var tokenSelect = getTokenSelect();
          tokenSelect.append(jQuery(new Option('ACH', 'ACH')));
          achAdded = true;
      }
    }
    
    function enforeUseToken() {
      var op = jQuery("[id$=opSelected]").val();
      return (op == 'REV' && prerevcc == 'false');
    }
    
    function getSelectedOrdPayId() {
      var soinvPaySelect = jQuery("select[id*=soinvpaySelect]");
      var ordPayId = soinvPaySelect.val();
      
      if (ordPayId == '') { ordPayId = null; }
      
      return ordPayId;
    }
    
    var soinvPayTypeShown = null;
    function onOpchanged() {
      console.log('***onOpchanged');
      setTokenValue('');
      prerevcc = 'false';
      var op = jQuery("[id$=opSelected]").val();
      if (op == 'PAY') {
        jQuery("[id$=soinvpays]").hide();
      } else {
        if (op != soinvPayTypeShown) {
          loadSoinvPays(op);
          soinvPayTypeShown = op;
        }
        jQuery("[id$=soinvpays]").show();
      }
      onTokenChanged();
      
      setDefaultAmount(op);
    }
    
    var text_payCompleted = "{!text_payCompleted}";
    var text_payReversed = "{!text_payReversed}";
    var text_None = "{!text_None}";
    
    var soinvPays= null;
    function loadSoinvPays(op) {
      console.log('***loadSoinvPays');
      if (soinvPays == null) {
        soinvPays = execQuery("select id, soinvpay_soinv__c, soinvpay_invpayid__c, soinvpay_status__c, soinvpay_soppy__c, soinvpay_sogateway__c, soinvpay_sogateway__r.Name, "+
                "soinvpay_payamount__c, soinvpay_reversed__c, soinvpay_revtxnid__c, soinvpay_revdate__c, soinvpay_error__c, createddate, soinvpay_sogateway__r.sogateway_prerevcc__c "+
                "from soinvpay__c "+
                "where soinvpay_soinv__c='"+soinvId+"' "+
                "order by soinvpay_payamount__c desc");
      }
      var soinvPaySelect = jQuery("select[id*=soinvpaySelect]");
      soinvPaySelect.find('option').remove();
      soinvPaySelect.append(jQuery(new Option(text_None, "")));
      for (var i=0; i<soinvPays.length; i++) {
        var soinvpay = soinvPays[i];
        var text = getOptionText(op, soinvpay);
        
        if (text != null) {
          soinvPaySelect.append(jQuery(new Option(text, soinvpay.soinvpay_invpayid__c)));
        }
      }
      
      onSoinvpaySelectedChanged();
    }
    
    function getOptionText(op, soinvpay) {
      var text = null;
      if (op == 'REV' && parseFloat(soinvpay.soinvpay_payamount__c) > 0) {
        text = soinvpay.soinvpay_sogateway__r.Name +" - " +soinvpay.soinvpay_status__c+", "+
               "{!fpay.soinvpay_payamount__c.label}:"+formatLocaleFloat(parseFloat(soinvpay.soinvpay_payamount__c), 2);
      }
      return text;
    }

    function getOptionAmount(op, soinvpay) {
      var amt = null;
      if (op == 'REV') {
        amt = soinvpay.soinvpay_payamount__c;
      }
      
      return amt!=null?parseFloat(amt):null;
    }

    
    function onSoinvpaySelectedChanged() {
      console.log('***onSoinvpaySelectedChanged');
      var op = jQuery("[id$=opSelected]").val();
      var ordPayId = getSelectedOrdPayId();
      prerevcc = 'false';
      var soinvPayTextField = jQuery("input[name*=soinvpaySelected]");
      soinvPayTextField.val(ordPayId);
 
      var amtField = jQuery("[id$=amount]");
      
      amtField.attr('disabled', false);
     
      if (op != 'PAY' && ordPayId != null) {
        for (var i=0; i<soinvPays.length; i++) {
          var soinvpay = soinvPays[i];
          if (ordPayId == soinvpay.soinvpay_invpayid__c) {
            var amtOverride = getOptionAmount(op, soinvpay);
            if (amtOverride != null) {
	          amtField.val(formatLocaleFloat(amtOverride, 2));
	          if (op == 'REV' || op == 'CAN') {
		        amtField.attr('disabled', (op == 'REV' || op =='CAN'));
		      }
	        }
	        if (op == 'REV' && soinvpay.soinvpay_sogateway__r.sogateway_prerevcc__c == 'true') prerevcc = 'true';
	        else prerevcc = 'false';
	        {!sogatewayId} = soinvpay.soinvpay_sogateway__c;
            var gatewayField = jQuery("[id$=sogateway]");       
            gatewayField.val(soinvpay.soinvpay_sogateway__c);
            setTokenValue('');
            gatewayIdchanged();
            break;
          }
        }
      } else {
        // No soinvpays selected, default the amount to what's remaining
        setDefaultAmount(op);
      }
      onTokenChanged();
    }
    
    function setDefaultAmount(op) {
      var ordPayId = getSelectedOrdPayId();
      var amtField = jQuery("[id$=amount]");
	  if (op =='PAY') {
        amtField.val(formatLocaleFloat(payRemaining, 2));
      }
       amtField.attr('disabled', (op == 'REV' || op == 'CAN'));
    }
    
    
    function preSave() {
      var amtField = jQuery("[id$=amount]");
      amtField.val(removeLocaleFormatting(amtField.val()));
      amtField.attr('disabled', false);
     }
    
    function postSave() {
      unblockUI();
      var op = jQuery("[id$=opSelected]").val();
      var amtField = jQuery("[id$=amount]");
      try {
      	amtField.val(formatLocaleFloat(parseFloat(amtField.val()), 2));
      } catch (e) {}
      amtField.attr('disabled', (op == 'REV' || op == 'CAN'));
      if (wasSuccess && successCallbackFn != null) {
        setTimeout(successCallbackFn, 100);
      }
      commitInProgress = false;
    }
    
    var commitInProgress = false;
    var successCallbackFn = null;
    function commit(callbackOnSuccess) {
      if (commitInProgress) {
        return false;
      }
      commitInProgress=true;
      try {
	      successCallbackFn = callbackOnSuccess?callbackOnSuccess:null;
	      blockUI();
	      preSave();
	      doSetFFCompanyAndProcess(savePreCheck, pageParms['isFF']);
	  } catch (e) {
	      commitInProgress = false;
	      alert(e);
	      console.log(e.stack);
	  }
    return false;
    }
    
    function postsavePreCheck() {
    	if (wasSuccess) {
    	  savePayment();
    	} else {
    	  postSave();
    	}
    }
    
    var wasSuccess = false;
    </script>
    
    <apex:outputPanel id="callStatus">
      <script>
        console.log('***callStatus');
        wasSuccess = {!wasSuccess};
      </script>
    </apex:outputPanel>
    
    <apex:form id="frm">
    <apex:pageBlock >
        <apex:actionStatus onstart="showTopDialog('pleaseWaitPopup');" onstop="closeTopDialog();" id="pleaseWaitStatus"/>
        <apex:actionFunction name="savePreCheck" immediate="false" action="{!savePreCheck}" oncomplete="postsavePreCheck();" rerender="pageMessages, callStatus" status="pleaseWaitStatus"/>
        <apex:actionFunction name="savePayment" immediate="false" action="{!save}" oncomplete="postSave();" rerender="pageMessages, callStatus" status="pleaseWaitStatus"/>
        <apex:actionFunction name="gatewayIdchanged" immediate="false" action="{!sogatewayIdchanged}" rerender="usetokenSection"/>
        <apex:actionFunction name="sogatewayIdchanged" immediate="false" action="{!sogatewayIdchanged}" oncomplete="resetGUI();" rerender="pageMessages, callStatus, soinvpays, ccdata, usetokenSection"/>
        <apex:actionFunction name="setCurrentFFCompanyAndProcess" action="{!setCurrentFFCompany}" oncomplete="doAfterSettingFFCompany();" immediate="true"/>
	<apex:pageBlockButtons >
        <apex:commandButton value="{!$Label.rstk__commit}" onclick="return commit();" rendered="{!isStandalonePage}"/>
    </apex:pageBlockButtons>

    <apex:pageBlockSection columns="1">
     
    <apex:pageBlockSectionItem >
    	<apex:outputLabel value="{!$Label.rstk__selectpaymentoperation}"/>
		<apex:selectList id="opSelected" value="{!opSelected}" size="1" onchange="onOpchanged(); return false;">
			<apex:selectOptions value="{!ops}"/>
		</apex:selectList>
    </apex:pageBlockSectionItem>

	<apex:outputpanel id="soinvpays" style="{!IF(ISNULL(opSelected) || opSelected == 'PAY','display:none','')}">
    <apex:pageBlockSection columns="1">
	    <apex:pageBlockSectionItem >
	    	<apex:outputLabel value="{!$ObjectType.rstk__soinvpay__c.label}"/>
		<c:LocalSelect id="soinvpaySelected" value="{!referenceExistingSoinvPay}" style="width:600px;" onchange="onSoinvpaySelectedChanged(); return false;"/>
		</apex:pageBlockSectionItem>
	</apex:pageBlockSection>
	</apex:outputpanel>

    <apex:pageBlockSectionItem >
    	<apex:outputLabel value="{!$Label.rstk__amount}"/>
		<apex:outputPanel >
			<apex:inputText id="amount" value="{!amount}" html-decimals="2"/>
<!-- 
			<a name='amtinfo' href="#" onclick="_showDialog('amountPopup',450, 360, 10); return false;" title="{!$Label.InitialAmnountBreakdown}">
			  <img height="8" width="8" src="/img/msg_icons/info16.png"/>
			</a>
 -->
		</apex:outputPanel>
		
    </apex:pageBlockSectionItem>


	<apex:outputpanel id="usetokenSection">
    <apex:pageBlockSection columns="1">
    <apex:pageBlockSectionItem >
    	<apex:outputLabel value="{!$Label.rstk__previouspaymentmethods}"/>
    	<apex:outputPanel >
          <c:largeSelectList id="token" value="{!token}" useValue="true" cntr="{!controller}" options="{!tokens}" 
            onchange="onTokenChanged(); return false;" rendered="{!ISNULL(mandatoryToken)}"/>
			<c:ObjectLink valueId="{!mandatoryToken.Id}" valueName="{!mandatoryToken.Name}" rendered="{!!ISNULL(mandatoryToken)}"/>
		</apex:outputPanel>
    </apex:pageBlockSectionItem>
    </apex:pageBlockSection>
    </apex:outputpanel>
	
	<apex:outputpanel id="ccdata" style="{!IF(useLastToken,'display:none','')}">
    <apex:pageBlockSection columns="1">
	    <apex:pageBlockSectionItem >
	    	<apex:outputLabel value="{!$Label.rstk__creditcardnumber}"/>
			<apex:inputText value="{!acctNum}"/>
	   </apex:pageBlockSectionItem>
	
	    <apex:pageBlockSectionItem >
	    	<apex:outputLabel value="{!$Label.rstk__cvv2}"/>
			<apex:inputText value="{!CVV2}"/>
	   </apex:pageBlockSectionItem>
	
	    <apex:pageBlockSectionItem >
	    	<apex:outputLabel value="{!$Label.rstk__expiresmonthyear}"/>
			<apex:outputPanel >
			<apex:inputText value="{!expireMonth}" style="width:32px"/> /&nbsp;<apex:inputText value="{!expireYear}" style="width:64px"/>
			</apex:outputPanel>
	   </apex:pageBlockSectionItem>
	
	    <apex:pageBlockSectionItem >
	    	<apex:outputLabel value="{!$Label.rstk__address1}"/>
			<apex:inputText value="{!streetAddress}"/>
		</apex:pageBlockSectionItem>
	
	    <apex:pageBlockSectionItem >
	    	<apex:outputLabel value="{!$Label.rstk__pagetitle_syzip}"/>
			<apex:inputText value="{!zip}" style="width:100px"/>
		</apex:pageBlockSectionItem>
	</apex:pageBlockSection>
	</apex:outputpanel>


	<apex:outputpanel id="sogatewayPanel" style="{!IF(ISNULL(referenceExistingSoinvPay) || referenceExistingSoinvPay == '','','display:none')}">
      <apex:pageBlockSection columns="1">
    	<apex:pageBlockSectionItem >
 	  		<apex:outputLabel value="{!$ObjectType.rstk__sogateway__c.label}"/>
			<apex:outputPanel >
				<apex:selectList id="sogateway" value="{!sogatewayId}" size="1" onchange="preSave(); onSogatewayIdchanged();" rendered="{!selectableGateway}">
					<apex:selectOptions value="{!sogateways}"/>
				</apex:selectList>
				<c:ObjectLink valueId="{!sogatewayId}" valueName="{!sogatewayName}" rendered="{!!selectableGateway}"/>
			</apex:outputPanel>
		</apex:pageBlockSectionItem>
	  </apex:pageBlockSection>
	</apex:outputpanel>	

    </apex:pageBlockSection>
    
    </apex:pageBlock>
 
     <div id="pleaseWaitPopup" style="display:none">
        <apex:outputPanel styleClass="topPopupBackground" layout="block"/>
        <apex:outputPanel styleClass="topPopup">
           <apex:image url="{!$Resource.rstk__busy}"/>
        </apex:outputPanel>
    </div>
   
    </apex:form>

</apex:page>