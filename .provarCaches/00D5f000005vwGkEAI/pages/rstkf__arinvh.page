<apex:page id="pg" standardController="rstkf__arinvh__c" extensions="rstkf.ControllerExtnArinvh,rstkf.RemoteQueryController" action="{!doBeforePageLoad}" sideBar="false">
<apex:variable var="o" value="{!rstkf__arinvh__c}" />
<apex:variable var="f" value="{!$ObjectType.rstkf__arinvh__c.fields}" />
<apex:variable var="f_arinvtxn" value="{!$ObjectType.rstkf__arinvtxn__c.fields}" />
<apex:variable var="f_customext" value="{!$ObjectType.rstkf__customextf__c.fields}" />
<c:standardHeader cntr="{!controller}" displayListLink="true" title="{!$Label.rstkf__receivable_batch}"/>
<apex:stylesheet value="{!$Resource.rstkf__ModalPopup_css}"/>
<apex:includeScript value="{!$Resource.rstkf__RowHandler_js}"/>
<apex:includeScript value="{!$Resource.rstkf__BlockUI}" />
<apex:includeScript value="{!$Resource.rstkf__jquerytoolsoverlay}" />    
<script>
    
	var currentGlcmpId = "{!currentGlcmp.id}";
	var createMode = "{!createMode}";
	//setRequired('arinvh_trandate__c', true);
	console.log(jQuery("input[id$=':" + "arinvh_trandate__c" + "']"));
	
	function getGlyearDetails(tranDate){
		console.log('Inisde getGlyearDetails tranDate '+tranDate);
		console.log('Inisde currentGlcmpId '+currentGlcmpId);
        
        Visualforce.remoting.Manager.invokeAction(  
	      '{!$RemoteAction.ControllerExtnArinvh.getGlyear}', //NameSpace  
	      currentGlcmpId,
	      tranDate,
	      function(result, event){
          	if (event.status) {
                checkResult(result);
                console.log(result);
            } else if (event.type === 'exception') {
                alert("{!$Label.Exception}", event.message);
            } else {
            	alert("{!$Label.UnexpectedStatus}", event.message); 
            }
	      }, {escape:false}
	  	);
    }
    
    function checkResult(result) {
		console.log(' result [0]: '+result[0]);
        console.log(' result [1]: '+result[1]);
        
        if(result == null) {
        	document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_trandate:arinvh_trandate__c').value = '';
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_glyear:glyearOPT').innerHTML = '';
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_period:periodOPT').innerHTML = '';
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_glyear:glyearIPH').value = '';
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_period:periodIPH').value = '';
        } /*
        if(result[0] == 'Error' || result[3] == 'true' || result[4] == 'false') {
        	document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_trandate:arinvh_trandate__c').value = '';
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_glyear:glyearOPT').innerHTML = '';
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_period:periodOPT').innerHTML = '';
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_glyear:glyearIPH').value = '';
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_period:periodIPH').value = '';
            alert(result[1]);
        } */ 
        else {
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_glyear:glyearOPT').innerHTML = result[1];
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_period:periodOPT').innerHTML = result[2];
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_glyear:glyearIPH').value = result[0];
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_period:periodIPH').value = result[2];
        }
        unblockUI();    
    }
    
    function checkGlyearDetails(tranDate){
        console.log('Inisde checkGlyearDetails tranDate |'+tranDate+'|');
        console.log('Inisde checkGlyearDetails tranDate length '+tranDate.length);

    	if(tranDate.trim().length == 0) {
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_glyear:glyearOPT').innerHTML = '';
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_period:periodOPT').innerHTML = '';
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_glyear:glyearIPH').value = '';
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_period:periodIPH').value = '';
            unblockUI();
        } else {
            getGlyearDetails(tranDate);
        }
    } 
    
    function editMemo(id,flag) {
    	console.log('Inside editMemo '+id);
        setEditURL(id,flag);
    }   
    
    function reloadMemos() {
    	console.log(' reloadMemos starts');
    	unblockUI();
    	//window.location.reload();
    	blockUI();
    	refreshBatch('true');
    	console.log(' reloadMemos done');
    } 
    
    function deleteARDrCrMemoCheck(deleteid) {
        if(confirm("{!$Label.AreYouSure}")) {            
            blockUI();
            deleteARDrCrMemo(deleteid);
            unblockUI();
        }    
    }
    
    function saveBatchCheck() {
    	var trndate = document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_trandate:arinvh_trandate__c').value;
    	console.log(' trndate '+trndate);
    	if(document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_trandate:arinvh_trandate__c').value == '') {
    		alert("{!$Label.Please_Select_Transaction_Date}");
    		return false;
    	} else {
    		saveBatch(); 
    	}
    }
    
    function deleteBatchCheck() {
    	if(confirm(childArinvtxnsMessageNo)) {
			deleteBatch();
		} 
    }
    
    function postBatchCheck() {
    	if(confirm("{!$Label.Please_confirm_you_wish_to_post_this_batch}")) {
			postBatch();
		} 
    }
    
    function notes_close() {}
    
    function jqueryOnReady() {
        	 console.log('Inside jqueryOnReady ');
        //var winId2 = e.target.getTrigger().attr('class').substring(3);
        //console.log('Inside jqueryOnReady winId2 ',winId2);
             jQuery("button[rel*=popup]").overlay({
            
                top: "10%",
            
                // some mask tweaks suitable for modal dialogs
                mask: {
                    color: '#ebecff',
                    loadSpeed: 200,
                    opacity: 0.8
                },
            
                fixed:false,
                
                closeOnClick: false
            });
            
            jQuery("button[rel*=win]").overlay({
            	mask: {
                    color: '#ebecff',
                    loadSpeed: 200,
                    opacity: 0.8
                },
                
                fixed:false,
                closeOnClick: false,
                
                onBeforeLoad: function(e) {
                    var winId = e.target.getTrigger().attr('class').substring(3);
                    var content = jQuery("#"+winId+'Frame');
                    var blockWin =content.closest('div');
  
                    var src = null;
                   
                    if (winId == 'PopupNotesAttachments')
                    {
                        var notesLine = sfffGetFieldValue('notes_lineid__c');
                        src = "{!URLFOR($Page.NotesAndAttachments)}?objname=arinvtxn__c&id=" + notesLine;
                        //+ "&nea=Y&nda=Y&nn=Y&na=Y"
                    }
			        if (src != null)
                    {
                        blockWin.block({
                            message: '',
                            centerX: true, 
                            centerY: true,
                            css: { 
                                border: 'none', 
                                padding: '15px', 
                                cursor: 'wait',
                                opacity: .5, 
                                textAlign: 'center'
                            }
                        });
                        content[0].src = src;
                        
                        content.load(function() { blockWin.unblock(); });
                    }
                }
            });
        }	
    
    
    	function showNotesAndAttachments(lineId) {
			console.log('get notes for lineId: ' + lineId);
            sfffSetFieldValue('notes_lineid__c', lineId);
            jQuery(".btnPopupNotesAttachments").click();
            return false;
		}
		
		function checkIfanyError(source) {
			var testResultString = document.getElementById('pg:fm:errorMessageOP').value;
     		if (testResultString != '') {
                if(source != 'Post') {
                	alert(testResultString);
                }  
     		} else if (source == 'ChildDelete' || source == 'Post'){
            	refreshBatch('true');
            }    
     		document.getElementById('pg:fm:errorMessageOP').value = '';
		}
</script>
	<style>
        .modal {
                background-color:#fff;
                display:none;
                width:800px;
                padding:15px;
                text-align:left;
                font-size:1em;
                border:2px solid #333;
            
                opacity:1.0;
                -moz-border-radius:6px;
                -webkit-border-radius:6px;
                -moz-box-shadow: 0 0 50px #ccc;
                -webkit-box-shadow: 0 0 50px #ccc;
            }
            
            .modal h2 {
                margin:0px;
                padding:10px 0 10px 45px;
                font-size:16px;
            }
            
            .modalComponents {
                color:#efefef;
                height:600px;
                width:900px;
                z-index:100;
            }
            
            /* container for external content. uses vertical scrollbar, if needed */
            .contentWrap {
              height:441px;
              overflow-y:auto;
              z-index:100;
            }
    
    		.topFrame
            {
                z-index:20100;
            }
                        
            .largerLabel td { width:50% !important; }
            
.modalPopup{
     background-color: white;
     border-style: solid;
     border-width: 3px;
     padding:1px;
     position: absolute;
     z-index: 10011;
     width: 650px;
     top:100px;
     overflow:auto;
 }
.topPopup{
     background-color: transparent;
     border-style: none;
     position: absolute;
     z-index: 20001;
     width: 50px;
     top:100px;
 }
.popupBackground{
     background-color:black;
     opacity: 0.20;
     position:absolute;
     width: 100%;
     height: 100%;
     top: 0;
     left: 0;
     z-index: 10010;
 }
.topPopupBackground{
     background-color:green;
     opacity: 0.10;
     position:absolute;
     width: 100%;
     height: 100%;
     top: 0;
     left: 0;
     z-index: 20000;
 }
    
        
		.clsCenter{
			text-align:center;
		}
		
		input[type=checkbox][disabled]{
		  opacity: 0.4;
		}
		.modalPopupX{
		     z-index: 30011;
		     width: 650px;
		 }
		.popupBackgroundX{
		     z-index: 30010;
		}
		.ct{
			text-align:center;
		}
		
		thePopup.offset({
		    top  : topOffset + theWin.scrollTop(),
		    left  : 40
		});
		
	    .Processing
	    {
	        position: fixed;
	        background: url({!$Resource.rstkf__busy});
	        background-repeat: no-repeat;
	        background-position: center;
	        width: 100%;
	        height: 100%;
	        z-index: 2004;
	        left: 0%;
	        top: 0%;
	    }
		.ac_results {
		    z-index: 9999;
		    background-color: #eee;
		}
	</style>
 <apex:form id="fm">
 	<apex:actionFunction name="newBatch" action="{!newBatch}" immediate="false" status="pleaseWaitStatus" />
 	<apex:actionFunction name="saveBatch" action="{!saveBatch}" immediate="false" reRender="errorMessageOP" status="pleaseWaitStatus" oncomplete="checkIfanyError();"/>
 	<apex:actionFunction name="postBatch" action="{!postBatch}" immediate="false" status="pleaseWaitStatus" reRender="pageMessages,errorMessageOP" oncomplete="checkIfanyError('Post');"/>
 	<apex:actionFunction name="deleteBatch" action="{!deleteBatch}" immediate="false" reRender="errorMessageOP" status="pleaseWaitStatus" oncomplete="checkIfanyError();" />
 	<apex:actionFunction name="deleteARDrCrMemo" action="{!deleteARDrCrMemo}" immediate="false" reRender="errorMessageOP,op_childArinvtxnsMessage" status="pleaseWaitStatus" oncomplete="checkIfanyError('ChildDelete');">
 		<apex:param name="arinvtxnToDelete" assignTo="{!arinvtxnToDelete}" value=""/>
 	</apex:actionFunction>
    <apex:actionFunction name="refreshBatch2" action="{!refreshBatch}" immediate="false" status="pleaseWaitStatus" oncomplete="cancelLoadJournals();"/>   
 	<apex:actionFunction name="refreshBatch" action="{!refreshBatch}" immediate="false" status="pleaseWaitStatus"  reRender="fm" oncomplete="cancelLoadJournals();">  
 		<apex:param name="childArinvtxnsUpdates" assignTo="{!childArinvtxnsUpdates}" value=""/>
    </apex:actionFunction>
 	<apex:actionFunction name="cancelBatch" action="{!cancelBatch}" immediate="false" status="pleaseWaitStatus" /> 
 	<apex:actionStatus onstart="showTopDialog('pleaseWaitPopup');" onstop="closeTopDialog();" id="pleaseWaitStatus"/>
 	<apex:actionFunction name="setEditURL" action="{!setEditURL}" immediate="false" status="pleaseWaitStatus" reRender="op_maintainMemosPopup" oncomplete="openFramePopup();">
    		<apex:param name="editLink" assignTo="{!editLink}" value=""/>
    		<apex:param name="armemoViewMode" assignTo="{!armemoViewMode}" value=""/>
    </apex:actionFunction>
    <apex:inputHidden id="errorMessageOP" value="{!errorMessage}" />
    <apex:outputPanel id="op_childArinvtxnsMessage">
    	<script>
    		var childArinvtxnsMessageNo = "{!childArinvtxnsMessage}";   
    	</script>
    </apex:outputPanel>
     
 	<apex:pageBlock title="{!$Label.rstkf__receivable_batch}" id="batchedit_pb" rendered="{!OR(createMode,viewMode)}">
		<apex:pageBlockButtons location="top">
        	<apex:outputPanel id="op_hdrbtns">
        		<apex:outputPanel id="op_hdrbtnsNew" rendered="{!!createMode}">
        			<input type="button" id="newMemo" value="{!$Label.New_Batch}" class="btn" onclick="newBatch();"/>
        		</apex:outputPanel>	
            	<apex:outputPanel id="op_hdrbtnsSave" rendered="{!(createMode)}">
                    <input type="button" id="saveMemo" value="{!$Label.btn_save}" class="btn" onclick="saveBatchCheck();"/>
                </apex:outputPanel>
                
                <apex:outputPanel id="op_hdrbtnsPost" rendered="{!AND(viewMode,(childArinvtxns > 0),batchARDrCrMemo.arinvh.rstkf__arinvh_poststatus__c != postedStatus)}">                      
                    <input type="button" id="postMemo" value="{!$Label.Post_Batch}" class="btn" onclick="postBatchCheck();"/>
                </apex:outputPanel>  
                
                <apex:outputPanel id="op_hdrbtnsDelete" rendered="{!AND(viewMode,!OR(batchARDrCrMemo.arinvh.rstkf__arinvh_poststatus__c == closedStatus,batchARDrCrMemo.arinvh.rstkf__arinvh_poststatus__c == postedStatus), !(arcntlPreventMemoDeletion && childArinvtxns > 0))}">                      
                    <input type="button" id="deleteMemo" value="{!$Label.Delete_Batch}" class="btn" onclick="deleteBatchCheck();"/>
                </apex:outputPanel>
                <apex:outputPanel id="op_hdrbtnsCancel" rendered="{!(createMode)}">
                	<input type="button" id="cancelMemo" value="{!$Label.btn_cancel}" class="btn" onclick="docancelBatch();"/>
                </apex:outputPanel>    
            </apex:outputPanel>
        </apex:pageBlockButtons>
                
        <apex:pageblocksection id="pb_edit" columns="{!columnLength}">
        	<apex:pageBlockSectionItem helpText="{!f.rstkf__arinvh_glcmp__c.inlineHelpText}">
            	<apex:outputLabel value="{!f.rstkf__arinvh_glcmp__c.label}"/>
                <apex:outputPanel >
                    	<apex:outputField value="{!o.rstkf__arinvh_glcmp__c}" />
                </apex:outputPanel>
            </apex:pageBlockSectionItem>
            <apex:pageBlockSectionItem rendered="{!viewMode}"/>
                        	
            <apex:pageBlockSectionItem helpText="{!f.rstkf__arinvh_batchno__c.inlineHelpText}" id="pb_edit_op_batchno">
                <apex:outputLabel value="{!f.rstkf__arinvh_batchno__c.label}"/>
                <apex:outputPanel >   
                    <!-- apex:outputField value="{!o.arinvh_batchno__c}" rendered="{!viewMode}"/> -->
                    <apex:outputField value="{!batchARDrCrMemo.arinvh.rstkf__arinvh_batchno__c}" rendered="{!viewMode}"/>
                    <apex:outputText value="{!$Label.rstkf__batchnumberassignedonsave}" rendered="{!createMode}"/>                     
                </apex:outputPanel>
            </apex:pageBlockSectionItem>                    
            <apex:pageBlockSectionItem helpText="{!f.rstkf__arinvh_poststatus__c.inlineHelpText}" id="pb_edit_op_poststatus" rendered="{!viewMode}">
                <apex:outputLabel value="{!f.rstkf__arinvh_poststatus__c.label}"/>
                <apex:outputPanel >                    
                    <!--  apex:outputField value="{!o.arinvh_poststatus__c}" />-->
                    <apex:outputField value="{!batchARDrCrMemo.arinvh.rstkf__arinvh_poststatus__c}" />
                </apex:outputPanel>
            </apex:pageBlockSectionItem>
            
            <apex:pageBlockSectionItem helpText="{!f.rstkf__arinvh_trandate__c.inlineHelpText}" id="pb_edit_op_trandate">
                <apex:outputLabel value="{!f.rstkf__arinvh_trandate__c.label}"/>
                <apex:outputPanel id="op_trandate">                         
                    <!--  apex:outputField value="{!o.rstkf__arinvh_trandate__c}" rendered="{!viewMode}"/>-->
                    <apex:outputField value="{!batchARDrCrMemo.arinvh.rstkf__arinvh_trandate__c}" rendered="{!viewMode}"/>
                    <apex:inputField id="arinvh_trandate__c" value="{!o.rstkf__arinvh_trandate__c}" rendered="{!createMode}" onchange="blockUI();checkGlyearDetails(this.value)"/>
                </apex:outputPanel>
            </apex:pageBlockSectionItem>                    
            <apex:pageBlockSectionItem helpText="{!f.rstkf__arinvh_postdate__c.inlineHelpText}" id="pb_edit_op_postdate" rendered="{!viewMode}">
                <apex:outputLabel value="{!f.rstkf__arinvh_postdate__c.label}"/>
                <apex:outputPanel >                    
                    <!--  apex:outputField value="{!o.arinvh_postdate__c}" />-->
                    <apex:outputField value="{!batchARDrCrMemo.arinvh.rstkf__arinvh_postdate__c}" />
                </apex:outputPanel>
            </apex:pageBlockSectionItem>
            
            <apex:pageBlockSectionItem helpText="{!f.rstkf__arinvh_glyear__c.inlineHelpText}" id="pb_edit_op_glyear">
                <apex:outputLabel value="{!f.rstkf__arinvh_glyear__c.label}"/>
                <apex:outputPanel id="pb_edit_op_glyear2">                         
                    <apex:outputText id="glyearOPT" value="" rendered="{!createMode}"/>
                    <!--  apex:outputField id="glyear" value="{!o.rstkf__arinvh_glyear__c}" rendered="{!viewMode}"/>-->
                    <apex:outputField id="glyear2" value="{!batchARDrCrMemo.arinvh.rstkf__arinvh_glyear__c}" rendered="{!viewMode}"/>
                    <apex:inputHidden id="glyearIPH" value="{!o.rstkf__arinvh_glyear__c}" rendered="{!createMode}"/>
                </apex:outputPanel>
            </apex:pageBlockSectionItem>                    
            <apex:pageBlockSectionItem helpText="{!f.rstkf__arinvh_postuser__c.inlineHelpText}" id="pb_edit_op_postuser" rendered="{!viewMode}">
                <apex:outputLabel value="{!f.rstkf__arinvh_postuser__c.label}"/>
                <apex:outputPanel >                    
                    <!--  apex:outputField value="{!o.arinvh_postuser__c}" />-->
                    <apex:outputField value="{!batchARDrCrMemo.arinvh.rstkf__arinvh_postuser__c}" />
                </apex:outputPanel>
            </apex:pageBlockSectionItem>
            
            <apex:pageBlockSectionItem helpText="{!f.rstkf__arinvh_period__c.inlineHelpText}" id="pb_edit_op_period">
                <apex:outputLabel value="{!f.rstkf__arinvh_period__c.label}"/>
                <apex:outputPanel id="pb_edit_op_period2">                         
                    <apex:outputText id="periodOPT" value="" rendered="{!createMode}"/>
                    <!-- apex:outputField id="period" value="{!o.rstkf__arinvh_period__c}" rendered="{!viewMode}"/> -->
                    <apex:outputField id="period2" value="{!batchARDrCrMemo.arinvh.rstkf__arinvh_period__c}" rendered="{!viewMode}"/>
                    <apex:inputHidden id="periodIPH" value="{!o.rstkf__arinvh_period__c}" rendered="{!createMode}"/>
                </apex:outputPanel>
            </apex:pageBlockSectionItem>                    
            <apex:pageBlockSectionItem helpText="{!f.rstkf__arinvh_salesdiv__c.inlineHelpText}" id="pb_edit_op_salesdiv" rendered="{!viewMode}">
                <apex:outputLabel value="{!f.rstkf__arinvh_salesdiv__c.label}"/>
                <apex:outputPanel >                    
                    <apex:outputField value="{!batchARDrCrMemo.arinvh.rstkf__arinvh_salesdiv__c}" />
                    <!--  apex:outputField value="{!o.arinvh_salesdiv__c}" />-->
                </apex:outputPanel>
            </apex:pageBlockSectionItem>
            
            <apex:pageBlockSectionItem helpText="{!f.rstkf__arinvh_batchsource__c.inlineHelpText}" id="pb_edit_op_batchsource" rendered="{!viewMode}">
                <apex:outputLabel value="{!f.rstkf__arinvh_batchsource__c.label}"/>
                <apex:outputPanel >                         
                    <!-- apex:outputField value="{!o.arinvh_batchsource__c}" /> -->
                    <apex:outputField value="{!batchARDrCrMemo.arinvh.rstkf__arinvh_batchsource__c}" />
                </apex:outputPanel>
            </apex:pageBlockSectionItem>                    
            <apex:pageBlockSectionItem helpText="{!f.rstkf__arinvh_soibatch__c.inlineHelpText}" id="pb_edit_op_soibatch" rendered="{!viewMode}">
                <apex:outputLabel value="{!f.rstkf__arinvh_soibatch__c.label}"/>
                <apex:outputPanel >                    
                    <!--  apex:outputField value="{!o.arinvh_soibatch__c}" />-->
                    <apex:outputField value="{!batchARDrCrMemo.arinvh.rstkf__arinvh_soibatch__c}" />
                </apex:outputPanel>
            </apex:pageBlockSectionItem>
            
            <apex:pageBlockSectionItem helpText="{!f.rstkf__arinvh_numbtxns__c.inlineHelpText}" id="pb_edit_op_numbtxns" >
                <apex:outputLabel value="{!f.rstkf__arinvh_numbtxns__c.label}"/>
                <apex:outputPanel >                    
                    <apex:outputField value="{!batchARDrCrMemo.arinvh.rstkf__arinvh_numbtxns__c}" />
                </apex:outputPanel>
            </apex:pageBlockSectionItem>
        </apex:pageblocksection>
        <apex:tabPanel switchType="client" selectedTab="tab_Custom" id="theTabPanel">
            <apex:tab label="{!customFieldTabName}" name="tab_Custom" id="tab_Custom" rendered="{!hasCustomFields}">
                <c:customFields cntr="{!controller}" cols="2"/>
            </apex:tab>
        </apex:tabPanel>   
     </apex:pageBlock>
     
     <apex:outputPanel id="memoList">
         <apex:pageBlock title="{!$Label.rstkf__receivable_transaction_list}" id="memos" mode="detail" rendered="{!viewMode}">
             <script>
                 var memoArray = []; counters = 0;  
                 var memosBlockTable;
                </script>
             <apex:outputPanel rendered="{!If(AND(OR(batchARDrCrMemo.arinvh.rstkf__arinvh_poststatus__c == postedStatus,batchARDrCrMemo.arinvh.rstkf__arinvh_poststatus__c == closedStatus,AND(batchARDrCrMemo.arinvh.rstkf__arinvh_poststatus__c == unbatchedPendingStatus,childArinvtxns > 0)),!isClosedForAdjustments),false,true)}">                                
             	<input type="button" id="addNewMemo" value="{!$Label.Add_New_Memo}" class="btn" onclick="editMemo('Create',false);"/>  
             </apex:outputPanel>	                  
             <apex:pageblocksection >
                 <apex:pageBlockSectionItem />
             </apex:pageblocksection>
             <apex:pageBlockTable id="memoData" value="{!aRDrCrMemos}" var="d" rendered="{!childArinvtxns > 0}">
                 <apex:column headerValue="{!$Label.rstkf__pagevalaction}" >
                    <!--  apex:inputCheckbox id="memoSelected" value="{!d.selected}" />-->
                     <apex:outputPanel >
                    	<apex:outputLink value="javascript:{}" onclick="editMemo('{!d.arinvtxn.id}',true)">{!$Label.rstkf__view}</apex:outputLink>                    	
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!If(AND(OR(batchARDrCrMemo.arinvh.rstkf__arinvh_poststatus__c == postedStatus,batchARDrCrMemo.arinvh.rstkf__arinvh_poststatus__c == closedStatus),!isClosedForAdjustments),false,true)}">
                    	<apex:outputText id="pipe" value=" | "/>
						<apex:outputLink value="javascript:{}" onclick="editMemo('{!d.arinvtxn.id}',false)">{!$Label.rstkf__edit}</apex:outputLink>
                		<apex:outputText id="pipe2" value=" | " rendered="{!!arcntlPreventMemoDeletion}"/>
                		<apex:outputLink value="javascript:{}" onclick="deleteARDrCrMemoCheck('{!d.arinvtxn.id}')" rendered="{!!arcntlPreventMemoDeletion}">{!$Label.rstkf__delete}</apex:outputLink>
					</apex:outputPanel>                   
                 </apex:column>
                    
                 <apex:column headerValue="{!f_arinvtxn.rstkf__arinvtxn_tranid__c.label}" >
                     <apex:outputText id="tranID" value="{!d.arinvtxn.rstkf__arinvtxn_tranid__c}"/>
                 </apex:column>
                 
                 <apex:column headerValue="{!f_arinvtxn.rstkf__arinvtxn_docno__c.label}" >
                     <apex:outputText id="document" value="{!d.arinvtxn.rstkf__arinvtxn_docno__c}"/>
                 </apex:column>
                 
                 <apex:column headerValue="{!f_arinvtxn.rstkf__arinvtxn_trantype__c.label}" >
                     <apex:outputField id="memoType" value="{!d.arinvtxn.rstkf__arinvtxn_trantype__c}"/>
                 </apex:column>
                 
                 <apex:column headerValue="{!f_arinvtxn.rstkf__arinvtxn_socust__c.label}" >
                     <apex:outputField id="customer" value="{!d.arinvtxn.rstkf__arinvtxn_socust__c}"/>
                 </apex:column>
                                                                   
                 <apex:column headerValue="{!f_arinvtxn.rstkf__arinvtxn_trandate__c.label}" >
                     <apex:outputField id="memodate" value="{!d.arinvtxn.rstkf__arinvtxn_trandate__c}"/>
                     <script>
                          memoArray[counters] = {
                             'selected': document.getElementById('{!$Component.memoSelected}'),
                             'batchNo': document.getElementById('{!$Component.batchNo}'),
                             'memoType': document.getElementById('{!$Component.memoType}'),
                             'customer': document.getElementById('{!$Component.customer}'),
                             'document': document.getElementById('{!$Component.document}'),
                             'tranID': document.getElementById('{!$Component.tranID}'),
                             'memodate': document.getElementById('{!$Component.memodate}'),
                             'selectedIndex' : counters                
                          }                        
                          counters++;
                          var memosBlockTable = document.getElementById('{!$Component.memoData}');
                     </script>
                 </apex:column>  
                 <apex:column rendered="{!arcntlApBatchOptions}">
                 	<a id="notesBtn{!d.arinvtxn.id}" href="#" onclick="return showNotesAndAttachments('{!d.arinvtxn.id}');"
                             style="font-weight:bold;">{!$Label.NotesAndAttachments}</a>
                 </apex:column>                 
             </apex:pageBlockTable>              
         </apex:pageBlock>
     </apex:outputPanel>
     <div id="pleaseWaitPopup" style="display:none">
     	<apex:outputPanel styleClass="topPopupBackground" layout="block"/>
        <apex:outputPanel styleClass="topPopup">
        	<apex:image url="{!$Resource.rstkf__busy}"/>
        </apex:outputPanel>
    </div>
    <!-- style="visibility:hidden" -->
    <button style="visibility:hidden" class="btnPopupNotesAttachments" rel="#winNotesAttachments"></button>
     <div class="modal" id="winNotesAttachments" style="height:330px;width:800px" >
         <apex:inputHidden id="notes_lineid__c" />
         <h2>{!$Label.Receivable_Transaction_Notes_and_Attachments}</h2>
         <iframe id="PopupNotesAttachmentsFrame" height="300px" width="100%" frameborder="0" src="about:blank"></iframe>
         <button id="btnPopupNotesAttachmentsClose" type="button" class="close" onclick="notes_close()"> Close </button>
     </div> 
 </apex:form>
 <apex:outputPanel id="op_maintainMemosPopup">
	<div id="maintainMemosPopup" style="display:none">
		<apex:pageBlock id="pb_maintainMemosPopup"  mode="detail">
			<apex:iframe src="{!editLink}" id="maintainMemosPopupId" width="100%" height="525px" scrolling="true"/>
			<p style="position:auto;text-align:left">
				<input type="button" name="popupCancelButton" class="btn" value="{!If(armemoViewMode = true,$Label.pageval_Close,$Label.Close_without_Saving)}" onclick="cancelLoadJournals()" tabIndex="9992"/>
			</p>
		</apex:pageBlock>
	</div>    
 </apex:outputPanel>
 <c:footerInclude cntr="{!controller}" hideNotesAndAttachments="{!arcntlApBatchOptions}"/> 
 <script>
    function openFramePopup() { 
     		showPopup('#maintainMemosPopup', 1250, 570);
	}
	
	function cancelLoadJournals() {
			unblockUI();
	}
	
	function docancelBatch() {
			document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_glyear:glyearIPH').value = '';
            document.getElementById('pg:fm:batchedit_pb:pb_edit:pb_edit_op_period:periodIPH').value = '';
			cancelBatch();
	}
	
	function showPopup(popName, popWidth, popHeight) {
		console.log(' jQuery(window).height() '+jQuery(window).height());
		console.log('jQuery(window).width() '+jQuery(window).width());
		console.log(' popWidth '+popWidth);
		console.log(' popHeight '+popHeight);
		
		var top = ((jQuery(window).height() - popHeight) / 2);
		var width = jQuery(window).width();
		var left = (width - popWidth) / 2;
		if (popWidth > width) {
			left = 0;
		} else {
			width = popWidth;
		}
		
		jQuery.blockUI({
			message: jQuery(popName),
			baseZ: 50,
			css: {
				backgroundColor:'#fff',
				left: (left + 'px'),
				top: (top + 'px'),
				width:(width + 'px'),
				height:(popHeight + 'px'),
				padding:'15px',
				textAlign:'left',
				fontSize:'1em',
				border:'2px solid #333',
				
				opacity:'1.0',
				'-moz-border-radius':'6px',
				'-webkit-border-radius':'6px',
				'-moz-box-shadow': '0 0 50px #ccc',
				'-webkit-box-shadow': '0 0 50x #ccc'
			}
		});
	}
	console.log('createMode is '+createMode);
	if(createMode == 'true') {
		console.log(' Now setting red color');
		addRequiredFieldDecoration("span[id*=':" + "op_trandate" + "']");	
	}
        
 </script>   
</apex:page>