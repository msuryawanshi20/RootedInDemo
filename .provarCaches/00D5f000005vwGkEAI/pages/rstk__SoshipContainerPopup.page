<apex:page id="pg" standardController="rstk__soship__c" extensions="rstk.ControllerExtnSOShipContainer" sideBar="false" showHeader="false">	
	<apex:variable var="c" value="{!rstk__soship__c}" />
    <apex:variable var="f" value="{!$ObjectType.rstk__soship__c.fields}" />
    <apex:variable var="f_el" value="{!$ObjectType.rstk__soshipline__c.fields}" />
    <apex:variable var="f_cel" value="{!$ObjectType.rstk__socontainel__c.fields}" />
    <apex:variable var="f_c" value="{!$ObjectType.rstk__socontainer__c.fields}" />
	
	<apex:includeScript value="{!$Resource.rstk__jquery144min}"/>
 	<apex:includeScript value="{!$Resource.rstk__BlockUI}" />
 	<apex:includeScript value="{!$Resource.rstk__sublist}"/>
  	<apex:stylesheet value="{!$Resource.rstk__ModalPopup_css}"/>
    <apex:includeScript value="{!$Resource.rstk__RowHandler_js}"/>
    <apex:includeScript value="{!$Resource.rstk__jquery_tablesorter_cli}" />
    <apex:stylesheet value="{!URLFOR($Resource.rstk__images, 'fixedTableSort.css')}" />
    <apex:includeScript value="{!$Resource.rstk__jquerytoolsoverlay}" />
    <apex:includeScript value="{!$Resource.rstk__hover_popup}" />
 	<apex:includeScript value="{!$Resource.rstk__common_client_lib}" />
    <apex:includeScript value="{!$Resource.rstk__common_client_lib2}" />
    <apex:pageMessages id="pageMessages"/>
    <style>
        .hidden{visibility:hidden;}
        .rcptinput{
            width:60px;
            text-align:right; 
        }
        .sort {display:inline}
        .numSort {display:inline}

            .modal {
                background-color:#fff;
                display:none;
                padding:15px;
                text-align:left;
                font-size:1em;
                border:2px solid #333;
            
                opacity:1.0;
                -moz-border-radius:6px;
                -webkit-border-radius:6px;
                -moz-box-shadow: 0 0 50px #ccc;
                -webkit-box-shadow: 0 0 50x #ccc;
            }
            
            .modal h2 {
                margin:0px;
                padding:10px 0 10px 45px;
                font-size:16px;
            }
            
            .modalComponents {
                color:#efefef;
                height:800px;
                z-index:50;
            }
             
    </style>
    
    <script>
    	window.pageParms = {!pageParms};
    	var socontypeJson = JSON.parse('{!socontypeJson}');
    </script>
    
	<apex:form id="fm">
		<apex:actionStatus onstart="showTopDialog('pleaseWaitPopup');" onstop="restoreFieldLocaleFormatting(); closeTopDialog();" id="pleaseWaitStatus"/>
		<apex:actionFunction name="splitShipperDetail" action="{!splitShipperDetail}" reRender="pageMessages,containerDetails" immediate="false" status="pleaseWaitStatus">
			<apex:param name="splitRecord" assignTo="{!splitRecordID}" value="" />
		</apex:actionFunction>	
		<apex:actionFunction name="addSoContainer" action="{!addSoContainer}" reRender="container" immediate="false" status="pleaseWaitStatus" oncomplete="addSelectOption();"/>
        <apex:actionFunction name="getScaleInformation" action="{!getScaleInformation}" reRender="container" immediate="false" status="pleaseWaitStatus" >
        	<apex:param name="containerIdClickedforScale" assignTo="{!containerIdClickedforScale}" value="" />
        </apex:actionFunction>
		<apex:actionFunction name="deleteSoContainer" action="{!deleteSoContainer}" reRender="container" immediate="false" status="pleaseWaitStatus" oncomplete="removeSelectOption();"/>
		<apex:actionFunction name="saveContainerAnDetails" action="{!saveContainerAnDetails}" reRender="container,containerDetails,errorMessage" immediate="false" status="pleaseWaitStatus" oncomplete="refreshParent();"/>
		<apex:outputPanel id="errorMessage">
            <script>
            	var errorMessage = "{!errorMessage}";
            </script>
        </apex:outputPanel>
		<apex:pageBlock title="{!$Label.rstk__pagetab_poship_containers}" id="container" mode="detail">
			<script>
               	var containersArray = []; counters = 0;  
               	var containersBlockTable;
               </script>
			<input type="button" id="containersAdd" value="{!$Label.pagebtn_soshipcontainerpopup_Add}" class="btn" onclick="removeFieldLocaleFormatting(); addSoContainer();"/>
			<input type="button" id="containersDelete" value="{!$Label.pagebtn_soshipcontainerpopup_Delete}" class="btn" onclick="removeFieldLocaleFormatting(); deleteSoContainerCheck();"/>
			
			<apex:pageBlockTable id="containerData" value="{!socontainersList}" var="d">
				<apex:column headerValue="{!$Label.rstk__sopreselection_select}">
                    <apex:inputCheckbox id="containersSelected" value="{!d.selected}" />
                </apex:column>
                   
				<apex:column headerValue="{!$Label.rstk__container_id}">
                    <apex:outputText id="containersID" value="{!d.socontainer.rstk__socontainer_container__c}"/>
                </apex:column>
                                
                <apex:column headerValue="{!$Label.rstk__container_type}">
                    <!--  c:largeSelectList id="socontainer_socontype__c" required="false" cntr="{!controller}" options="{!SocontypesList}" tabIndex="1" objKey="socontainer" value="{!d.socontainer.rstk__socontainer_socontype__c}" useValue="true"/-->                       	                        
                	<apex:selectList id="socontainer_socontype__c" value="{!d.socontainer.rstk__socontainer_socontype__c}" size="1" tabIndex="3" onchange="onchangeContype(this.value,this.id,{!d.socontainer.rstk__socontainer_container__c})">
            			<apex:selectOptions value="{!SocontypesList}"/>
        			</apex:selectList>


        			<apex:inputHidden id="altExtenalID" value="{!d.socontainer.rstk__altextid__c}"/>                	
                </apex:column>   
                <!--
                <apex:column headerValue="Net Weight">
                    <apex:inputText id="containersNetWeight" value="{!d.socontainer.socontainer_netwt__c}"/> 
                </apex:column>
                <apex:column headerValue="Tare Weight">
                    <apex:inputText html-decimals="6" id="containersTareWeight" value="{!d.socontainer.socontainer_tarewt__c}"/>      
                </apex:column>  
                <apex:column headerValue="{!$Label.rstk__socontainer_gross_weight}">
                    <apex:inputText html-decimals="6" id="containersGrossWeight" value="{!d.socontainer.rstk__socontainer_grosswt__c}" />
                </apex:column> -->
                <apex:column headerValue="{!$Label.rstk__socontainer_gross_weight}">
                    <apex:inputText html-decimals="6" id="containersGrossWeight" value="{!d.socontainer.rstk__socontainer_grosswt__c}" />
                    <input type="button" id="getScaleInformationButton" value="{!$Label.Get_Weight_From_Scale}" class="{!IF(!(isZenKraftEnabled),'btnDisabled','btn')}" onclick="getScaleInformationCheck('{!$Component.containersID}');"/>
                    <!--apex:outputLink id="getScaleInformation" onclick="alert('Hi');getScaleInformation();" value="" > {!$Label.Get_Weight_From_Scale}</apex:outputLink-->
                    <script>
                         containersArray[counters] = {
                         	'selected': document.getElementById('{!$Component.containersSelected}'),
                         	'socontainer_container__c': document.getElementById('{!$Component.socontainer_socontype__c}'),
                         	'socontainer_grosswt__c': document.getElementById('{!$Component.containersGrossWeight}'),
                         	'selectedIndexConType': document.getElementById('{!$Component.socontainer_socontype__c}').selectedIndex,
                         	'containersID': document.getElementById('{!$Component.containersID}'),
                         	'altExtenalID': document.getElementById('{!$Component.altExtenalID}'),
                            'getweightFromScale' : document.getElementById('{!$Component.getScaleInformationButton}'),
                         }                        
                         counters++;
                         var containersBlockTable = document.getElementById('{!$Component.containerData}');
                    </script>
                </apex:column>
                <!--
				
                <apex:column headerValue="{!$Label.Get_Weight_From_Scale}">
                    <apex:outputLink id="getScaleInformation" onclick="window.open('/apex/getScaleInformation');" value="{!$Label.Get_Weight_From_Scale}" > {!$Label.Get_Weight_From_Scale}</apex:outputLink>
                </apex:column> -->
			</apex:pageBlockTable>	      					
		  </apex:pageBlock>
		
		  <apex:pageBlock title="{!$Label.rstk__container_details}" id="details" mode="detail">
				<script>
                var containerDetailsArray = []; counter = 0;  
                var containerDetailsBlockTable;
                //   
                </script>
				<apex:pageBlockTable id="containerDetails" value="{!containerDetails}" var="d">
                 	<apex:column headerValue="{!$Label.rstk__containerid}">
                        <!--  c:largeSelectList id="socontainer_container__c" required="false" cntr="{!controller}" options="{!ContainerList}" tabIndex="1" objKey="socontainer" value="{!d.container}" useValue="true"/-->                       
                    	<apex:selectList id="socontainer_container__c" value="{!d.container}" size="1" tabIndex="3" onchange="containerIdChanged(this.value,{!d.counter},this.id);">
            				<apex:selectOptions value="{!ContainerList}"/>
        				</apex:selectList>
                    </apex:column>
    
                    <apex:column headerValue="{!$Label.rstk__line}">
                        <apex:outputText id="containersDetailsLine" value="{!d.line}"/>
                    </apex:column>
                    
                    <apex:column headerValue="{!$Label.rstk__product1}" style="width:150px">
                        <apex:outputText id="containersDetailsProduct" value="{!d.product}" style="width:150px"/>
                    </apex:column>
                    
                    <apex:column headerValue="{!$Label.rstk__item}" style="width:150px">
                        <apex:outputText id="containersDetailsItem" value="{!d.inventoryItem}" style="width:150px"/>
                    </apex:column>                    
                                        
                    <apex:column headerValue="{!$Label.rstk__packqty}">
                        <apex:outputText id="containersDetailsShpQty" html-decimals="2" value="{!d.totalShipperQuantity}" />
                     </apex:column>
                    
                    <apex:column headerValue="{!$Label.rstk__qtyavail}">
                        <apex:outputText id="containersDetailsQtyAvail" html-decimals="2" value="{!d.qtyAvailableForThisContainer}" />
                    </apex:column>
                    
                    <apex:column headerValue="{!$Label.rstk__qtyinthiscontainer}" style="width:100px">
                        <apex:inputText html-decimals="6" id="containersDetailsInThisContainer" value="{!d.qtyinThisContainer}" onchange="onchangeCheck(this.value,{!d.counter},this.id)" style="width:100px;text-align:right;"/>
                    </apex:column>
                    
                    <apex:column headerValue="{!f_cel.rstk__socontainel_tarewt__c.label}" style="width:100px">
                        <apex:inputText html-decimals="6" id="containersDetailstarewt" value="{!d.tareWeight}" onchange="onchangeCheckTareWt(this.value,{!d.counter},this.id)" style="width:100px;text-align:right;"/>
                    </apex:column>
                    
                    <apex:column headerValue="{!f_cel.rstk__socontainel_netwt__c.label}" style="width:100px">
                        <apex:inputText html-decimals="6" id="containersDetailsnetwt" value="{!d.netWeight}" style="width:100px;text-align:right;"/>	                        
                    </apex:column>  
                    
                    <apex:column headerValue="">
                    	<apex:inputHidden id="containersDetailsunitWeight" value="{!d.unitWeight}"/>                    	
                        <input type="button" id="Btn{!d.counter}" value="{!$Label.pagebtn_soshipcontainerpopup_SplitShipperDetail}" class="btn" onclick="validateContainerDetails(this.id);"/>
                    	 <script>
                    	 var BtnCounter = "{!d.counter}";
                         containerDetailsArray[counter] = {
	                         'socontainer_container__c': document.getElementById('{!$Component.socontainer_container__c}'),
	                         'BtnCounter': BtnCounter,
	                         'containersDetailsunitWeight': document.getElementById('{!$Component.containersDetailsunitWeight}'),
	                         'containersDetailsID': document.getElementById('{!$Component.containersDetailsID}'),
	                         'containersDetailsLine': document.getElementById('{!$Component.containersDetailsLine}'),
	                         'containersDetailsProduct': document.getElementById('{!$Component.containersDetailsProduct}'),
	                         'containersDetailsItem': document.getElementById('{!$Component.containersDetailsItem}'),
	                         'containersDetailsShpQty': document.getElementById('{!$Component.containersDetailsShpQty}'),
	                         'containersDetailsQtyAvail': document.getElementById('{!$Component.containersDetailsQtyAvail}'),
	                         'containersDetailsInThisContainer': document.getElementById('{!$Component.containersDetailsInThisContainer}'),
	                         'containersDetailstarewt': document.getElementById('{!$Component.containersDetailstarewt}'),
	                         'containersDetailsnetwt': document.getElementById('{!$Component.containersDetailsnetwt}')
	                         		                                                 
                         }                   
                         counter++;
                         var containerDetailsBlockTable = document.getElementById('{!$Component.containerDetails}');
                         </script>
                    </apex:column>                
            	</apex:pageBlockTable>   
            	
            	<input type="button" id="SaveContainerDetails" value="{!$Label.pagebtn_soshipcontainerpopup_Save}" class="btn" onclick="checkforSaving();"/>
           	</apex:pageBlock>
        <script>

        	var shipperId = "{!shipperId}";
        	
        	function getScaleInformationCheck(idclicked) {
                console.log(' idclicked ',idclicked);
                var containerIdclicked  = document.getElementById(idclicked).innerHTML;
                console.log(' containerIdclicked ',containerIdclicked);
                console.log(' containersArray ',containersArray);
                var isZenKraftEnabled = {!isZenKraftEnabled};
                console.log(' isZenKraftEnabled '+isZenKraftEnabled);
                if(isZenKraftEnabled == true) {
                    getScaleInformation(containerIdclicked); 
                }
            }    
                
        	function deleteSoContainerCheck(value,id,container) {
        		console.log(' containersArray ',containersArray);
        		var selected = false;
        		for (var i=0; i< containersArray.length; i++) {	
        		console.log('defaultValue '+containersArray[i].selected.checked);
        		console.log('innerHTML '+containersArray[i].selected.innerHTML);
        		       			
        			if (containersArray[i].selected.checked == true) {
        				selected = true;
        			}
        		}
        		
        		if (selected == false) {
        			alert("{!$Label.PleaseselectatleastoneContainertodelete}");
        		} else {
        			deleteSoContainer();        			
        		}
        	}
        	
        	function onchangeContype (value,id,container) {
        		console.log(' value '+value);
        		console.log(' containersArray ',containersArray);
        		console.log(' container : '+container);
        		console.log(' id : '+id);
        		
        		var containertocheck;
        		var selectedIndexs;
        		var contypetomodify;
        		for (var i=0; i< containersArray.length; i++) {	
        			console.log(' i '+i+' selectedIndexs '+(containersArray[i].socontainer_container__c).selectedIndex);
        			if((containersArray[i].socontainer_container__c).id == id){
        				containertocheck = containersArray[i].containersID.innerHTML;
        				selectedIndexs = containersArray[i].selectedIndexConType;
        				contypetomodify = i;
        			}
        		}
        		console.log(' selectedIndexs : '+selectedIndexs);
        		console.log(' contypetomodify : '+contypetomodify);
        		for (var i=0; i< containerDetailsArray.length; i++) {
        			console.log(' socontainer_container__c '+ containerDetailsArray[i].socontainer_container__c.innerHTML);
        			console.log(' index '+(containerDetailsArray[i].socontainer_container__c).selectedIndex);
        			console.log('selected '+(containerDetailsArray[i].socontainer_container__c).options[(containerDetailsArray[i].socontainer_container__c).selectedIndex].text);
        			if (selectedIndexs != 0 && containertocheck == (containerDetailsArray[i].socontainer_container__c).options[(containerDetailsArray[i].socontainer_container__c).selectedIndex].text) {
        				(containersArray[contypetomodify].socontainer_container__c).selectedIndex = selectedIndexs;
        				document.getElementById((containersArray[contypetomodify].socontainer_container__c).id).selectedIndex = selectedIndexs;
        				alert("{!$Label.ContainertypecannotbechangedasitisusedinContainerDetails}");
        			} else {
        				containersArray[contypetomodify].selectedIndexConType = (containersArray[contypetomodify].socontainer_container__c).selectedIndex;
        			}        		
        		}
        		
        	}
        	
        	function containerIdChanged(value, counter, id) {
        		console.log('value: ', value);
        		console.log('counter: ', counter);
        		console.log('id: ', id);
        		
        		var containertocheck;
        		var selectedIndexs;
        		var contypetomodify;
        		var containerIdEl = document.getElementById(id);
        		var containerOptions = containerIdEl.options;
        		for(var i = 0; i < containerOptions.length; i++) {
        			if(containerOptions[i].value == value) {
        				console.log('selected: ' + containerOptions[i].innerHTML);	
        				containertocheck = containerOptions[i].innerHTML;
        				//selectedIndexs = containersArray[i].selectedIndexConType;
        				contypetomodify = i;
        			}
        		}
        		
        		var socontypeId;
        		for(var i = 0; i < containersArray.length; i++) {
        			if(containersArray[i].containersID.innerText == containertocheck) {
        				console.log('containersID: ' + containersArray[i].containersID.innerText);
        				console.log('socontainer_container__c: ' + containersArray[i].socontainer_container__c.value);
        				socontypeId = containersArray[i].socontainer_container__c.value;
        			}
        		}
        		
        		var tarewt = 0;
        		for(var i = 0; i < socontypeJson.length; i++) {
        			var socontypeObj  = socontypeJson[i];
        			if(socontypeObj.Id == socontypeId) {
        				if(sobjectValue(socontypeObj,'socontype_tarewt__c') != undefined) {
        					tarewt = sobjectValue(socontypeObj,'socontype_tarewt__c');
        				}
        				break;	
        			}
        		}
        		
        		
        		for (var i=0; i< containerDetailsArray.length; i++) {
        			if(containertocheck == (containerDetailsArray[i].socontainer_container__c).options[(containerDetailsArray[i].socontainer_container__c).selectedIndex].text) {
        				containerDetailsArray[i].containersDetailstarewt.value = tarewt;
        			}
        		}
        		
        	}
        	
        	function onchangeCheck(value, counter,id){
        		
        		var oldValue;
        		console.log(' containerDetailsArray '+containerDetailsArray);
        		for (var i=0; i< containerDetailsArray.length; i++) {
        			console.log('btcounter '+containerDetailsArray[i].BtnCounter);
        			console.log('tcounter '+containerDetailsArray[i].containersDetailsInThisContainer.defaultValue);
        			if (parseInt(containerDetailsArray[i].BtnCounter) == parseInt(counter)) {
        				var newValue = parseLocaleFloat(value);
        				var qtyAvail = parseLocaleFloat(containerDetailsArray[i].containersDetailsQtyAvail.innerText);
        				if(newValue < 0 || newValue > qtyAvail) {
        					oldValue = containerDetailsArray[i].containersDetailsInThisContainer.defaultValue;
        					document.getElementById(id).value = formatLocaleFloat(parseFloat(oldValue));
        					alert("{!$Label.QuantitycannotbelessthanzeroandgreaterthanQuantityAvailable}");        					
        				} else {
        					containerDetailsArray[i].containersDetailsInThisContainer.defaultValue = value;
        					if( containerDetailsArray[i].containersDetailsunitWeight.defaultValue > 0) {
        						var netW = fixRoundingErrors(newValue * parseFloat(containerDetailsArray[i].containersDetailsunitWeight.defaultValue));
        						document.getElementById((containerDetailsArray[i].containersDetailsnetwt).id).innerText = formatLocaleFloat(netW);
        					}
        				
        				}
        			}
        		}
        		return false;
        	}

			function fixRoundingErrors(qty) {
			  if (qty == null) {
			    return 0.0;
			  }
			  return 1.0 * qty.toFixed(7);
			}
        	
        	function onchangeCheckTareWt(value, counter,id){
        		var oldValue;
        		console.log(' containerDetailsArray '+containerDetailsArray);
        		for (var i=0; i< containerDetailsArray.length; i++) {
        			console.log('btcounter '+containerDetailsArray[i].BtnCounter);
        			console.log('tcounter '+containerDetailsArray[i].containersDetailstarewt.defaultValue);
        			if (parseInt(containerDetailsArray[i].BtnCounter) == parseInt(counter)) {
        				var newValue = parseLocaleFloat(value);
        				if(newValue < 0 ) {
        					oldValue = containerDetailsArray[i].containersDetailstarewt.defaultValue;
        					document.getElementById(id).value = oldValue;
        					alert("{!$Label.Tareweightcannotbelessthanzero}");        					
        				} else {
        					containerDetailsArray[i].containersDetailstarewt.defaultValue = value;
        				}
        			}
        		}
        		return false;
        		
        		
        	}
        	
        	function validateContainerDetails(ids) {
            	//alert('validateContainerDetails called '+ids);
            	console.log(containerDetailsArray);
             	console.log(containerDetailsArray.length);
               	console.log(containerDetailsArray[0]);
            	console.log(containerDetailsArray[0].BtnCounter);
            	console.log('innerHTML'+containerDetailsArray[0].containersDetailsInThisContainer.innerHTML);
            	console.log('defaultValue'+containerDetailsArray[0].containersDetailsInThisContainer.defaultValue);            	
            	console.log('innerHTML'+containerDetailsArray[0].containersDetailsQtyAvail.innerHTML);
            	console.log('defaultValue'+containerDetailsArray[0].containersDetailsQtyAvail.defaultValue);
            	
            	var BtnCounterString = ids.replace('Btn','');
            	console.log('BtnCounterString'+BtnCounterString);
            	for (var i=0; i< containerDetailsArray.length; i++) {
            		console.log(' containersDetailsInThisContainer '+containerDetailsArray[i].containersDetailsInThisContainer.defaultValue);
            		console.log(' containersDetailsQtyAvail '+containerDetailsArray[i].containersDetailsQtyAvail.defaultValue);
   					 if (parseInt(containerDetailsArray[i].BtnCounter) == parseInt(BtnCounterString)) {
   					 	if (parseInt(containerDetailsArray[i].containersDetailsInThisContainer.defaultValue) == 0 ) {
   					 		alert("{!$Label.MustspecifytheQuantitytoStayonthecurrentrow}");
   					 		return false;
   					 	}
   					 	
   					 	if (parseLocaleFloat(containerDetailsArray[i].containersDetailsInThisContainer.defaultValue) == parseLocaleFloat(containerDetailsArray[i].containersDetailsQtyAvail.innerHTML)) {
   					 		alert("{!$Label.QuantityspecifiedtostayonthecurrentrowmustbelessthantheQtyAvailabletobeabletospl}");
   					 		return false;
   					 	}
   					 }
  				}
  				removeFieldLocaleFormatting();
                splitShipperDetail(ids);
            }
        	
        	function refreshParent() {
        	//	window.parent.location.reload(); 
                console.log('errorMessage '+errorMessage);
                if(errorMessage != '') {
                    alert(errorMessage);
                }    
        	}
        	
        	function checkforSaving(){
        		//alert('Save clicked');
        		
        		for (var i=0; i< containersArray.length; i++) {
        			console.log(' i '+i+' selectedIndexs '+(containersArray[i].socontainer_container__c).selectedIndex);
        			if((containersArray[i].socontainer_container__c).selectedIndex < 1){
        				alert("{!$Label.ContainerTypeReqd}");
        				(containersArray[i].socontainer_container__c).focus();
        				return false;
        			}
        		}
        		removeFieldLocaleFormatting();
        		saveContainerAnDetails();
        	}
        	
        	function addSelectOption(){
            
            	if(containerDetailsArray != null) {
            		for(var arrayCounter =0; arrayCounter < containerDetailsArray.length ; arrayCounter ++) {           		
             			var selectElement = containerDetailsArray[arrayCounter].socontainer_container__c;             			            			
             			//selectElement = findChildNode(spanElement, 'SELECT');
             			if(selectElement.length > 0)
			        	{
			      			var opt = document.createElement('option');
			            	opt.value = containersArray[selectElement.length - 1].altExtenalID.value ;
			            	opt.innerHTML = containersArray[selectElement.length - 1].containersID.innerHTML ;
	            			selectElement.appendChild(opt);	
			        	}			        	
            		}
	            }     
            
            }
            
            function removeSelectOption(){       
            	//alert('inside removeSelectOption '+containerDetailsArray.length);
                 	
            	if(containerDetailsArray != null) {
            		for(var arrayCounter =0; arrayCounter < containerDetailsArray.length ; arrayCounter ++) {
             			var selectElement = containerDetailsArray[arrayCounter].socontainer_container__c;            			
             			//selectElement = findChildNode(spanElement, 'SELECT');
             			//alert('selectElement.length '+selectElement.length);
             			for(var i = selectElement.length - 1; i > 0 ; i--)
				        {
				        	var deleteFlag = 0;
				        	for(var j = 0; j < containersArray.length; j++)
				        	{
				        		console.log('selectElement value '+selectElement[i].value+ 'selectElement innerHTML '+selectElement[i].innerHTML+' containersArray innerHTML  ' +containersArray[j].containersID.innerHTML);
				        		
						        if(selectElement[i].innerHTML == containersArray[j].containersID.innerHTML || selectElement[i].value == '')
						        {   
						            deleteFlag = 1;
						        }
						    }
						    if ( (containersArray.length > 0 && deleteFlag == 0) || (containersArray.length == 0 && i > 0)) {
						    	//alert(selectElement[i].value + ' will be removed ');						    	
						    	selectElement.remove(i);						    	
						    }
				        }  	
            		}
	            }     
            }
            
			function removeFieldLocaleFormatting() {
			    if (containersArray != null) {
			       for (var arrayCounter =0; arrayCounter < containersArray.length ; arrayCounter ++) {
	                    var grossWeight = containersArray[arrayCounter].socontainer_grosswt__c;
	                    
	                    grossWeight.value = removeLocaleFormatting(grossWeight.value);
                   }
                }
            	if(containerDetailsArray != null) {
            		for(var arrayCounter =0; arrayCounter < containerDetailsArray.length ; arrayCounter ++) {
             			var qtyIncontainer = containerDetailsArray[arrayCounter].containersDetailsInThisContainer;
             			var tareWeight = containerDetailsArray[arrayCounter].containersDetailstarewt;
	                    var netWeight = containerDetailsArray[arrayCounter].containersDetailsnetwt;
	                    
	                    qtyIncontainer.value = removeLocaleFormatting(qtyIncontainer.value); 
	                    tareWeight.value = removeLocaleFormatting(tareWeight.value); 
	                    netWeight.value = removeLocaleFormatting(netWeight.value); 
            		}
            	}
            }
			
			function restoreFieldLocaleFormatting() {
			    if (containersArray != null) {
			       for (var arrayCounter =0; arrayCounter < containersArray.length ; arrayCounter ++) {
	                    var grossWeight = containersArray[arrayCounter].socontainer_grosswt__c;
	                    
	                    grossWeight.value = formatLocaleFloat(parseFloat(grossWeight.value), 6);
                   }
                }
            	if(containerDetailsArray != null) {
            		for(var arrayCounter =0; arrayCounter < containerDetailsArray.length ; arrayCounter ++) {
             			var qtyIncontainer = containerDetailsArray[arrayCounter].containersDetailsInThisContainer;
             			var tareWeight = containerDetailsArray[arrayCounter].containersDetailstarewt;
	                    var netWeight = containerDetailsArray[arrayCounter].containersDetailsnetwt;
	                    
	                    qtyIncontainer.value = formatLocaleFloat(parseFloat(qtyIncontainer.value), 6); 
	                    tareWeight.value = formatLocaleFloat(parseFloat(tareWeight.value), 6); 
	                    netWeight.value = formatLocaleFloat(parseFloat(netWeight.value), 6); 
            		}
            	}
			}


        
            jQuery(function() {
               formatLocaleOutputFields();
            });
        </script> 
        	    	
	    <div id="pleaseWaitPopup" style="display:none">
	     	<apex:outputPanel styleClass="topPopupBackground" layout="block"/>
	        <apex:outputPanel styleClass="topPopup">
	        	<apex:image url="{!$Resource.rstk__busy}"/>
	        </apex:outputPanel>
	    </div>
	</apex:form>
</apex:page>