<apex:page id="pg" standardController="rstk__menu__c" extensions="rstk.MenuBarController" sideBar="false" action="{!doBeforePageLoad}" title="{!$Label.rstk__rootstock}">
<apex:pageMessages id="pageMessages"/>
<html class="" lang="en">
<head>
<!--

	Import resources from zip file

-->
<apex:stylesheet value="{!URLFOR($Resource.rstk__rootstock_menu, '/css/main.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.rstk__rootstock_menu, '/js/jquery.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.rstk__rootstock_menu, '/js/handlebars.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.rstk__rootstock_menu, '/js/typeahead.js')}"/>
<!--

	Handlebar JS Templates

-->
<!-- Module Icon Template -->
<script id="menu-module-template" type="text/x-handlebars-template">
    <li id="{{id}}" draggable="false"><img align="middle" src="{{icon}}" draggable="false"></img><p>{{label}}</p></li>
</script>
<!-- Menu Item Template -->
<script id="menu-item-template" type="text/x-handlebars-template">
	<li style="position:relative; text-overflow:ellipsis;overflow-y:hidden;" draggable="false">
	<a style="width:20px;" class="mil" href="{{href}}" draggable="false" {{#if labelCropped}}title="{{labelFull}}"{{/if}}>{{label}}</a>
    {{#if showNewLink}}
    	<a href="{{newLink}}" style="float:right;padding:0 30px 0 30px;" draggable="false" title="{!$Label.Add_New}">
	    	<svg class="add_new" viewBox="0 0 200 200" style="width:12px;height:12px;" draggable="false">
				<g><line x1="100" y1="0" x2="100" y2="200"></line>
				<line x1="0" y1="100" x2="200" y2="100"></line></g>
			</svg> 
		</a>
    {{/if}}
    </li>
</script>
<!-- Menu Sub Section Header Template -->
<script id="menu-subsection-header-template" type="text/x-handlebars-template">
	<li class="subsection"><p><b>{{label}}</b></p></li>
</script>
<!-- Menu Item Header Template -->
<script id="menu-item-header-template"  type="text/x-handlebars-template">
	<img id="rstk_menu_item_header_icon" align="middle" src="{{icon}}" draggable="false" ></img>
	<p draggable="false" >{{label}} - Menu Items</p>
</script>
<!-- Search Result Item Template -->
<script id="search-result-item-template" type="text/x-handlebars-template">
	<div style="font-size:14px;position:relative;">
		<img id="rstk_menu_item_header_icon" align="middle" style="margin-left:5px;width:20px;height:20px;margin-top:0px;margin-right:5px;" src="{{icon}}" draggable="false"></img>
		<span style="text-transform: uppercase;font-family: ProximaNova, Arial, sans-serif;position:absolute;bottom:0px;">
			
			<span style="float:left;width:40px;min-height:20px;margin:0px;padding:0px;">
		    {{#if showNewLink}}
	    		<a href="{{newLink}}" style="float:right;position:absolute;bottom:5px;padding:0 5px 0 15px;draggable:none;" title="{!$Label.Add_New}">
		    	<svg class="add_new" viewBox="0 0 200 200" style="width:15px;height:15px;">
				<g>
				<line x1="100" y1="0" x2="100" y2="200"></line>
				<line x1="0" y1="100" x2="200" y2="100"></line>
				</g>
				</svg> 
				</a>
			{{else}}
			&nbsp;
    		{{/if}}
    		</span>
    		<p style="display:inline;">{{labelFull}}</p>
		</span>

		<span style="float:right;"> 
<p style="display:inline;">{{section}}</p></span>
	</div>
</script>
<!--

	Core Html

-->
<meta http-equiv="X-UA-Compatible" content="IE=edge"></meta>
<title>{!$Label.Rootstock_Menu}</title>
</head>
<body>
<div class="rstk_wrap">
	<div class="rstk_container">
		<!--

			Menu Header, Search Bar

		-->
		<div class="rstk_header">
			<div class="rstk_header_left">
				&nbsp;
			</div>
			<div id="scrollable-dropdown-menu">

			    <input id="multiple-datasets" class="twitter-typeahead" type="text" placeholder=" What can I help you find?"></input>
			</div>
			<div class="rstk_menu_settings">
				&nbsp;
			</div>
		</div>
		<!--

			Menu Icon Section

		-->
		<div id="rstk_menu_module_div" class="rstk_modules">
			<ul id="rstk_module_list" class="menu_sections"></ul>
		</div>
		<!--

			Menu Items

		-->
		<div id="rstk_menu_item_div" class="rstk_menu_items" style="display: none;">
			<div id="rstk_menu_item_header_div" draggable="false"></div>
			<ul id="rstk_menu_item_list" class="menu_items" draggable="false"></ul>
		</div>
		<!--

			Footer

		-->
		<div class="rstk_menu_footer">
		&nbsp;
		</div>
	</div>
</div>
<script>
var urlmap = new Map();
</script>
<apex:repeat value="{!columns}" var="col">
	<apex:repeat value="{!col.sections}" var="secn">
		<apex:repeat value="{!secn.subSections}" var="subsecn">
			<apex:repeat value="{!subsecn.items}" var="mi">
				<script>
				urlmap.set('{!mi.returnableHref}','{!URLFOR(mi.returnableHref)}');
				</script>
			</apex:repeat>
		</apex:repeat>
	</apex:repeat>
</apex:repeat>
</body>
</html>
<!--

	Menu Setup Script

-->
<script>
	var LAST_MENU_SECTION = 'mainMenuSectionLastSelection';
	var DEFAULT_ICON = 'sy_setup';
	var iconMap = {"m_rsmenu__c":"sy_setup",
		"ms_rootstock":"sy_setup",
        "ms_quality":"sy_setup",
        "ms_iblogicstics__c":"sy_setup",
		"ms_rootstockFinancials__c":"fin",
		"ms_drpprocessing__c":"inv_mgmt",
		"m_boc__c":"inv_move",
		"ms_salesordersu__c":"so",
		"ms_cpq__c":"cpq",
		"ms_projectcontrol__c": "proj_ctrl",
		"ms_mfgengineering__c": "eng"  ,
		"ms_forecastingmrp__c": "mat_plan",
		"ms_schedulingcapacityplanning__c": "sched",
		"ms_inventorytransactions__c": "inv_move",
		"ms_inventorymanagement__c": "inv_mgmt",
		"ms_requisitions__c": "req",
		"ms_purchasing__c": "purch",
		"ms_shopfloor__c": "shop",
		"ms_salesorder__c": "so",
		"ms_standardcosts__c": "std_cst",
		"ms_quickbooks__c": "fin",
		"ms_systemsetup__c":"sy_setup",
		"ms_workorders__c":"wo"};

	var imgUrlBase = "{!URLFOR($Resource.rootstock_menu, '/img/icon-75/')}";
	var packagePrefix = "{!packagePrefix}";
	var sectionKeyFieldName = packagePrefix + "appsecuritykey__c";
	var menuJson = {!menuJson};
	var menuSettingsJson = {!menuSettingsJson};
	var menuItemsInitialized = true;
	var MAX_ITEM_LABEL_LENGTH = 27;
	var pageName = "{!$CurrentPage.name}";
	// console.log('pagename: ' + pageName + ' menu settings: ' + JSON.stringify(menuSettingsJson));
	var sections = [];
	var searchItems = [];
	var modCnt = 1;
	$.each(menuJson, function( modIdx, modVal){

		$.each(modVal.sections, function( sectionIdx, sectionValue){
			var sectionKeyValue = sectionValue.sectionItem[sectionKeyFieldName];
			var iconName = iconMap[sectionKeyValue];
			if ((typeof(iconName) == 'undefined') || (iconName == null)){
                iconName = DEFAULT_ICON;
            }
			var iconUrl = imgUrlBase + iconName + ".png";
			var currSection = {label:sectionValue.label, count:sectionValue.itemCount, id:modCnt++, 
				icon:iconUrl, key: sectionKeyValue};
			var subSections = [];

			$.each(sectionValue.subSections, function(subSecIdx, subSecVal){
				var subSecItems = [];
				$.each(subSecVal.items, function(itemIdx, itemVal){
					var itemLabel = itemVal.label;
					var labelCropped = false;
					if(itemLabel.length > MAX_ITEM_LABEL_LENGTH){
						itemLabel = itemLabel.substring(0,MAX_ITEM_LABEL_LENGTH-1) + '...';
						labelCropped = true;
					}
					var currItem = {label:itemLabel,
						labelCropped: labelCropped,
						labelFull: itemVal.label,
						href:itemVal.returnableHref,
						icon: iconUrl,
						section:sectionValue.label,
						showNewLink: itemVal.showNewLink,
						newLink: itemVal.newLink};
					// console.log('item: ' + JSON.stringify(currItem));
					subSecItems.push(currItem);
					searchItems.push(currItem);
				});
				var currSubSect = {label:subSecVal.subName,items:subSecItems};
				subSections.push(currSubSect);
			});
			currSection.subSections = subSections;
			sections.push(currSection);

		});

	});

	var currSelection = "";
	var columnCount = 3;
	var MOD_SELECTION_CLASS = "chosen";


	function saveMenuSettings(menuSettings){
		Visualforce.remoting.Manager.invokeAction(
			'{!$RemoteAction.MenuBarController.saveMenuSettingsJson}',
			menuSettings, pageName,
			function(result, event){
				// console.log('result: ' + result + ' event: ' + JSON.stringify(event));
			},
			{escape: true}
        );
	}


	/*

		When a module icon is clicked populate the box below with the items associated with it.

	*/
	function module_click(event){
		var prevSelection = currSelection;
		//console.log("prev selection: " + currSelection );
		//console.log("click event - node id: " + event.data.id);
		currSelection = event.data.id;
		//console.log("curr selection: " + currSelection );
		var menuModuleList = $("#rstk_module_list");

		// Unmark any previous modules selection
		$.each(menuModuleList.children(), function(childIdx, childNode){
			$(childNode).removeClass(MOD_SELECTION_CLASS);
		});

		if ( prevSelection != currSelection && currSelection != ''){
			$(event.target).closest("li").addClass(MOD_SELECTION_CLASS);
		}

		// if same module was selected toggle display of menu items
		if ( prevSelection == currSelection || prevSelection == '' ){
			var menuItemDiv = $("#rstk_menu_item_div");
			if (!menuItemDiv.is(':visible')){
				
			}
			menuItemDiv.toggle();
			if ( prevSelection != '') {
				currSelection = '';
			}
		}

		// add class to node if current selection exists

		// Change menu items header
		var sourceItemsHeader = $("#menu-item-header-template").html();
		var compiledItemsHeader = Handlebars.compile(sourceItemsHeader);
		var itemHeaderData = {label: event.data.section.label, icon: event.data.section.icon};
		var itemHeaderHtml = compiledItemsHeader(event.data.section);
		var itemHeaderNode = $("#rstk_menu_item_header_div");
		itemHeaderNode.empty();
		itemHeaderNode.append(itemHeaderHtml);

		// Clear the menu items and replace
		var menuItemList = $("#rstk_menu_item_list");	
		menuItemList.empty();
		var sourceMenuItem = $("#menu-item-template").html();
		var compiledMenuItemTemplate = Handlebars.compile(sourceMenuItem);

		// compile template for subsection header
		var sourceMenuSubSectionHeader = $("#menu-subsection-header-template").html();
		var compiledMenuSubSectionHeader = Handlebars.compile(sourceMenuSubSectionHeader);

		// get count of items and subsections for offset calculations
		var listItemCount = 0;
		var subSectionCount = 0;
		$.each(event.data.section.subSections, function(subSecIdx, subSecVal){
			listItemCount += subSecVal.items.length; // counting subsection as 
			subSectionCount ++;
		});
		var totalItemCount = listItemCount;
		if (subSectionCount > 1){ // if there is more than one subsection display subsection headers
			totalItemCount += subSectionCount;
		}
		var nodeList = [];
		var modulusCounter = 0;
		var nextNodeIdx = 0;
		var startIdx = 0;
		var count = 0;

		// iterate over each sub section
		$.each(event.data.section.subSections, function(subSecIdx, subSecVal){
			// console.log("sub section idx: " + subSecIdx + " " + JSON.stringify(subSecVal));

			// add subsection header
			if (subSectionCount > 1){ // only display if there is more than one subsection
				var headerLabel = "---";
				if ((typeof(subSecVal.label) !== 'undefined') && (subSecVal.label !== null)){
					headerLabel = subSecVal.label;
				}
				var menuSubSectionHeaderHtml = compiledMenuSubSectionHeader( {label: headerLabel} );
				nodeList[nextNodeIdx] = menuSubSectionHeaderHtml;
				nextNodeIdx += columnCount;
				if (nextNodeIdx > totalItemCount - 1){
					nextNodeIdx = ++startIdx;
				}
			}

			// iterate over the items in this subsection
			$.each(subSecVal.items, function(itemIdx, itemVal){
				// console.log("item idx: " + itemIdx + " obj: " + JSON.stringify(itemVal));
				var menuItemHtml = compiledMenuItemTemplate(itemVal);
				nodeList[nextNodeIdx] = menuItemHtml;
				nextNodeIdx += columnCount;
				if (nextNodeIdx > totalItemCount - 1){
					nextNodeIdx = ++startIdx;
				}
				// nextNodeIdx = modulusCounter % totalItemCount - 1;
				// console.log("next node idx: " + nextNodeIdx);
			});

		});

		// add all the items from the array to the list node
		$.each(nodeList, function(itemIdx, itemVal){
			menuItemList.append(itemVal);
		});

		// save selection but not if initializing menu from last selected
		if (menuItemsInitialized){ 
			//console.log('section key: ' + event.data.section.key);
			saveMenuSettings(event.data.section.key, pageName);
		}
		menuItemsInitialized = true;
	}


	/* 

		Initial setup on document load/ ready

	*/
	$( document ).ready(function() {
		//console.log( "menu is building!" );
		var moduleList = $("#rstk_module_list"); // The node they get appended to
		var sourceModTemplate = $("#menu-module-template").html();
		var compiledModTemplate = Handlebars.compile(sourceModTemplate);

		// get key of last selected section if exists
		var hasLastSelected = false;
		var sectionLastSelectedKey = '';
		if (LAST_MENU_SECTION in menuSettingsJson){
			sectionLastSelectedKey = menuSettingsJson[LAST_MENU_SECTION];
			hasLastSelected = true;
		}


		$.each(sections, function( index, value ) {
			//console.log( "index: " + index + ", label: " + value.label );
			var modHtml = compiledModTemplate(value);
			moduleList.append(modHtml); // appends the html item to the list
			var modNode = $("#" + value.id); // finds the node we just appended by id
			modNode.click({id: value.id, section: value}, module_click); // passes correct data when clicked
			if (hasLastSelected && value.key == sectionLastSelectedKey){ // display menu items for last selection
				menuItemsInitialized = false;
				modNode.click();
			}
		});

		$('.twitter-typeahead').bind('typeahead:select', function(ev, suggestion) {
		  // console.log('Selection: ' + JSON.stringify(suggestion));
		  if(document.referrer.indexOf(".lightning.force.com") > 0) {
		  	var shref = suggestion.href;
		  	var url = urlmap.get(shref);
		  	if(url) {
		  		window.location.href = url;
		  	} else {
		  		window.location.href = suggestion.href;
		  	}
		  } else {
		  	window.location.href = suggestion.href;
		  }
		});

	});


/*

	Search Bar

*/
function moduleTokenizer(datum){
	return Bloodhound.tokenizers.whitespace(datum.label);
}
 
var menuItemSearch = new Bloodhound({
  datumTokenizer: moduleTokenizer,
  queryTokenizer: Bloodhound.tokenizers.whitespace,
  // `states` is an array of state names defined in "The Basics"
  local: searchItems
});

$(document).ready(function(){
	var sourceSearchResultItemTemplate = $("#search-result-item-template").html();
	var compiledSearchResultTemplate = Handlebars.compile(sourceSearchResultItemTemplate);
	$('#scrollable-dropdown-menu .twitter-typeahead').typeahead(
		{},
		{
			name: 'menu-item-search',
			limit: 25,
			source: menuItemSearch,
			display: 'value',
			templates: {
				//header: '<h3 class="section-name">Section</h3>',
				suggestion: compiledSearchResultTemplate
			}
		}
	);
});   
</script>
</apex:page>