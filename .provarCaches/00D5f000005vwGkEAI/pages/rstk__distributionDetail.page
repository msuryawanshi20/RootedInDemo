<apex:page standardController="rstk__soconpbdtl__c" extensions="rstk.ControllerExtnSoconpbdtl,rstk.RemoteQueryController" 
	action="{!doBeforePageLoad}" sideBar="false" showHeader="false">
	<apex:variable var="o" value="{!rstk__soconpbdtl__c}" />
	
	<c:standardHeader cntr="{!controller}"  enableAutocomplete="true" showHeader="false" />
    <apex:stylesheet value="{!$Resource.rstk__ModalPopup_css}"/>
    <apex:includeScript value="{!$Resource.rstk__RowHandler_js}"/>
    <script>
		
	</script>
	<apex:form id="fm">
	<apex:pageBlock id="pb" mode="detail">
	
 	
    <c:EditableGrid jsController="pbddist" data="{!SOCONPBDDISTGrid}" editable="{!isSoconpbddistGridEditable}" ispopup="false"/>
                <script>
                    var salesacc = [];
					var billingAmount ; 
					pbddist.onGridLoad = function() {
                        self = this;
                        salesacc.length = 0;
                        this.getVisibleRows().each(function (index, el) {
                           var row = jQuery(this);
                           var rowId = self.getRowValue(row, 'Id');
                           if (isEmpty(rowId)) rowId = pbddist.rowIds[index];
                             if (!isEmpty(rowId)) {
                             	salesacc[salesacc.length]="'"+ self.getRowValue(row, 'soconpbddist_salesacct__c')+"'";
                             	if(!billingAmount){
	                            	getBillingAmount(self.getRowValue(row, 'soconpbddist_soconpbdtl__c'));
	                            }
	                        }
                        });	
                    }
                    
                    pbddist.addRow = function(rowCallback) {
                       	self = this;
                       	pbddistHandler.prototype.addRow.call(self, rowCallback);
                      		this.getVisibleRows().each(function (index, el) {
                       	    var row = jQuery(this);
                       		var rowId = self.getRowValue(row, 'Id');
                      			if(rowId =='' && pbddist.getRowObj(row, 'soconpbddist_salesacct__c')[0].value == '' && salesacc.length > 0 ){
	                      			var soconpbdtls = execQuery("select soconpbdtl_soconpbill__r.soconpbill_socontract__r.socontract_div__c from soconpbdtl__c where id = '" + self.getRowValue(row, 'soconpbddist_soconpbdtl__c')  + "'");
	                      			if(soconpbdtls.length > 0){
	                      				pbddist.getRowObj(row, 'soconpbddist_salesacct__c')[0].length = 0;
		                       			pbddist.getRowObj(row, 'soconpbddist_salesacct__c')[0].options[0] = new Option("--None--", "");
		                       			var subsql = " and Id not IN (" +salesacc +")  ";
		                       			
		                       			var syaccs = execQuery("select Id, Name from syacc__c where syacc_div__c = '" + soconpbdtls[0].soconpbdtl_soconpbill__r.soconpbill_socontract__r.socontract_div__c + "' " + subsql +" and syacc_gltype_pl__c = 'Revenue' order by name");
										for(i=0; i<syaccs.length; i++) {
											pbddist.getRowObj(row, 'soconpbddist_salesacct__c')[0].options[pbddist.getRowObj(row, 'soconpbddist_salesacct__c')[0].length] = new Option( syaccs[i].Name,syaccs[i].Id, false, false);
										}
	                  				}
                      			}
                       		});
                      	}
                    
                    pbddist.validate = function() {
	                       	self = this;
	                       	var isvalid = true;
	                       	var totaltemppct = 0;
	                       	var totaltempamt = 0;
	                       this.getVisibleRows().each(function (index, el) {
                        		var row = jQuery(this);
                        		var pct = self.getRowValue(row, 'soconpbddist_pct__c');
                        		var amt = self.getRowValue(row, 'soconpbddist_amount__c');
                        		var acc = pbddist.getRowValue(row, 'soconpbddist_salesacct__c');
                        		
                        		if(!acc){
                        			alert('{!$Label.SalesAccountisRequired}');
                        			isvalid = false;
                                	return false;
                        		}
                        		 
                        		if(!pct && !amt){
                        			alert('{!$Label.TheAmountandPercentagefieldsarerelatedoneortheotherorbothmustbe}');
                        			isvalid = false;
                                	return false;
                        		}
                        		
                        		if(pct && toNumber((parseFloat(pct) + totaltemppct).toFixed(2)) > 100){
                        			alert('{!$Label.TotalPercentagecannotexceed100}');
                        			isvalid = false;
                        			self.setRowValue(row, 'soconpbddist_pct__c', ''); 
                        			self.setRowValue(row, 'soconpbddist_amount__c', ''); 
                                	return false;
                        		}else if(pct){
                        			totaltemppct += parseFloat(pct);
                        		} 
                        		
                        		if(amt && toNumber((parseFloat(amt) + totaltempamt).toFixed(4)) > billingAmount){
                        			alert('{!$Label.TotalAmountcannotexceedContractProductsforPurchasePrice}' );
                        			isvalid = false;
                        			self.setRowValue(row, 'soconpbddist_pct__c', ''); 
                        			self.setRowValue(row, 'soconpbddist_amount__c', ''); 
                                	return false;
                        		}else if(amt){
                        			totaltempamt += parseFloat(amt);
                        		}
                        		 
                            }); 
                        	return isvalid;
                        }
                    
                    function getBillingAmount(soconpbdtlId){
                    	var soconpbdtls = execQuery("select soconpbdtl_amount__c from soconpbdtl__c where id = '" + soconpbdtlId + "'");
                    	if(soconpbdtls.length > 0){
                    		billingAmount = soconpbdtls[0].soconpbdtl_amount__c;
                    	}
                    }
                    
                    pbddist.entryChanged = function(row, rowNum, name, value) {
                    	if(name == 'soconpbddist_salesacct__c'){
                    		var acc = pbddist.getRowValue(row, 'soconpbddist_salesacct__c');
                    	}
                    
                    	if (name == 'soconpbddist_amount__c') {
							var percentage = pbddist.getRowValue(row, 'soconpbddist_pct__c');
							var amount = pbddist.getRowValue(row, 'soconpbddist_amount__c');
							var soconpbdtlID = pbddist.getRowValue(row, 'soconpbddist_soconpbdtl__c');
							
							if(amount && ( isNaN(amount) || parseInt(amount) < 0)) {
								 alert('{!$Label.Amountcannotbelessthanzero}');
			                  	 pbddist.getRowObj(row, 'soconpbddist_amount__c').focus();
			                  	 pbddist.setRowValue(row, 'soconpbddist_amount__c', 0); 
			                  	 pbddist.setRowValue(row, 'soconpbddist_pct__c', 0); 
			                }else if(amount && (!percentage || ( parseFloat(percentage) == 0 || parseFloat(percentage) == 0.0))){
								pbddist.setRowValue(row, 'soconpbddist_pct__c', getPercentage(soconpbdtlID,amount));
								if( getPercentage(soconpbdtlID,amount) == 0){
	                				pbddist.setRowValue(row, 'soconpbddist_amount__c', 0);
	                			}else{
	                				verifyLimit(row);
	                			}
							}else if(percentage){
			                	pbddist.setRowValue(row, 'soconpbddist_amount__c', getAmount(soconpbdtlID,percentage));
			                	if( getAmount(soconpbdtlID,percentage) == 0){
	                				pbddist.setRowValue(row, 'soconpbddist_pct__c', 0);
	                			}else{
	                				verifyLimit(row);
	                			}
			                }
			            }
						
						if (name == 'soconpbddist_pct__c') {
							var percentage = pbddist.getRowValue(row, 'soconpbddist_pct__c');
							var amount = pbddist.getRowValue(row, 'soconpbddist_amount__c');
							var soconpbdtlID = pbddist.getRowValue(row, 'soconpbddist_soconpbdtl__c');
							
							if(percentage && (isNaN(percentage) || parseInt(percentage) < 0)) {
								 alert('{!$Label.Percentagecannotbelessthanzero}');
			                  	 pbddist.getRowObj(row, 'soconpbddist_pct__c').focus();
			                  	 pbddist.setRowValue(row, 'soconpbddist_pct__c', 0); 
			                  	 pbddist.setRowValue(row, 'soconpbddist_amount__c', 0); 
			                }else if(amount && (!percentage || ( parseFloat(percentage) == 0 || parseFloat(percentage) == 0.0))){
								pbddist.setRowValue(row, 'soconpbddist_amount__c', 0);
							}else if(percentage){
			                	pbddist.setRowValue(row, 'soconpbddist_amount__c', getAmount(soconpbdtlID,percentage));
			                	if( getAmount(soconpbdtlID,percentage) == 0){
	                				pbddist.setRowValue(row, 'soconpbddist_pct__c', 0);
	                			}else{
	                				verifyLimit(row);
	                			}
			                }
			            }
			        }
					
					function verifyLimit( rowToEdit){
						var totaltemppct = 0;
                       	var totaltempamt = 0;
                       pbddist.getVisibleRows().each(function (index, el) {
                       		var row = jQuery(this);
                       		var pct = pbddist.getRowValue(row, 'soconpbddist_pct__c');
                       		var amt = pbddist.getRowValue(row, 'soconpbddist_amount__c');
                       		
                       		if(pct && toNumber((parseFloat(pct) + totaltemppct).toFixed(2)) > 100){
                       			alert('{!$Label.TotalPercentagecannotexceed100}');
                       			isvalid = false;
                       			pbddist.setRowValue(rowToEdit, 'soconpbddist_pct__c', ''); 
                       			pbddist.setRowValue(rowToEdit, 'soconpbddist_amount__c', ''); 
                               	return false;
                       		}else if(pct){
                       			totaltemppct += parseFloat(pct);
                       		}
                       		
                       		if(amt && toNumber((parseFloat(amt) + totaltempamt).toFixed(4)) > billingAmount){
                       			alert('{!$Label.TotalAmountcannotexceedContractProductsforPurchasePrice}' );
                       			isvalid = false;
                       			pbddist.setRowValue(rowToEdit, 'soconpbddist_pct__c', ''); 
                       			pbddist.setRowValue(rowToEdit, 'soconpbddist_amount__c', ''); 
                               	return false;
                       		}else if(amt){
                       			totaltempamt += parseFloat(amt);
                       		}
                       }); 
                    }
					
					function getAmount(soconpbdtlId,pctValue){
						if(!billingAmount){
							getBillingAmount(soconpbdtlId);
						}
						return ( parseFloat(billingAmount) == 0 || parseFloat(billingAmount) == 0.0)? 0 : ((billingAmount * (pctValue/100)).toFixed(4));
					}
					
					function getPercentage(soconpbdtlId,amountValue){
						if(!billingAmount){
							getBillingAmount(soconpbdtlId);
						}
						return ( parseFloat(billingAmount) == 0 || parseFloat(billingAmount) == 0.0)? 0 : (((amountValue/billingAmount)*100).toFixed(2));
					}
					
				</script> 
	   
	</apex:pageBlock>
		     <div id="pleaseWaitPopup" style="display:none">
                 <apex:outputPanel styleClass="topPopupBackground" layout="block"/>
                 <apex:outputPanel styleClass="topPopup">
                    <apex:image url="{!$Resource.rstk__busy}"/>
                 </apex:outputPanel>
             </div>
	
	</apex:form>

   <c:footerInclude cntr="{!controller}" hideNotesAndAttachments="true"/>
</apex:page>