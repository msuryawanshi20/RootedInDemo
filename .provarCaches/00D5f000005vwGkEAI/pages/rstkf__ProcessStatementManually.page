<apex:page id="pg" docType="html-5.0" standardController="rstkf__customextf__c"  extensions="rstkf.ControllerExtnProcessStatementManually,rstkf.RemoteQueryController,rstkf.ControllerJobStatus" action="{!doBeforePageLoad}" showHeader="true" title="{!$Label.rstkf__pgtitle_processstatementmanually}">
	<apex:variable var="o" value="{!rstkf__customextf__c}" />
	<apex:variable var="f" value="{!$ObjectType.rstkf__customextf__c.fields}" />
	 <apex:variable var="f_glbankacct" value="{!$ObjectType.rstkf__glbankacct__c.fields}" />
    <apex:variable var="f_glbankstmth" value="{!$ObjectType.rstkf__glbankstmth__c.fields}" />
    
	<!-- kendo/common css references -->
	<apex:stylesheet value="{!URLFOR($Resource.rstkf__KendoUIStyle2018, '/KendoStyle/kendo.common.min.css')}" />
	<apex:stylesheet value="{!URLFOR($Resource.rstkf__KendoUIStyle2018, '/KendoStyle/kendo.bootstrap.min.css')}" />

	<!-- kendo/common js references -->
	<apex:includeScript value="{!$Resource.rstkf__jquery}" />
	<apex:includeScript value="{!URLFOR($Resource.rstkf__UnderscoreJS, 'underscore-min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.rstkf__KendoUIScript2018, '/KendoUIScript/kendo.all.min.js')}" />
	<apex:includeScript value="{!$Resource.rstkf__SecureFilters}" />
	<apex:includeScript value="{!$Resource.rstkf__Sanitize}" />
	<apex:includeScript value="{!$Resource.rstkf__Sanitize}" />
	<apex:includeScript value="{!$Resource.rstkf__RootstockCommon}" />
	<apex:includeScript value="{!$Resource.rstkf__GridActionListJS}" />
	
	<apex:stylesheet value="{!$Resource.rstkf__ModalPopup_css}"/>
    <apex:includeScript value="{!$Resource.rstkf__RowHandler_js}"/>

	<apex:variable var="o_customext" value="{!customextf}" />
	<apex:variable var="f_customext"
		value="{!$ObjectType.rstkf__customextf__c.fields}" />
	
	<apex:sectionHeader subtitle="{!$Label.rstkf__pgtitle_processstatementmanually}" help="{!helpUrl}"/>	
	<c:standardHeader cntr="{!controller}" displayListLink="false"
		title="{!$Label.rstkf__pgtitle_processstatementmanually}" enableAutocomplete="true" showHeader="false"/>

	<style>
		/* Page Template for the exported PDF */
		.page-template {
			font-family: "DejaVu Sans", "Arial", sans-serif;
			position: absolute;
			width: 100%;
			height: 100%;
			top: 0;
			left: 0;
		}
		
		.page-template .header {
			position: absolute;
			top: 30px;
			left: 30px;
			right: 30px;
			border-bottom: 1px solid #888;
			color: #888;
		}
		
		.page-template .footer {
			position: absolute;
			bottom: 30px;
			left: 30px;
			right: 30px;
			border-top: 1px solid #888;
			text-align: center;
			color: #888;
		}
		
		.page-template .watermark {
			font-weight: bold;
			font-size: 400%;
			text-align: center;
			margin-top: 30%;
			color: #aaaaaa;
			opacity: 0.1;
			transform: rotate(-35deg) scale(1.7, 1.5);
		}
		
		.box2 {
			display: inline-block;
			width: 300px;
			height: 300px;
			margin: 1em;
		}
		
		.modal {
		    display: none; /* Hidden by default */
		    position: fixed; /* Stay in place */
		    z-index: 2000; /* Sit on top */
		    left: 30%;
		    top: 30%;
		    width: 800px; 
		    height: 500px;
		    background-color: transparent;
		}
		
		/* Modal Content */
		.modal-content {
		    background-color: #fefefe;
		    margin: -100px;
		    padding: 15px;
		    border: 1px solid #888;
		    width: 800px;
		    height: 500px;
		}
		
		.overlay {
		    display: none; /* Hidden by default */
		    position: fixed; /* Stay in place */
		    z-index: 300;
		    left: 0;
		    top: 0;
		    width: 100%; 
		    height: 100%;
		    text-align: center;
		    background-color: rgba(0,0,0,0.4);
		}
		 
		.modalPopupX{
		     z-index: 30011;
		 }
		.popupBackgroundX{
		     z-index: 30010;
		}
		.ct{
		    text-align:center;
		}
		.Processing
		{
		    position: fixed;
		    background: url({!$Resource.busy});
		    background-repeat: no-repeat;
		    background-position: center;
		    width: 100%;
		    height: 100%;
		    z-index: 2004;
		    left: 0%;
		    top: 0%;
		}
		
		input:disabled {
		    background: #dddddd;
		}
		
		.sort {display:inline}
		.numSort {display:inline}
		
		.floatingStyle { 
		    background-color:#829DC0 !important;
		}
	</style>
	<apex:form id="fm">
	<apex:actionFunction name="getHeaderDetails" action="{!getHeaderDetails}" 
			onComplete="unblockUI();buildGrids();" 
			rerender="op_stmtheader,op_headerdetail,op_btns_reconciled_grid,op_btns_reconciliation_grid,pageMessages,op_buttons,op_vars, op_errormessage" 
			immediate="false"/>
    <apex:actionFunction name="undoAll" action="{!undoAll}" immediate="false" 
   			onComplete="unblockUI();buildGrids();"
   			rerender="op_stmtheader,op_headerdetail,op_btns_reconciled_grid,op_btns_reconciliation_grid,pageMessages,op_buttons,op_vars"/>
    <apex:actionFunction name="finalizeStatement" action="{!finalizeStatement}" 
  			onComplete="checkJobStatus();"
   			rerender="op_stmtheader,op_headerdetail,op_btns_reconciled_grid,op_btns_reconciliation_grid,pageMessages,op_buttons,op_vars,op_JobStatus, op_errormessage"
   			immediate="false"/>
    <apex:actionFunction name="reverseSelected" action="{!reverseSelected}" 
 			onComplete="unblockUI();doAfterReverseSelected();" 
  			rerender="op_stmtheader,op_headerdetail,op_btns_reconciled_grid,op_btns_reconciliation_grid,pageMessages,op_buttons,op_vars"
  			immediate="false">
  			<apex:param name="selectedForReverse" assignTo="{!selectedForReverse}" value=""/>			
	</apex:actionFunction>
	
		<apex:outputpanel id="op_vars">
			<script>
                var glbankacctId = '{!glbankacctId}';
                var glcmpId = '{!customextf.rstkf__custom_glcmp__c}';
                var isReverseSuccess = '{!isReverseSuccess}';
                var namespaceUU = '{!namespaceUU}';
            </script>
		</apex:outputpanel>
		<apex:outputPanel id="op_JobStatus">
            <input type="hidden" id="processlogId" value="{!processLogId}"/>
        </apex:outputPanel>
		<apex:outputPanel id="op_errormessage">
            <apex:outputPanel rendered="{!glbankstmth.rstkf__glbankstmth_status__c == 'Posted with Errors'}">
	            <span style="color: red; font-weight: bold; font-size: 130%;">
	                {!$Label.StmtPostedWithErrorsMessage}
	            </span>
            </apex:outputPanel>
        </apex:outputPanel>
		<apex:pageblock id="pb">
			<apex:pageBlockButtons location="top">
				<apex:outputPanel id="op_buttons">
		        <apex:commandButton id="New_Bank_Statement" value="{!$Label.rstkf__button_enter_new_bank_statement}" 
							onclick="openUploadStatementgridPopup(); return false;" /> 
				
				<apex:outputPanel rendered="{!glbankstmth != null && !glbankstmth.rstkf__glbankstmth_finalized__c}">
					<input type="button" id="MaintainStatementHeader" value="{!$Label.btn_UpdateStatementHeader}" 
						class="btn" onclick="showPopup('#popUpdateStatement', 600, 180);return false;" />
								
					<apex:commandButton id="MaintainStatementDetails" value="{!$Label.rstkf__btn_addsystemtransaction}" 
								onclick="openGlbankstmtdGridPopup(); return false;" />
								
					<input type="button" id="queryUnreconciledBtn" value="{!$Label.Btn_QueryReconciled}" class="btn" onclick="queryUnreconciled();"/>
					<input type="button" id="undoAllBtn" value="{!$Label.Btn_UndoAll}" class="btn" onclick="doUndoAll();"/>
				</apex:outputPanel>
				<apex:outputPanel rendered="{!glbankstmth != null && (!glbankstmth.rstkf__glbankstmth_finalized__c || glbankstmth.rstkf__glbankstmth_status__c == 'Posted with Errors')}">
					<input type="button" id="finalizeBtn" value="{!$Label.Btn_Finalize}" class="btn" onclick="doFinalize();"/>
				</apex:outputPanel>
				</apex:outputPanel>
		    </apex:pageBlockButtons>
		    
			<apex:pageBlockSection id="pbs_Main" showHeader="false" columns="1" collapsible="false">
				<apex:pageBlockSectionItem >
					<apex:outputLabel value="{!f.rstkf__custom_glcmp__c.label}" />
					<apex:outputField value="{!customextf.rstkf__custom_glcmp__c}" />
				</apex:pageBlockSectionItem>
				<apex:pageBlockSectionItem >
					<apex:outputLabel value="{!$Label.rstkf__statementheader}" />
					<apex:outputPanel id="op_stmtheader">
						<apex:selectList id="glbankacc_stmtheader__c"
							value="{!customextf.rstkf__glbankacc_stmtheader__c}" size="1"
							style="width:250px;" tabindex="15"
							onchange="getGlbankstmtdetail();">
							<apex:selectOptions value="{!glbankstmtHeaders}" />
						</apex:selectList>
					</apex:outputPanel>
				</apex:pageBlockSectionItem>
			</apex:pageBlockSection>
			
			<apex:pageBlockSection id="pbs_BankAccount" showHeader="false" columns="3" collapsible="false">
				
			</apex:pageBlockSection>
			<apex:outputPanel id="op_headerdetail">
				<apex:pageBlockSection id="pbs_headerdetail" showHeader="true" title="{!$Label.rstkf__title_statementdetails}" columns="3" collapsible="false">
	                    
	                    <apex:pageBlockSectionItem helpText="{!f.rstkf__custom_glcmp__c.inlineHelpText}">
				             <apex:outputLabel value="{!f.rstkf__custom_glcmp__c.label}"/>
				             <apex:outputField value="{!customextf.rstkf__custom_glcmp__c}" />
			            </apex:pageBlockSectionItem>
			            <apex:pageBlockSectionItem >
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem >
	                    </apex:pageBlockSectionItem>
	                    
	                    <apex:pageBlockSectionItem helpText="{!f_glbankacct.rstkf__glbankacct_name__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankacct.rstkf__glbankacct_name__c.label}" />
	                        <apex:outputField value="{!glbankacct.rstkf__glbankacct_name__c}" />
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_unclrddeptot__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_unclrddeptot__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_unclrddeptot__c}" />
	                    </apex:pageBlockSectionItem>
	                     <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_key__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_key__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_key__c}" />
	                    </apex:pageBlockSectionItem>
	                   
	                    <apex:pageBlockSectionItem helpText="{!f_glbankacct.rstkf__glbankacct_curr__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankacct.rstkf__glbankacct_curr__c.label}" />
	                        <apex:outputField value="{!glbankacct.rstkf__glbankacct_curr__c}" />
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_unclrdpaytot__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_unclrdpaytot__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_unclrdpaytot__c}" />
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_openingbal__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_openingbal__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_openingbal__c}" />
	                    </apex:pageBlockSectionItem>
	                    
	                    <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_fromdate__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_fromdate__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_fromdate__c}" />
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_unclrdxfertot__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_unclrdxfertot__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_unclrdxfertot__c}" />
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_addedtxnvalue__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_addedtxnvalue__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_addedtxnvalue__c}" />
	                    </apex:pageBlockSectionItem>
	                    
	                     <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_stmtdate__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_stmtdate__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_stmtdate__c}" />
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_calcendglhome__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_calcendglhome__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_calcendglhome__c}" />
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_recontxnvalue__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_recontxnvalue__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_recontxnvalue__c}" />
	                    </apex:pageBlockSectionItem>
	                    
	                   <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_status__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_status__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_status__c}" />
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_calcendglbank__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_calcendglbank__c.label}" />
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_calcendglbank__c}" />
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_endingbal__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_endingbal__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_endingbal__c}" />
	                    </apex:pageBlockSectionItem> 
	                    
	                    <apex:pageBlockSectionItem >
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem >
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_unreconciledhere__c.inlineHelpText}">
	                        <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_unreconciledhere__c.label}"/>
	                        <apex:outputField value="{!glbankstmth.rstkf__glbankstmth_unreconciledhere__c}" />
	                    </apex:pageBlockSectionItem> 
	                    
	                </apex:pageBlockSection>
                </apex:outputPanel>
			</apex:pageblock>
			
		
		<apex:pageBlock id="pb_reconciled_grid" >
			<apex:pageBlockButtons location="top">
				<apex:outputPanel id="op_btns_reconciliation_grid">
					<apex:commandButton id="Reconcile_Selected" value="Reconcile Selected" 
							onclick="saveReconciliation(); return false;" 
							rendered="{!glbankstmth != null && !glbankstmth.rstkf__glbankstmth_finalized__c}"/>
				</apex:outputPanel>
			</apex:pageBlockButtons>
			
            <apex:pageblocksection id="pbs_glbankstmtdGrid" title="{!$Label.rstkf__title_reconcilesystemtransactions}" collapsible="false" columns="1">
				<div class="grid-container">
					<div class="grid-message" style="white-space: pre" />
					<div id="StatementLinegrid" style="display: inline-block;height: 500px;"></div>
				</div>
			</apex:pageblocksection>
		</apex:pageBlock>
		
		<apex:pageBlock id="pb_reconciledGlbankstmtdGrid" >
			<apex:pageBlockButtons location="top">
				<apex:outputPanel id="op_btns_reconciled_grid">
					<apex:commandButton id="Reverse_Selected" value="Reverse Selected" 
							onclick="doReverseSelected(); return false;" 
							rendered="{!glbankstmth != null && !glbankstmth.rstkf__glbankstmth_finalized__c}"/>
				</apex:outputPanel>
			</apex:pageBlockButtons>
			
			<apex:pageblocksection id="pbs_reconciledGlbankstmtdGrid" columns="1" title="{!$Label.rstkf__btn_reconciledtransactions}" collapsible="false">
				<div class="grid-container">
					<div class="grid-message" style="white-space: pre" />
					<div id="reconciledGlbankstmtdGrid" style="display: inline-block;height: 500px;"></div>
				</div>
			</apex:pageblocksection>
		</apex:pageBlock>

	</apex:form>
	
	<apex:outputpanel id="op_glbankstmtdGrid_popup">
        <apex:outputpanel >
        <div id="glbankstmtd" style="display:none">
            <iframe id="popGlbankstmtdGrid" src="" width="100%" height="500px" seamless="true" frameborder="0" marginwidth="0" marginheight="0"></iframe>
        </div>
        </apex:outputpanel>
    </apex:outputpanel>
    
    <apex:outputpanel id="op_UploadStatementgrid_popup">
        <apex:outputpanel >
        <div id="glbankstmth" style="display:none">
            <iframe id="popUploadStatementgrid" src="" width="100%" height="500px" seamless="true" frameborder="0" marginwidth="0" marginheight="0"></iframe>
        </div>
        </apex:outputpanel>
    </apex:outputpanel>
    
    <apex:outputpanel id="op_updateStatement">    
		<div id="popUpdateStatement" style="display:none; z-index: 10;">
			<apex:pageMessages id="usPageMessages"/>
          	<apex:form id="fm2">
          	<apex:actionStatus id="statusProcessingUpdateStatement" startStyleClass="Processing"/>
          	<apex:actionFunction name="doClosePopup" action="{!closePopup}" immediate="false" status="statusProcessingUpdateStatement"/>
          	<apex:actionFunction name="saveStatementHeader" action="{!saveStatementHeader}" onComplete="" rerender="usPageMessages, op_popUpdateStatement" immediate="false" status="statusProcessingUpdateStatement"/>
          	<apex:pageBlock mode="detail" title="Maintain Statement">
            	<apex:pageBlockButtons location="top">
                  	<apex:commandButton value="{!$Label.rstkf__pagevalclose}" onclick="doClosePopup();return false;"/>
                  	<apex:commandButton value="{!$Label.rstkf__pagevalsave}" onclick="saveStatementHeader();return false;"/>
              	</apex:pageBlockButtons>
              	<apex:outputPanel id="op_popUpdateStatement">
                <apex:pageBlock id="pb_maintainStatement" mode="detail">
	                <apex:pageBlockSection >
	                	 <apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_stmtdate__c.inlineHelpText}">
		                    <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_stmtdate__c.label}"/>
		                    <apex:inputField value="{!glbankstmth.rstkf__glbankstmth_stmtdate__c}" />
		                </apex:pageBlockSectionItem>
	                	<apex:pageBlockSectionItem helpText="{!f_glbankstmth.rstkf__glbankstmth_endingbal__c.inlineHelpText}">
		                    <apex:outputLabel value="{!f_glbankstmth.rstkf__glbankstmth_endingbal__c.label}"/>
		                    <apex:inputField value="{!glbankstmth.rstkf__glbankstmth_endingbal__c}" />
		                </apex:pageBlockSectionItem>
	                </apex:pageBlockSection>
          		</apex:pageBlock>  
              	</apex:outputPanel>
          	</apex:pageBlock>
      		</apex:form>
      	</div>
	</apex:outputpanel>

 
	<c:footerInclude cntr="{!controller}" hideNotesAndAttachments="true" />

	<script>
		var UploadStatementgrid; 
		function openGlbankstmtdGridPopup() {
            var glbankstmtdFrame = jQuery('iframe[id*="popGlbankstmtdGrid"]')[0];
            glbankstmtdFrame.src = "/apex/GlbankstmtdGrid?glbankacctId=" + glbankacctId + "&glbankstmthId="+ glbankstmthId + "&invokedFrom=MANUAL";
            showPopup('#glbankstmtd', 1300, 570);
            
        }
        
        function closeGlbankstmtdGridPopup() {
        	getGlbankstmtdetail();
        }
        
        function openUploadStatementgridPopup() {
            var glbankstmtdFrame = jQuery('iframe[id*="popUploadStatementgrid"]')[0];
            glbankstmtdFrame.src = "/apex/initializeManualStmt?glbankacctId=" + glbankacctId;
            showPopup('#glbankstmth', 1200, 570);
            
        }	
	
        var glbankstmthId;
        function getGlbankstmtdetail() {
        	glbankstmthId = jQuery("select[id*=glbankacc_stmtheader__c")[0].value;
        	if(glbankstmthId.length == 0) {
        		alert('Please select a valid Statement Header');
        		return false;
        	}
        	
        	blockUI();
        	getHeaderDetails();
        	enableAllButtons();
        	jQuery("select[id*=glbankacc_stmtheader__c")[0].blur();
        }
        
        function buildGrids() {
        	glbankstmthId = jQuery("select[id*=glbankacc_stmtheader__c")[0].value;
        	if(glbankstmthId.length > 0) {
        		createReconciliationGrid(glbankstmthId);
        		createReconciledGlbankstmtdGrid(glbankacctId,glbankstmthId);	
        		reconciliationGrid.wrapper.show();
        		reconciledGlbankstmtdGrid.wrapper.show();
        	}
        	else {
        		reconciliationGrid.wrapper.hide();
        		reconciledGlbankstmtdGrid.wrapper.hide();
        	}
        	
        }
        
        function doUndoAll() {
            var confirmDelete = confirm("{!$Label.confirm_UndoAll}");
            if(confirmDelete == true) {
            	blockUI();
            	undoAll();
            }
        }
        
        function doFinalize() {
        	blockUI();
        	finalizeStatement();
        }
        
        function queryUnreconciled () {
        	glbankstmthId = jQuery("select[id*=glbankacc_stmtheader__c")[0].value;
        	createReconciliationGrid(glbankstmthId);
        	enableAllButtons();
        }
    
        var reconciliationGrid;
        var reconciliationDateFields;
        var reconciliationFIList;
        function createReconciliationGrid(glbankstmthId) {
        	var getReconciliationRecords = function(){
				var deferred = $.Deferred();
				Visualforce.remoting.Manager.invokeAction(
					'{!$RemoteAction.ControllerExtnProcessStatementManually.getReconciliationRecords}',
					glbankacctId,
					glbankstmthId,
					function (result, event) {
						deferred.resolve(result, event);
					},
					{escape: false}
				);  
	            return deferred.promise();        
            };
            
            $( "StatementLinegrid" ).empty();
            if(reconciliationGrid) {
            	reconciliationGrid.destroy();
            }

            // creating JE kendo grid
            reconciliationFIList = JSON.parse('{!JSENCODE(reconciliationFIListJson)}');
			reconciliationDateFields = RootstockErp.KendoGridOptions.GetDateFields(reconciliationFIList);
			var reconciliationConfig = '{!JSENCODE(reconciliationConfigJson)}'
			reconciliationGrid = $('#StatementLinegrid').kendoGridActionList({
				config: this.reconciliationConfig,
                fieldList: reconciliationFIList,
                dateFields: reconciliationDateFields,
                namespace: '{!namespaceUU}',
                getActionListFunction: getReconciliationRecords,
                editable: true,
                scrollable: true,
                modelIdField: 'reconciliation_glbanktxn__c', //since we are using a wrapper we need to pass the full path to the id here
                toolbarButtons: [],
                actionColumnButtons: []
            }).data('kendoGridActionList');
            
            
            //Bind Actions
            reconciliationGrid.wrapper.on("OnSaveReconciliationFailure", OnSaveReconciliationFailure); 
            reconciliationGrid.wrapper.on("OnSaveReconciliationSuccess", OnSaveReconciliationSuccess);
            
            reconciliationGrid.wrapper.on("click", ".grid-select-one", $.proxy(selectForReconcile, { gridObj: this.reconciliationGrid}));
            reconciliationGrid.wrapper.on("click", ".grid-select-all", $.proxy(selectAllForReconcile, { gridObj: this.reconciliationGrid}));
            reconciliationGrid.wrapper.on("click", "td[name=reconciliation_variance__c]", $.proxy(selectForReconcile, { gridObj: this.reconciliationGrid}));
            
            reconciliationGrid.bind('dataBound', reconciliationGridDataBound);
        }
        
        function reconciliationGridDataBound() {
        	enableAllButtons();
        }
        
        function OnSaveReconciliationSuccess() {
        	createReconciledGlbankstmtdGrid(glbankacctId,glbankstmthId);
        	enableAllButtons();
        	getHeaderDetails(); 
        }
        
        function OnSaveReconciliationFailure() {
        	enableAllButtons();
        }
        
        function selectAllForReconcile(e) {
        	console.log('selectAllForReconcile');
        	var self = this;
            var state = $(e.target).is(":checked");

            $.each(reconciliationGrid.dataSource.view(), function() {
                this['IsSelected__custom'] = state;
                doSelectForReconcileLogic(this);;
            });
            
        	reconciliationGrid.refresh();
        	enableAllButtons();
        }
        
        function selectForReconcile(e) {
        	console.log('selectForReconcile');
        	var row = $(e.currentTarget).closest("tr");
        	var selectedItem = reconciliationGrid.dataItem(row);
        	var state = $(e.target).is(":checked");
        	selectedItem['IsSelected__custom'] = state;
        	doSelectForReconcileLogic(selectedItem);
        	
        	kendoFastReDrawRow(reconciliationGrid, row);
        	enableAllButtons();
        }
        
        function doSelectForReconcileLogic(selectedItem) {
        	if(selectedItem.IsSelected__custom == true) {
        		selectedItem.reconciliation_bankdate__c = selectedItem.reconciliation_stmtdate__c;
        		selectedItem.reconciliation_reportedamt__c = selectedItem.reconciliation_viewbankamt__c;
        	}
        	else {
        		selectedItem.reconciliation_bankdate__c = '';
        		selectedItem.reconciliation_reportedamt__c = '';
        	}
        	
        	selectedItem.dirty = true;
        }
        
        function saveReconciliation() {
        	var options = {dateFields: reconciliationDateFields,
                saveAction: '{!$RemoteAction.ControllerExtnProcessStatementManually.saveReconciliation}'};
        	var messageElement = $("#StatementLinegrid").closest("div.grid-container").find("div.grid-message");
         	var gridUtils = new KendoGridUtils(reconciliationGrid, options);
         	if (!gridUtils.IsValid()) {
                e.preventDefault();
                return;
            }
                 
            RootstockErp.BlockUI(reconciliationGrid.element);
            var dateFields = options.dateFields;
            var selectedRecords = gridUtils.SelectedRows();
       		
       		for(var i = 0; i < selectedRecords.length; i++) {
       			selectedRecords[i].sobjectType = 'reconciliation__c';
            }
            
            if (selectedRecords.length == 0) {
				RootstockErp.Message("No records selected.", RootstockErp.MessageType.Info, messageElement);
            	RootstockErp.UnBlockUI(reconciliationGrid.element);
            	return;
       		}
             
            Visualforce.remoting.Manager.invokeAction(
				'{!$RemoteAction.ControllerExtnProcessStatementManually.saveReconciliation}',                              
				selectedRecords,
				glcmpId,
				glbankacctId,
				glbankstmthId,
				function (result, event) {
					RootstockErp.UnBlockUI(reconciliationGrid.element);
                    enableAllButtons();
                     if (event.type == 'exception') {
                         RootstockErp.Message(event.message, RootstockErp.MessageType.Error, messageElement);
                     } else {
                         if (result.success) {
                              //refresh the grid
                         reconciliationGrid.dataSource._destroyed = [];
                         reconciliationGrid.dataSource.read();
                                           
                              // trigger onsavesuccess
                         reconciliationGrid.element.trigger("OnSaveReconciliationSuccess");
                         RootstockErp.Messages(result.messages, messageElement);
                         }
                         else {
                             RootstockErp.Messages(result.messages, messageElement);
                              reconciliationGrid.element.trigger({
                                  type: "OnSaveReconciliationFailure",
                                  result: result,
                                  event: event
                              });
                          }
                      }
                 },
                 {escape: false}
             );
        }
        
        function doReverseSelected() {
        	items = [];
       		var sel = $("input:checked", reconciledGlbankstmtdGrid.tbody).closest("tr"); 
			$.each (sel, function(idx, row) {
				var item = reconciledGlbankstmtdGrid.dataItem(row);
				items.push(item.Id);
			});
            
            if(items.length == 0) {
            	alert('Please select atleast one line for reverse');
            	return false;
            }
            else {
            	var confirmReverse = confirm('Reversing the Transactions will Uncreconcile the selected Reconciled Transactions. Do you wish to continue?');
                if(confirmReverse == false) {
                	return false;
                }
            }
            blockUI();
			reverseSelected(items.join(","));
			return false;
        }
        
        function doAfterReverseSelected() {
        	if(isReverseSuccess == 'true') {
        		alert('Selected lines reversed successfully.');
        		buildGrids();
        	}
        	else {
        		alert('An error occured when trying to reverse selected lines.');
        	}
        	return false;
        }
        
        var reconciledGlbankstmtdGrid;
        function createReconciledGlbankstmtdGrid(glbankacctId,glbankstmthId) {
            // get Glbankstmtds for a selected bank account
            var getReconciledGlbankstmtds = function(){
                var deferred = $.Deferred();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ControllerExtnProcessStatementManually.getReconciledGlbankstmtds}',glbankacctId,glbankstmthId,
                    function (result, event) {
                        deferred.resolve(result, event);
                        enableAllButtons();
                        
                        console.log('getReconciledGlbankstmtds returned with results');

                    },
                    {escape: false}
                );  
            return deferred.promise();        
            };
            
            $( "reconciledGlbankstmtdGrid" ).empty();
            if(reconciledGlbankstmtdGrid) {
            	reconciledGlbankstmtdGrid.destroy();
            }
            var reconciledGlbankstmtdFIList = JSON.parse('{!JSENCODE(reconciledGlbankstmtdFIListJson)}');
			var reconciledGlbankstmtdDateFields = RootstockErp.KendoGridOptions.GetDateFields(reconciledGlbankstmtdFIList);
            reconciledGlbankstmtdGrid = $('#reconciledGlbankstmtdGrid').kendoGridActionList({
                fieldList: reconciledGlbankstmtdFIList,
                dateFields: reconciledGlbankstmtdDateFields,
                namespace: '{!namespaceUU}',
                getActionListFunction: getReconciledGlbankstmtds,
                modelIdField: 'id', //since we are using a wrapper we need to pass the full path to the id here
                filterable: true,
                sortable: true,
                actionColumnButtons: []
            }).data('kendoGridActionList');
            
        }
        
		function showPopup(popName, popWidth, popHeight) {
            var top = ((jQuery(window).height() - popHeight) / 2);
            var width = jQuery(window).width();
            var left = (width - popWidth) / 2;
            if (popWidth > width) {
                left = 0;
            } else {
                width = popWidth;
            }
            
            jQuery.blockUI({
                message: jQuery(popName),
                baseZ: 1,
                css: {
                    backgroundColor:'#fff',
                    left: (left + 'px'),
                    top: (top + 'px'),
                    width:(width + 'px'),
                    height:(popHeight + 'px'),
                    padding:'15px',
                    textAlign:'left',
                    fontSize:'1em',
                    border:'2px solid #333',
                    
                    opacity:'1.0',
                    '-moz-border-radius':'6px',
                    '-webkit-border-radius':'6px',
                    '-moz-box-shadow': '0 0 50px #ccc',
                    '-webkit-box-shadow': '0 0 50x #ccc'
                }
            });
        }
        
        //Need this function for the refocus issue on select of any row after sorting
        function kendoFastReDrawRow(grid, row) {
		    var dataItem = grid.dataItem(row);
		    var rowChildren = $(row).children('td[role="gridcell"]');
		    for (var i = 0; i < grid.columns.length; i++) {
		        var column = grid.columns[i];
		        var template = column.template;
		        var cell = rowChildren.eq(i);
		        if (template !== undefined) {
		            var kendoTemplate = kendo.template(template);
		            // Render using template
		            cell.html(kendoTemplate(dataItem));
		        } else {
		            var fieldValue = dataItem[column.field];
		            var format = column.format;
		            var values = column.values;
		            if (values !== undefined && values != null) {
		                // use the text value mappings (for enums)
		                for (var j = 0; j < values.length; j++) {
		                    var value = values[j];
		                    if (value.value == fieldValue) {
		                        cell.html(value.text);
		                        break;
		                    }
		                }
		            } else if (format !== undefined) {
		                // use the format
		                cell.html(kendo.format(format, fieldValue));
		            } else {
		                // Just dump the plain old value
		                cell.html(fieldValue);
		            }
		        }
		    }
		}
      
     	function enableAllButtons() {
			var btns = jQuery('.btn');
		    for(var i = 0; i < btns.length; i++) {
		    	var btn = btns[i];
		        btn.removeAttribute('disabled');
		    }
	    }
	    
	    function pageInit(){
		    jQuery("select[id*=glbankacc_stmtheader__c")[0].focus();
		    document.body.scrollTop = document.documentElement.scrollTop = 0;
		}
	    
	    function doAfterJobComplete(pl) {
	    	getHeaderDetails();
		}
	
	</script>
</apex:page>