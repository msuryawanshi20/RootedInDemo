<apex:page id="pg" standardController="rstk__soprod__c" extensions="rstk.ControllerExtnSoprodPopups,rstk.RemoteQueryController" sideBar="false" showHeader="false" action="{!doBeforePageLoad}">
    <c:standardHeader cntr="{!controller}" title="{!$Label.rstk__configuration_groups}" enableAutocomplete="true" enableQuickMenu="false" showHeader="false"/>
 	<apex:includeScript value="{!$Resource.rstk__sublist}"/>
  	<apex:stylesheet value="{!$Resource.rstk__ModalPopup_css}"/>
    <apex:includeScript value="{!$Resource.rstk__RowHandler_js}"/>
    <apex:includeScript value="{!$Resource.rstk__jquery_tablesorter_cli}" />
    <apex:stylesheet value="{!URLFOR($Resource.rstk__images, 'fixedTableSort.css')}" />
    
    <apex:form id="fm">
        <apex:pageBlock id="pb" mode="detail">
        	<apex:outputPanel rendered="{!popType='confgroupp'}">
				<c:PageableGrid width="800" jsController="confgroupps" data="{!confgrouppGrid}" pageSize="8" editable="{!OR(isEdit, isView)}" ispopup="true" disableSave="false"/>
	            <script>
	                confgroupps.onGridLoad = function() {
	                    self = this;
	                    this.getRows().each(function (index, el) {
	                        var row = jQuery(this);
	                        var rowId = self.getRowValue(row, 'Id');
							var confgroupId = confgroupps.getRowValue(row, 'confgroupp_confgroup__r.id');
							var confgroupName = confgroupps.getRowValue(row, 'confgroupp_confgroup__r.name');
							if(!isEmpty(rowId)) {
	                            confgroupps.getRowObj(row, 'confgroupp_confgroup__c').attr('disabled', true);
	                            var col = confgroupps.getRowObj(row, 'confgroupp_confgroup__c');
	                            var url = 'javascript:{window.open(\'/' + confgroupId + '\')}';
	                            col.context.children[1].innerHTML = '<a href="' + url + '">' + confgroupName + '</a>';
							}
	                    });
	                }
	                
	                confgroupps.resetRow = function(row) {
	                    self = this;
	                    confgrouppsHandler.prototype.resetRow.call(self, row);
	                    var maxSeq = -1;
	                    confgroupps.getRows().each(function() {
	                        var r = jQuery(this);
	                        var v = parseLocaleFloat(confgroupps.getRowValue(r, 'confgroupp_seq__c')) || 0;
	                        if (maxSeq < v) {
	                            maxSeq = v;
	                        }
	                    });
	                    confgroupps.setRowValue(row, "confgroupp_seq__c", maxSeq + 1);
	                }
	                
	                confgroupps.pleaseWait = function() {
	                    blockUI();
	                }
	                
	                confgroupps.closePleaseWait = function() {
	                    unblockUI();
	                }
	                
	                function closeTopDialog() {
	                    unblockUI();
	                    if (_topDialog !=  null) {
	                      _topDialog.hide();
	                      _topDialog = null;
	                    }
	                }
	                
	                confgroupps.validate = function() {
	                    var visibleRows = this.getVisibleRows();
	                    for(i = 0; i < visibleRows.length; i++) {
	                        var row = jQuery(visibleRows[i]);
	                        var id = confgroupps.getRowValue(row, 'Id');
	                        var confgroupid = confgroupps.getRowValue(row, 'confgroupp_confgroup__c');
	                        if(!confgroupid && isEmpty(id)) {
	                            alert("{!$Label.ConfigGrpCantBeBlank}");
	                            confgroupps.getRowObj(row, 'confgroupp_confgroup__c').focus();
	                            return false;
	                        }
	                        var seq = confgroupps.getRowValue(row, 'confgroupp_seq__c');
	                        if(!seq || isNaN(seq) || parseInt(seq) <= 0) {
	                            alert("{!$Label.SelectionSeqMustGT0}");
	                            confgroupps.getRowObj(row, 'confgroupp_seq__c').focus();
	                            return false;
	                        }
	                    }
	                    return true;
	                }
	                
	                confgroupps.onSaveFailed = function() {
	                    unblockUI();
	                }
	                
	                confgroupps.onSaved = function() {
	                    unblockUI();
	                } 
	            </script>
			</apex:outputPanel>


        	<apex:outputPanel rendered="{!popType='soprodconfpre'}">
				<c:PageableGrid width="1200" jsController="soprodconfpre" data="{!soprodconfpreGrid}" pageSize="8" editable="{!OR(isEdit, isView)}" ispopup="true" disableSave="false"/>
	            <script>
						function setSelectList(rowCtrl, row, fieldId, values, valueFieldId, withNone) {
							var col = rowCtrl.getRowObj(row, fieldId);
						 	var nameOf = rowCtrl.nameOf();
						 	col.children().remove();
						 	col.html('<select style="max-width:90%;" class="'+nameOf+'-'+rowCtrl.getRowNum(row)+'-select_'+fieldId+'" onchange="'+nameOf+'.rowChanged(event);"/>');
						 	var theSel = col.find('select');
						 	if (!!withNone) {
						 		theSel.append('<option value="">--None--</option>');
						 	}	
						 	for (var i=0;i <values.length; i++) {
							  	theSel.append('<option value="'+values[i].Id+'">'+escapeHtml(values[i].Name)+'</option>');
						 	}
						 	if (valueFieldId != null && valueFieldId != '') {
						 		jQuery(theSel).val(rowCtrl.getRowValue(row, valueFieldId));
							 	rowCtrl.setRowValue(row, valueFieldId, jQuery(theSel).val());
						 	}
						}
                        
                        soprodconfpre.onGridLoad = function() {
                        	console.log('onGridLoad');
                            self = this;
                            
                            var confgroupids = '';
                            soprodconfpre.getVisibleRows().each(function(){
						    	var row = jQuery(this);
								var confgroupid = soprodconfpre.getRowValue(row, 'soprodconfpre_confgroup__c');
								if (confgroupid) {
									confgroupids += (confgroupids ? "," : "") + "'" + confgroupid + "'";
								}
							});
							
							var confgroups = [];

							if (confgroupids) {
								confgroups = execQuery("select Id, (select Id, Name from confsels__r order by Name) from confgroup__c where id in (" + confgroupids + ")");
								console.log('confgroups='+confgroups);
							}
                            
                            soprodconfpre.getRows().each(function(){
                            	console.log('onGridLoad');
						    	var row = jQuery(this);
						    	
						    	var groupconfsels = [];
						    	var confgroupid = soprodconfpre.getRowValue(row, 'soprodconfpre_confgroup__c');
						    	for (i = 0; i < confgroups.length; i++) {
						    		if (confgroupid == confgroups[i].Id) {
						    			console.log(confgroups[i].confsels__r);
						    			if (confgroups[i].confsels__r && confgroups[i].confsels__r.size > 0) {
						    				groupconfsels = confgroups[i].confsels__r.size > 1 ? confgroups[i].confsels__r.records : [confgroups[i].confsels__r.records];
						    			}
						    			break;
						    		}
						    	}
								setSelectList(self, row, 'soprodconfpre_confsel__g', groupconfsels, 'soprodconfpre_confsel__c', true);
							});
                        }
                        
                        soprodconfpre.resetRow = function(row) {
                            self = this;
                            soprodconfpreHandler.prototype.resetRow.call(self, row);
                            
                            setSelectList(this, row, 'soprodconfpre_confsel__g', [], 'soprodconfpre_confsel__c', true);
                        }
                        
                        soprodconfpre.entryChanged = function(row, rowNum, name, value) {
                        	console.log(name+':'+value);
                        	console.log('name'+':'+name);
                            if(name == 'soprodconfpre_confgroup__c') {
                            	soprodconfpre.setRowValue(row, "soprodconfpre_confsel__c", '');
                            	var confselSl = soprodconfpre.getRowObj(row, 'soprodconfpre_confsel__g').find('select')[0];
                            	confselSl.value = '';
                            	if(value) {
                                	populateHtmlSelectList(confselSl, "select Id, Name from confsel__c where confsel_confgroup__c = '" + value + "' order by Name");
                                }
	                        } else if(name == 'select_soprodconfpre_confsel__g') {
	                        	soprodconfpre.setRowValue(row, "soprodconfpre_confsel__c", value);
                            }
                        }
                        
                        
                        soprodconfpre.onSaveFailed = function() {
                            unblockUI();
                        }
                        
                        soprodconfpre.onSaved = function() {
                        	unblockUI();
                        }
	            </script>
			</apex:outputPanel>

        	<apex:outputPanel rendered="{!popType='soprodconfexp'}">
				<c:PageableGrid width="1200" jsController="soprodconfexp" data="{!soprodconfexpGrid}" pageSize="8" editable="{!OR(isEdit, isView)}" ispopup="true" disableSave="false"/>
	            <script>
						function setSelectList(rowCtrl, row, fieldId, values, valueFieldId, withNone) {
							var col = rowCtrl.getRowObj(row, fieldId);
						 	var nameOf = rowCtrl.nameOf();
						 	col.children().remove();
						 	col.html('<select style="width:150px;" class="'+nameOf+'-'+rowCtrl.getRowNum(row)+'-select_'+fieldId+'" onchange="'+nameOf+'.rowChanged(event);"/>');
						 	var theSel = col.find('select');
						 	if (!!withNone) {
						 		theSel.append('<option value="">--None--</option>');
						 	}	
						 	for (var i=0;i <values.length; i++) {
							  	theSel.append('<option value="'+values[i].Id+'">'+escapeHtml(values[i].Name)+'</option>');
						 	}
						 	if (valueFieldId != null && valueFieldId != '') {
						 		jQuery(theSel).val(rowCtrl.getRowValue(row, valueFieldId));
							 	rowCtrl.setRowValue(row, valueFieldId, jQuery(theSel).val());
						 	}
						}
                        
                        soprodconfexp.onGridLoad = function() {
                            self = this;
                            
                            var confgroupids = '';
                            var confselids = '';
                            soprodconfexp.getVisibleRows().each(function(){
						    	var row = jQuery(this);
								var confgroupid = soprodconfexp.getRowValue(row, 'soprodconfexp_sourcegroup__c');
								if (confgroupid) {
									confgroupids += (confgroupids ? "," : "") + "'" + confgroupid + "'";
								}
								var confselid = soprodconfexp.getRowValue(row, 'soprodconfexp_sourcesel__c');
								if (confselid) {
									confselids += (confselids ? "," : "") + "'" + confselid + "'";
								}
							});
							//console.log('confgroupids'+confgroupids);
							//console.log('confselids'+confselids);
							
							var confgroups = [];
							var confsels = [];
							if (confgroupids) {
								confgroups = execQuery("select Id, (select Id, Name from confsels__r order by Name) from confgroup__c where id in (" + confgroupids + ")");
								//console.log('confgroups='+confgroups);
							}
							if (confselids) {
								confsels = execQuery("select Id, (select Id, Name from confcomps__r order by Name) from confsel__c where id in (" + confselids + ")");
								//console.log('confsels='+confsels);
							}
                            
                            soprodconfexp.getRows().each(function(){
						    	var row = jQuery(this);
					    	
						    	var rowId = soprodconfexp.getRowValue(row, 'Id');
						    	var rowName = soprodconfexp.getRowValue(row, 'Name');
						    	if (!isEmpty(rowId)) {
									var col = soprodconfexp.getRowObj(row, 'name__g');
								 	col.children().remove();
								 	var url = 'javascript:{window.open(\'/' + rowId + '\')}';
								 	col.html('<a href="' + url + '">' + rowName + '</a>');
							 	}

						    	var groupconfsels = [];
						    	var confgroupid = soprodconfexp.getRowValue(row, 'soprodconfexp_sourcegroup__c');
						    	for (i = 0; i < confgroups.length; i++) {
						    		if (confgroupid == confgroups[i].Id) {
						    			//console.log(confgroups[i].confsels__r);
						    			if (confgroups[i].confsels__r && confgroups[i].confsels__r.size > 0) {
						    				groupconfsels = confgroups[i].confsels__r.size > 1 ? confgroups[i].confsels__r.records : [confgroups[i].confsels__r.records];
						    			}
						    			break;
						    		}
						    	}
								setSelectList(self, row, 'soprodconfexp_sourcesel__g', groupconfsels, 'soprodconfexp_sourcesel__c', true);
								
								var selconfcomps = [];
								var confselid = soprodconfexp.getRowValue(row, 'soprodconfexp_sourcesel__c');
								for (i = 0; i < confsels.length; i++) {
						    		if (confselid == confsels[i].Id) {
						    			//console.log(confsels[i].confcomps__r);
						    			if (confsels[i].confcomps__r && confsels[i].confcomps__r.size > 0) {
						    				selconfcomps = confsels[i].confcomps__r.size > 1 ? confsels[i].confcomps__r.records : [confsels[i].confcomps__r.records];
						    			}
						    			break;
						    		}
								}
								setSelectList(self, row, 'soprodconfexp_sourcecomp__g', selconfcomps, 'soprodconfexp_sourcecomp__c', true);
							});
                        }
                        
                        soprodconfexp.resetRow = function(row) {
                            self = this;
                            soprodconfexpHandler.prototype.resetRow.call(self, row);
                            
                            setSelectList(this, row, 'soprodconfexp_sourcesel__g', [], 'soprodconfexp_sourcesel__c', true);
                            setSelectList(this, row, 'soprodconfexp_sourcecomp__g', [], 'soprodconfexp_sourcecomp__c', true);
                        }
                        
                        soprodconfexp.entryChanged = function(row, rowNum, name, value) {
                        	console.log(name+':'+value);
                            if(name == 'soprodconfexp_sourcegroup__c') {
                            	soprodconfexp.setRowValue(row, "soprodconfexp_sourcesel__c", '');
                            	soprodconfexp.setRowValue(row, "soprodconfexp_sourcecomp__c", '');
                            	var sourceselSl = soprodconfexp.getRowObj(row, 'soprodconfexp_sourcesel__g').find('select')[0];
                            	sourceselSl.value = '';
                           		populateHtmlSelectList(sourceselSl, "select Id, Name from confsel__c where confsel_confgroup__c = '" + value + "' order by Name");
                            	var sourcecompSl = soprodconfexp.getRowObj(row, 'soprodconfexp_sourcecomp__g').find('select')[0];
                            	sourcecompSl.value = '';
                            } else if(name == 'select_soprodconfexp_sourcesel__g') {
                            	soprodconfexp.setRowValue(row, "soprodconfexp_sourcesel__c", value);
                            	soprodconfexp.setRowValue(row, "soprodconfexp_sourcecomp__c", '');
                            	var sourcecompSl = soprodconfexp.getRowObj(row, 'soprodconfexp_sourcecomp__g').find('select')[0];
                            	sourcecompSl.value = '';
                                populateHtmlSelectList(sourcecompSl, "select Id, Name from confcomp__c where confcomp_confsel__c = '" + value + "' order by Name");
	                        } else if(name == 'select_soprodconfexp_sourcecomp__g') {
	                        	soprodconfexp.setRowValue(row, "soprodconfexp_sourcecomp__c", value);
                            }
                        }
                        
                        soprodconfexp.validate = function() {
							return true;
                        }
                        
                        soprodconfexp.onSaveFailed = function() {
                            unblockUI();
                        }
                        
                        soprodconfexp.onSaved = function() {
                        	unblockUI();
                        }

	            </script>
			</apex:outputPanel>


        </apex:pageBlock>
		     <div id="pleaseWaitPopup" style="display:none">
                 <apex:outputPanel styleClass="topPopupBackground" layout="block"/>
                 <apex:outputPanel styleClass="topPopup">
                    <apex:image url="{!$Resource.rstk__busy}"/>
                 </apex:outputPanel>
             </div>   
    </apex:form>
    
    <c:footerInclude cntr="{!controller}" />
</apex:page>