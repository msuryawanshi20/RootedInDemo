<apex:page id="pg" standardController="rstk__socontract__c" extensions="rstk.ControllerExtnSeDevicesGrid,rstk.RemoteQueryController" sideBar="false" showHeader="false" action="{!doBeforePageLoad}">
	<apex:variable var="o" value="{!rstk__socontract__c}" />
	<c:standardHeader cntr="{!controller}" title="{!$Label.rstk__serializeddevices}"  showHeader="false" enableAutocomplete="true" enableQuickMenu="false"/>
	
 	<apex:includeScript value="{!$Resource.rstk__sublist}"/>
  	<apex:stylesheet value="{!$Resource.rstk__ModalPopup_css}"/>
    <apex:includeScript value="{!$Resource.rstk__RowHandler_js}"/>
    <apex:includeScript value="{!$Resource.rstk__jquery_tablesorter_cli}" />
    <!--<apex:stylesheet value="{!URLFOR($Resource.images, 'fixedTableSort.css')}" />  -->
    <apex:includeScript value="{!$Resource.rstk__jquerytoolsoverlay}" />
    <apex:includeScript value="{!$Resource.rstk__hover_popup}" />
    
    <style>
        .hidden{visibility:hidden;}
        .rcptinput{
            width:60px;
            text-align:right; 
        }
        .sort {display:inline}
        .numSort {display:inline}

            .modal {
                background-color:#fff;
                display:none;
                padding:15px;
                text-align:left;
                font-size:1em;
                border:2px solid #333;
            
                opacity:1.0;
                -moz-border-radius:6px;
                -webkit-border-radius:6px;
                -moz-box-shadow: 0 0 50px #ccc;
                -webkit-box-shadow: 0 0 50x #ccc;
            }
            
            .modal h2 {
                margin:0px;
                padding:10px 0 10px 45px;
                font-size:16px;
            }
            
            .modalComponents {
                color:#efefef;
                height:200px;
                z-index:50;
            }
             
    </style>
    <script>
   		var socondevId ='';
    	
    	function setCustomAutocomplete(autocompleteParms) {
    		for(name in autocompleteParms) {
            	var obj = autocompleteParms[name];
            	obj.useCustomAutocomplete = true;
            	obj.autocompleteController='ControllerExtnSeDevicesGrid';
            	obj.autocompleteMethodParms='fieldId=socondev_sowarr__c;contractId={!o.id}';
            }
    	}
    	
    	function beforeSetupAutocomplete() {
			setCustomAutocomplete(autocompleteParms);
		}
    	
	    function ChangeHistoryDetails(rowId){
	    	socondevId = rowId;
	        jQuery(".changeHistory").click();
	    }
   		 
   		 function jqueryOnReady() {
	    	initHoverPopups(jQuery("#bodyTable"), {manualClose:false, displayUp:true, onClose:{}});
	         jQuery("button[rel*=win]").overlay({
	            mask: {
	                color: '#ebecff',
	                loadSpeed: 200,
	                opacity: 0.8
	            },
	            
	            closeOnClick: false,
	            
	            onBeforeLoad: function(e) {
	                jQuery('#winVFPage').block({
	                    message: '',
	                    centerX: true, 
	                    centerY: true,
	                    css: { 
	                        border: 'none', 
	                        padding: '15px', 
	                        cursor: 'wait',
	                        opacity: .5, 
	                        textAlign: 'center'
	                    }
	                });
	                
	                var winId = e.target.getTrigger().attr('class');
	                var content = jQuery("#"+winId+"Frame");
	                if (content.length > 0) {
	                    if (winId == 'changeHistory') {
	                        content[0].src = "/apex/deviceChgHistoryPopupPage?id=" +socondevId ;
	                    } 
	                
	                    content.load(function() {
	                        jQuery('#winVFPage').unblock();
	                    });
	                }
	            },
	            onClose: function(e){
	                var winId = e.target.getTrigger().attr('class');
	                var content = jQuery("#"+winId+"Frame");
	                if (content.length > 0) { 
	                    content[0].src = 'about:blank'; 
	                }
	            }
	        });  
	    } 
    </script>
    
    <apex:form id="fm">
        <apex:pageBlock id="pb" mode="detail">
        	<apex:outputPanel >
        		<button style="visibility:hidden" class="changeHistory" rel="#winchangeHistory"></button>
		        <div class="modal" id="winchangeHistory" style="width:850px">
		            <h2></h2>
		            <iframe id="changeHistoryFrame" height="250px" width="100%" frameborder="0" src="about:blank">
		            </iframe>
		            <button type="button" class="close" onclick="component_close()">{!$Label.pagebtn_soship_Close}</button>
		        </div>
        	</apex:outputPanel>
        
        	<apex:outputText style="color:blue" value="{!$Label.rstk__click_on_any_column_label_to_re_sort_by_that_column}"/>
			<c:PageableGrid pageSize="10" width="1375" jsController="seDevices" data="{!seDevicesGrid}" editable="true" ispopup="false"/>  
				<script>
					var coveredSrDevice = [];
					
					seDevices.onGridLoad = function() {
                        self = this;
                        coveredSrDevice.length = 0;                        
			            setCustomAutocomplete(autocompleteParms);
                        
                        if (seDevices.rowIds.length ){
                         	this.getVisibleRows().each(function (index, el) {
                             var row = jQuery(this);
                             var rowId = self.getRowValue(row, 'Id');
                             if (isEmpty(rowId)) rowId = seDevices.rowIds[index];
	                              if(!isEmpty(rowId)) {
	                              		self.getRowObj(row, 'changeHistory__g').html('<button type="button" class="btn" onclick="ChangeHistoryDetails(\'' + rowId + '\');">Device Change History</button>');
	                              		
	                              		seDevices.getRowObj(row, 'socondev_startdate__c')[0].nextSibling.style.display= 'none';
	                              		seDevices.getRowObj(row, 'socondev_enddate__c')[0].nextSibling.style.display= 'none';
	                              		seDevices.getRowObj(row, 'socondev_beginhold__c')[0].nextSibling.style.display= 'none';
	                              		seDevices.getRowObj(row, 'socondev_endhold__c')[0].nextSibling.style.display= 'none';
	                              		seDevices.getRowObj(row, 'socondev_activateby__c')[0].nextSibling.style.display= 'none';
	                              	}
	                         });	
                        }
                    }
				
					seDevices.validate = function() {
			           	self = this;
			           	var isvalid = true;
			           	this.getVisibleRows().each(function (index, el) {
			                var row = jQuery(this);
			                var sowarr = seDevices.getRowValue(row, 'socondev_sowarr__c');
			                var startdate = seDevices.getRowValue(row, 'socondev_startdate__c');
			                var enddate = seDevices.getRowValue(row, 'socondev_enddate__c');
			                var isActive = seDevices.getRowValue(row, 'socondev_active__c');
			                var beginhold = seDevices.getRowValue(row, 'socondev_beginhold__c');
			                var endhold = seDevices.getRowValue(row, 'socondev_endhold__c');
			                var rowId = self.getRowValue(row, 'Id');
			                
							if(enddate && !startdate){
								alert("{!$Label.CurrentCoverageStarDateRequired}"); 
								seDevices.getRowObj(row, 'socondev_startdate__c').focus();
			                  	isvalid = false;
			                  	return false;	
							}
							
							if(isActive && !enddate){
								alert("{!$Label.CurrentCoverageEndDateRequired}"); 
								seDevices.getRowObj(row, 'socondev_enddate__c').focus();
			                  	isvalid = false;
			                  	return false;	
							}
							
							
							if((!beginhold && endhold)){
								alert("{!$Label.InterimHoldStart_EndDate}"); 
								if(!beginhold){
									seDevices.getRowObj(row, 'socondev_beginhold__c').focus();
								}else{
									seDevices.getRowObj(row, 'socondev_endhold__c').focus();
								}
								isvalid = false;
			                  	return false;	
							} 
							
			                if(!sowarr && isEmpty(rowId)) {
								alert("{!$Label.CoveredSerializedDeviceRequired}");
			                  	seDevices.getRowObj(row, 'socondev_sowarr__c').focus();
			                  	isvalid = false;
			                  	return false;
			                }
			            });
			             return isvalid;
			         }
			         
			         
			          seDevices.addRow = function(rowCallback) {
                        	self = this;
                        	seDevicesHandler.prototype.addRow.call(self, rowCallback);
                       		this.getVisibleRows().each(function (index, el) {
                        	   var row = jQuery(this);
                        		var rowId = self.getRowValue(row, 'Id');                        		
                       			
                       			if(rowId==''){
                      				seDevices.getRowObj(row, 'socondev_startdate__c')[0].nextSibling.style.display= 'none';
                              		seDevices.getRowObj(row, 'socondev_enddate__c')[0].nextSibling.style.display= 'none';
                              		seDevices.getRowObj(row, 'socondev_beginhold__c')[0].nextSibling.style.display= 'none';
                              		seDevices.getRowObj(row, 'socondev_endhold__c')[0].nextSibling.style.display= 'none';
                              		seDevices.getRowObj(row, 'socondev_activateby__c')[0].nextSibling.style.display= 'none';
                       			}
                        	});
                       	} 
			         
			     	function validateDate(row){
			     		var startdate = seDevices.getRowValue(row, 'socondev_startdate__c');
						var beginhold = seDevices.getRowValue(row, 'socondev_beginhold__c');
						var enddate = seDevices.getRowValue(row, 'socondev_enddate__c');
						var endhold = seDevices.getRowValue(row, 'socondev_endhold__c');
						
						if (startdate && enddate ) {
						    verifyDate(startdate,enddate,row,'socondev_enddate__c','{!$Label.CovEndDateGreaterCovStartDate}');   
						}
						if (!startdate && beginhold ) {
						  	alert("{!$Label.StartDatemustbeblank}");
						  	seDevices.setRowValue(row, "socondev_beginhold__c", '');
						}else if(beginhold){
							if(startdate){
								verifyDate(startdate,beginhold,row,'socondev_beginhold__c','{!$Label.InterimHoldStartDtGreaterCoverageStartDate}');         //Interim Hold Start Date must be greater than or equal to Current Coverage Start Date.
							}
							/*
							if(enddate){
								verifyDate(beginhold,enddate,row,'socondev_beginhold__c','{!$Label.CurrentCovEndDateGreaterStartInterimHoldStartDate}');  //Current Coverage End Date must be greater than or equal to start Interim Hold Start Date.
							}
							*/
						}
						
						if (!enddate && endhold ) {
						  	alert("{!$Label.InterimHoldEndDateBlankIfCovgEndDtNtProvided}")  //Interim Hold End Date must be blank when Current Coverage End Date is not provided.
						  	seDevices.setRowValue(row, "socondev_endhold__c", '');
						}else if(endhold){
							if(beginhold){
								verifyDate(beginhold,endhold,row,'socondev_endhold__c','{!$Label.InterimHoldEndDateGreaterIntHoldStartDate}');    //Interim Hold End Date must be greater than Interim Hold Start Date.
							}
							/*
							else{
								alert("{!$Label.InterimHoldStart_EndDate}"); 
								seDevices.setRowValue(row, "socondev_endhold__c", '');
							}
							
							if(enddate){
								verifyDate(endhold,enddate,row,'socondev_endhold__c','{!$Label.CurrentCoverageEndDateGreaterInterimHoldEndDate}');   //Current Coverage End Date must be greater than Interim Hold End Date.
							}
							*/
						}
					}    
			         
			    	seDevices.entryChanged = function(row, rowNum, name, value) {
						if (name == 'socondev_startdate__c' || name == 'socondev_enddate__c' || name == 'socondev_beginhold__c' || name == 'socondev_endhold__c') {
							validateDate(row);
						} 
					
						if (name == 'socondev_active__c') {
							var isActive = seDevices.getRowValue(row, 'socondev_active__c');
							var startDate = seDevices.getRowValue(row, 'socondev_startdate__c');
							var endDate = seDevices.getRowValue(row, 'socondev_enddate__c');
							if(isActive && !startDate && !endDate){
								var startDt = formatDate("{!startDate}");
								var endDate = formatDate("{!endDate}");
								seDevices.setRowValue(row, "socondev_startdate__c", startDt);
								seDevices.setRowValue(row, "socondev_enddate__c", endDate);
							}
						}
					}
				
				function verifyDate(firstDate,lastDate,row,fieldName,message){
		        	Visualforce.remoting.Manager.invokeAction(  
				        '{!$RemoteAction.ControllerExtnSeDevicesGrid.verifyDate1}', //NameSpace  
				        firstDate,lastDate,fieldName,  
				        function(result, event){
				        	if (event.status) {
								if(result){
									//alert("{!$Label.LstEfctDtCntBeLessThnFstEfctDte}");
									alert(message);
									seDevices.setRowValue(row, fieldName, ''); 
									return true;
								}
				            } else if (event.type === 'exception') {
				                alert("{!$Label.Exception1}" + event.message);
				            } else {
								alert("{!$Label.UnexpectedStatus}", event.message);
				            }
				        }, {escape:false}
				    );
		        }     
			</script>

        </apex:pageBlock>
		     <div id="pleaseWaitPopup" style="display:none">
                 <apex:outputPanel styleClass="topPopupBackground" layout="block"/>
                 <apex:outputPanel styleClass="topPopup">
                    <apex:image url="{!$Resource.rstk__busy}"/>
                 </apex:outputPanel>
             </div>
    </apex:form>
    
    <c:footerInclude cntr="{!controller}" />
    
</apex:page>