<apex:page id="pg" standardController="rstk__socontract__c" extensions="rstk.ControllerExtnSocontract,rstk.RemoteQueryController" 
    action="{!doBeforePageLoad}" sideBar="false" showHeader="false">
     
    <style>
        .detailPage .bPageBlock, .editPage .bPageBlock {
            border-top-width: 3px;
        }
    </style>
    <base target="_blank" />
    <apex:variable var="o" value="{!rstk__socontract__c}" />
    <apex:variable var="f" value="{!$ObjectType.rstk__socontract__c.fields}" />
    <apex:variable var="f_peitem" value="{!$ObjectType.rstk__peitem__c.fields}" />
    <apex:variable var="f_sowarr" value="{!$ObjectType.rstk__sowarr__c.fields}" />
    
    <c:standardHeader cntr="{!controller}" title="{!pageTitle}" customInclude="{!$Resource.rstk__socontract_cli}"
        enableAutocomplete="true" enableQuickMenu="false" showHeader="false"/>
    <apex:stylesheet value="{!$Resource.rstk__ModalPopup_css}"/>
    <apex:includeScript value="{!$Resource.rstk__RowHandler_js}"/>
    <script>
        var contractId = '{!o.Id}';
        var socustId = '{!o.socontract_socust__c}';
        var gridType = '{!JSENCODE(gridType)}';
        var contentUsages = {!contentUsageString};
        var contentWarrs = {!contentWarrString};
        var cloneMode = false;
        var autoCompleteRefs = new Array();
        
        function massAdd() {
            _showDialog('massAddPopup', 700, 220);
            return false;
        }
        
        function sowarrsSelected() {
            blockUI();
            try {
                doCreateSocntcreds();
            } catch(exception) {
                unblockUI();
                alert(exception);
            }
            unblockUI();
        }
        
        function openCoveredItems() {
            console.log('coveredItems...');
            unblockUI();
            coveredItems.reset();
            window.autocompleteRestrictToBodyScrolling=true;
            
            _showDialog('coveredItemsPopup', 700, 220);
            setupAutocomplete();
            return false;
        }

        function getSoWarr(sowarrId) {
          if (!isEmpty(sowarrId)) {
            var sowarrs = execQuery("select Id, Name, sowarr_soline__c, sowarr_residualamt__c from sowarr__c where id = " + quote(sowarrId));
            if (sowarrs.length > 0) {
              return sowarrs[0];
            }
          }
          return null;
        }
        
    </script>
    
    <apex:pageMessages id="pageMessages"/>
    <apex:form id="fm">
        <apex:actionFunction name="doCreateSocntcreds" action="{!doCreateSocntcreds}" 
            oncomplete="window.location.reload();" rerender="settlementsPanel, pageMessages"/>
        <apex:actionFunction name="doCoveredItem" action="{!doCoveredItem}" immediate="true" 
            oncomplete="openCoveredItems();" rerender="coveredItemPanel, pageMessages">
            <apex:param name="currentSocontent" assignTo="{!currentSocontent}" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="contractChanged" action="{!doSetDefaultContract}" immediate="true" 
            oncomplete="unblockUI();" rerender="pb_massadd, pbs_massAddMessage, pageMessages">
            <apex:param name="defaultOrigContract" assignTo="{!defaultOrigContract}" value="" />
        </apex:actionFunction>
            
<apex:outputPanel id="massAddPopupPanel" rendered="{!gridType=='Settlements'}">
        <c:Popup popupId="massAddPopup" title="{!$Label.rstk__pagepopup_socontractgrids_massadd}" onOk="sowarrsSelected();">
        <apex:pageBlockSection id="pb_massadd" columns="1">
            <apex:pageBlockSection id="pbs_massadd" showHeader="false" columns="1" >
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="{!f.rstk__socontract_contractid__c.label}"/>
                    <apex:selectlist id="contracts__c" value="{!defaultOrigContract}" size="1" onchange="blockUI(); contractChanged(this.value);" style="width:250px">
                        <apex:selectOptions value="{!OriginalContracts}"/>
                    </apex:selectlist>
                </apex:pageBlockSectionItem>

              <apex:pageBlockSectionItem id="pbs_massAddMessage">
                <apex:outputPanel >
                   <apex:image value="/img/msg_icons/warning16.png" style="{!IF(showMassAddWarningMessage,'','display:none;')}"/>&nbsp;{!massAddWarning}
                </apex:outputPanel>
              </apex:pageBlockSectionItem>

            </apex:pageBlockSection>
            
            <apex:pageBlockTable id="pbt_comcod" value="{!sowarrList}" var="rec" > 
                <apex:column value="{!rec.id}" styleclass="hidden" headerclass="hidden" />
                <apex:column headerValue="{!$Label.rstk__select}" style="width:25px;">
                        <apex:inputCheckbox value="{!rec.rstk__sowarr_selected__c}" tabIndex="-1" />
                    </apex:column>
                <apex:column headerValue="{!f_peitem.rstk__peitem_item__c.label}" value="{!rec.sowarr_icitem__r.icitem_item__r.rstk__peitem_item__c}" style="width:200px;text-align:left;" />
                <apex:column headerValue="{!f_sowarr.rstk__sowarr_srlno__c.label}" value="{!rec.rstk__sowarr_srlno__c}" style="width:100px;text-align:left;" />
                <apex:column headerValue="{!$Label.rstk__datesold}" value="{!rec.rstk__sowarr_origdatesold__c}" style="width:65px;text-align:left;" />
                <apex:column headerValue="{!$Label.rstk__associatedproduct}" value="{!rec.rstk__sowarr_soprod__c}" style="width:150x;text-align:left;" />
            </apex:pageBlockTable>
          </apex:pageBlockSection>
        </c:Popup>
</apex:outputPanel>
        
        <apex:outputPanel id="coveredItemPanel" rendered="{!gridType == 'Entitlements'}">
        <c:Popup popupId="coveredItemsPopup" title="{!$Label.rstk__pagepopup_socontractgrids_covereditems}" onOk="_closeDialog();" onCancel="">
            <c:PageableGrid pageSize="20" jsController="coveredItems" data="{!coveredItemGrid}" editable="true" ispopup="false"/>
                <script>
                    coveredItems.resetRow = function(row) {
                        console.log('coveredItems.resetRow...');
                        coveredItemsHandler.prototype.resetRow.call(this, row);
                    }
                    coveredItems.entryChanged = function(row, rowNum, name, value) {
                        console.log('coveredItems.entryChanged...');
                        if (name == 'soentwarr_sowarr__c' && value) {
                          var sowarr = getSoWarr(value);
                          if (sowarr != null && sowarr.sowarr_soline__c) {
                            this.setRowValue(row, 'soentwarr_soline__c', sowarr.sowarr_soline__c);
                          }
                        }
                    }
                   coveredItems.onGridLoad = function() {
                        self=this;
                        var link='<a href="/{!coveredItemSoProdId}">'+escapeHtml({!coveredItemSoProdNameJSON})+'</a>';
                        this.getRows().each(function() {
                            var row = jQuery(this);
                            self.getRowObj(row, "socontent_soprod__g").after(link);
                        });
                    }
                </script>
        </c:Popup>
        </apex:outputPanel>
        
        <apex:pageBlock id="pb" mode="edit">
            <apex:outputPanel id="entitlementsPanel" rendered="{!gridType=='Entitlements'}">
            <c:PageableGrid pageSize="20" jsController="entitlements" data="{!entitlementGrid}" editable="true" ispopup="false"/>
            <script>
                entitlements.onGridLoad = function() {
                    self=this;
                    var rows = entitlements.getRows();
                    for (var i=0;i<rows.length;i++) {
                        var row = jQuery(rows[i]);
                        var contentId = entitlements.getRowValue(row, 'Id');
                        if (entitlements.getRowValue(row, 'socontent_active__c') == true) {
                            entitlements.getRowObj(row, 'socontent_entprod__c').closest('td').find('.ac_input').attr('disabled', true);
                        }
                        
                        if (entitlements.getRowValue(row, 'socontent_usesowarr__c') == false) {
                            entitlements.getRowObj(row, 'socontent_entprod__c').closest('tr').find('.btn').attr('disabled', true);
                        }
                        
                        if (contentUsages[contentId] == false && entitlements.getRowValue(row, 'socontent_active__c') == true) {
                            entitlements.getRowObj(row, 'socontent_active__c').attr('disabled', true);
                        }
                        
                        if (contentWarrs[contentId] == false && entitlements.getRowValue(row, 'socontent_usesowarr__c') == true) {
                            entitlements.getRowObj(row, 'socontent_usesowarr__c').attr('disabled', true);
                        }
                    }
                }
                entitlements.resetRow = function(row) {
                    entitlementsHandler.prototype.resetRow.call(this, row);
                }
                entitlements.entryChanged = function(row, rowNum, name, value) {
                    if (name == 'socontent_soprod__c' && value) {
                        var prod = sfffLookupField('soprod__c', value, ['soprod_entprod__c', 'soprod_entprod__r.name']);
                        
                        entitlements.setRowValue(row, 'socontent_entprod__c', prod.soprod_entprod__c);
                        entitlements.getRowObj(row, 'socontent_entprod__c').closest('td').find('.ac_input').val(prod.soprod_entprod__r.Name);
                        
                    } else if (name == 'socontent_usesowarr__c') {
                        entitlements.getRowObj(row, 'socontent_entprod__c').closest('tr').find('.btn').attr('disabled', !value);
                    }
                }
                entitlements.onclick = function(row, rowNum, name) {
                    try {
                        blockUI();
                        doCoveredItem(this.getRowValue(row, "Id"));
                    } catch(e) {}
                }
            </script>
            </apex:outputPanel>
            
            <apex:outputPanel id="settlementsPanel" rendered="{!gridType=='Settlements'}">
            <c:PageableGrid pageSize="20" jsController="settlements" data="{!settlementGrid}" editable="true" ispopup="false" opOrder="DUA"/>
            <script>
                settlements.onGridLoad = function() {
                    self = this;
                    
                    if (settlements.rowIds.length ){
                        this.getVisibleRows().each(function (index, el) {
                         var row = jQuery(this);
                         var rowId = self.getRowValue(row, 'Id');
                      });   
                    }
                }
                settlements.resetRow = function(row) {
                    console.log('settlements.resetRow...');
                    settlementsHandler.prototype.resetRow.call(this, row);
                }
                settlements.entryChanged = function(row, rowNum, name, value) {
                    console.log('settlements.entryChanged...');
                    self=this;
                    if (name == 'socontcred_origsocontract__c') {
                        settlements.setRowValue(row, "socontcred_retshipsrl__c", '');
                        var origContract = settlements.getRowValue(row, 'socontcred_origsocontract__c');

                        if(origContract == '') {
                            settlements.getRowObj(row, 'socontcred_retshipsrl__c').attr('disabled', true);
                            self.getAutocompleteTextField(row, 'socontcred_retshipsrl__c').attr('disabled', true);
                        }
                        else {
                            settlements.getRowObj(row, 'socontcred_retshipsrl__c').attr('disabled', false);
                            self.getAutocompleteTextField(row, 'socontcred_retshipsrl__c').attr('disabled', false);
                            self.getAutocompleteTextField(row, 'socontcred_retshipsrl__c').attr('overrideQuery', 'select Id, Name from sowarr__c where sowarr_socontract__c = \'' + origContract + '\' ');
                        }
                        autoCompleteRefs[self.getRowObj(row, 'socontcred_retshipsrl__c')[0].id].flushCache();
                        
                    } else if (name == 'socontcred_retshipsrl__c') {
                        if (value) {
                            var sowarrQuery = execQuery("select sowarr_residualamt__c from sowarr__c where id = '" + value + "'");
                            if (sowarrQuery.length > 0 && sowarrQuery[0].sowarr_residualamt__c) {
                                settlements.getRowObj(row, 'socontcred_totamount__c')[0].value = 
                                    sowarrQuery[0].sowarr_residualamt__c;
                            }
                        }
                    }
                }
                settlements.addRow = function(rowCallback) {
                    self = this;
                    settlementsHandler.prototype.addRow.call(self, rowCallback);
                    this.getVisibleRows().each(function (index, el) {
                        var row = jQuery(this);
                        var rowId = self.getRowValue(row, 'Id');          
                        var origContract = settlements.getRowValue(row, 'socontcred_origsocontract__c');                    
                        if(rowId=='' && origContract == ''){
                            settlements.getRowObj(row, 'socontcred_retshipsrl__c').attr('disabled', true);
                            self.getAutocompleteTextField(row, 'socontcred_retshipsrl__c').attr('disabled', true);
                        }
                    });
                } 
            </script>
            </apex:outputPanel>
            
            <apex:outputPanel id="promotionsPanel" rendered="{!gridType=='Promotions'}">
                <c:PageableGrid pageSize="20" jsController="promotions" data="{!creditGrid}" editable="true" ispopup="false"/>
                <script>
                    promotions.resetRow = function(row) {
                        console.log('promotions.resetRow...');
                        promotionsHandler.prototype.resetRow.call(this, row);
                    }
                    promotions.entryChanged = function(row, rowNum, name, value) {
                        console.log('promotions.entryChanged...');
                        if (name == 'socontcred_soprod__c' && value) {
                            getPrice(value, 'promotions', row);
                        } else if (name == 'socontcred_qty__c') {
                            var price = promotions.getRowValue(row, 'socontcred_price__c');
                            var totamount = parseLocaleFloat(value) * parseLocaleFloat(price);
                            promotions.setRowValue(row, 'socontcred_totamount__c', totamount);
                        } else if (name == 'socontcred_price__c') {
                            var qty = promotions.getRowValue(row, 'socontcred_qty__c');
                            var totamount = parseLocaleFloat(value) * parseLocaleFloat(qty);
                            promotions.setRowValue(row, 'socontcred_totamount__c', totamount);
                        }
                    }
                </script>
            </apex:outputPanel>
            
            <apex:outputPanel id="ootsPanel" rendered="{!gridType=='oots'}">
                <c:PageableGrid pageSize="20" jsController="oots" data="{!ootGrid}" editable="true" ispopup="false"/>
                <script>
                    oots.resetRow = function(row) {
                        console.log('oots.resetRow...');
                        ootsHandler.prototype.resetRow.call(this, row);
                    }
                    oots.onSaveFailed = function(row, rowNum, name, value) {
                        console.log('oots.onSaveFailed...');
                        oots.getSelectableRows().each(function (index, el) {
                            var row = jQuery(this);
                            var recId = oots.getRowValue(row, 'Id');
                            var value = oots.getRowValue(row, 'socontoot_povend__c');
                            if (value && !recId) {
                            var itemTypes = ['socontoot_poitem__c', 'socontoot_poitemc__c', 'socontoot_poitems__c'];
                                for (var i = 0; i < itemTypes.length; i++) {
                                    var itemAC = oots.getRowObj(row, itemTypes[i]);
                                    if (itemAC.length == 1) {
                                        itemAC[0].setAttribute('aq', 'select poitemvend_item__c, poitemvend_item__r.name from poitemvend__c where poitemvend_vendno__c = \''
                                            + value + '\' and (poitemvend_item__r.poitem_type__c = \'Indirect Material\' or ' +
                                            'poitemvend_item__r.poitem_type__c = \'Service\')');
                                        itemAC[0].setAttribute('codeColumn', 'poitemvend_item__c');
                                        itemAC[0].setAttribute('descColumn', 'poitemvend_item__r.name');
                                        autoCompleteRefs[itemAC[0].id].flushCache();
                                    }
                                }
                            }
                        });
                    }
                    oots.entryChanged = function(row, rowNum, name, value) {
                        console.log('oots.entryChanged.  name='+name+' value='+value);
                        if (name == 'socontoot_povend__c' && value) {
                            var itemTypes = ['socontoot_poitem__c', 'socontoot_poitemc__c', 'socontoot_poitems__c'];
                            for (var i = 0; i < itemTypes.length; i++) {
                                var itemAC = oots.getRowObj(row, itemTypes[i]);
                                if (itemAC.length == 1) {
                                    itemAC[0].setAttribute('aq', 'select poitemvend_item__c, poitemvend_item__r.name from poitemvend__c where poitemvend_vendno__c = \''
                                        + value + '\' and (poitemvend_item__r.poitem_type__c = \'Indirect Material\' or ' +
                                        'poitemvend_item__r.poitem_type__c = \'Service\')');
                                    itemAC[0].setAttribute('codeColumn', 'poitemvend_item__c');
                                    itemAC[0].setAttribute('descColumn', 'poitemvend_item__r.name');
                                    autoCompleteRefs[itemAC[0].id].flushCache();
                                }
                            }
                            
                            var povendDesc = oots.getRowObj(row, 'socontoot_povend__c')
                                .closest('td').find('.ac_input').val();
                            oots.getRowObj(row, 'socontoot_povend__c')
                                .closest('td').find('.ac_input').val(unescapeText(povendDesc));
                        } else if (name == 'socontoot_poitem__c' && value) {
                            var vend = oots.getRowValue(row, 'socontoot_povend__c');
                            var itemvend = execQuery("select poitemvend_poprice__c from poitemvend__c where poitemvend_vendno__c = '" 
                                + vend + "' and poitemvend_item__c = '" + value + "'" , false, null);
                            if (itemvend.length > 0 && itemvend[0].poitemvend_poprice__c) {
                                oots.setRowValue(row, 'socontoot_price__c', itemvend[0].poitemvend_poprice__c);
                            }
                        } else if (name == 'socontoot_poitemc__c' && value) {
                            var vend = oots.getRowValue(row, 'socontoot_povend__c');
                            var itemvend = execQuery("select poitemvend_poprice__c from poitemvend__c where poitemvend_vendno__c = '" 
                                + vend + "' and poitemvend_item__c = '" + value + "'" , false, null);
                            if (itemvend.length > 0 && itemvend[0].poitemvend_poprice__c) {
                                oots.setRowValue(row, 'socontoot_pricec__c', itemvend[0].poitemvend_poprice__c);
                            }
                        } else if (name == 'socontoot_poitems__c' && value) {
                            var vend = oots.getRowValue(row, 'socontoot_povend__c');
                            var itemvend = execQuery("select poitemvend_poprice__c from poitemvend__c where poitemvend_vendno__c = '" 
                                + vend + "' and poitemvend_item__c = '" + value + "'" , false, null);
                            if (itemvend.length > 0 && itemvend[0].poitemvend_poprice__c) {
                                oots.setRowValue(row, 'socontoot_prices__c', itemvend[0].poitemvend_poprice__c);
                            }
                        } else if (name == 'socontoot_sowarr__c' && value) {
                          var sowarr = getSoWarr(value);
                          if (sowarr != null && sowarr.sowarr_soline__c) {
                            this.setRowValue(row, 'socontoot_soline__c', sowarr.sowarr_soline__c);
                          }
                        }
                        
                    }
                </script>
            </apex:outputPanel>

           <apex:outputPanel id="ofciPanel" rendered="{!gridType=='ofci'}">
             <c:EditableGrid jsController="ofci" data="{!otherFeesCoveredItemsGrid}" editable="true" ispopup="true"/>
             <script>
                    ofci.entryChanged = function(row, rowNum, name, value) {
                        console.log('ofci.entryChanged.');
                        if (name == 'sochgwarr_sowarr__c' && value) {
                          var sowarr = getSoWarr(value);
                          if (sowarr != null && sowarr.sowarr_soline__c) {
                            this.setRowValue(row, 'sochgwarr_soline__c', sowarr.sowarr_soline__c);
                          }
                        }
                    }
             </script>
           </apex:outputPanel>

        </apex:pageBlock>
        <div id="pleaseWaitPopup" style="display:none">
            <apex:outputPanel styleClass="topPopupBackground" layout="block"/>
            <apex:outputPanel styleClass="topPopup">
               <apex:image url="{!$Resource.rstk__busy}"/>
            </apex:outputPanel>
        </div>
    </apex:form>
    <script>
        if (gridType == 'Settlements') {
            console.log('process Settlements...');
            if (jQuery('input[id*=mass_add]').length == 0) {
                jQuery('input[id*=settlements_resetbtn]').parent()
                    .append('<input class="btn" id="mass_add" onclick="massAdd();" type="button" value="Mass Add">');
            }
        }
        
        var header = jQuery(".bPageTitle");
        if (header && header.length > 0) {
            header[0].style.display = "none";
            if (header.length > 1)
                header[1].style.display = "none";
        }
    </script>
    <c:footerInclude cntr="{!controller}" />
</apex:page>