<apex:page id="pg" title="{!$Label.rstkf__general_journal_entries}" standardController="rstkf__gljh__c" extensions="rstkf.ControllerExtnGljh,rstkf.RemoteQueryController,rstkf.ControllerJobStatus" action="{!doBeforePageLoad}">

     <!-- kendo/common css references -->
    <apex:stylesheet value="{!URLFOR($Resource.rstkf__KendoUIStyle2018, '/KendoStyle/kendo.common.min.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.rstkf__KendoUIStyle2018, '/KendoStyle/kendo.bootstrap.min.css')}" />
    
    <!-- kendo/common js references -->
    <apex:includeScript value="{!$Resource.rstkf__jquery}" />    
    <apex:includeScript value="{!URLFOR($Resource.rstkf__UnderscoreJS, 'underscore-min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.rstkf__KendoUIScript2018, '/KendoUIScript/kendo.all.min.js')}" />
    <apex:includeScript value="{!$Resource.rstkf__SecureFilters}" />
    <apex:includeScript value="{!$Resource.rstkf__Sanitize}" />
    <apex:includeScript value="{!$Resource.rstkf__Sanitize}" />
    <apex:includeScript value="{!$Resource.rstkf__RootstockCommon}" />
    <apex:includeScript value="{!$Resource.rstkf__GridActionListJS}" />
    
    <apex:variable var="o" value="{!rstkf__gljh__c}" />
    <apex:variable var="o_customext" value="{!customext}" />
    <apex:variable var="f" value="{!$ObjectType.rstkf__gljh__c.fields}" />
    <apex:variable var="d" value="{!$ObjectType.rstkf__gljh__c}" />
    <apex:variable var="f_gljd" value="{!$ObjectType.rstkf__gljd__c.fields}" />
    <apex:variable var="f_customext" value="{!$ObjectType.rstkf__customextf__c.fields}" />
    <apex:sectionHeader subtitle="{!$Label.rstkf__general_journal_entries}" help="{!helpUrl}"/>
    <style>
        /* Page Template for the exported PDF */
        .page-template {
          font-family: "DejaVu Sans", "Arial", sans-serif;
          position: absolute;
          width: 100%;
          height: 100%;
          top: 0;
          left: 0;
        }
        .page-template .header {
          position: absolute;
          top: 30px;
          left: 30px;
          right: 30px;
          border-bottom: 1px solid #888;
          color: #888;
        }
        .page-template .footer {
          position: absolute;
          bottom: 30px;
          left: 30px;
          right: 30px;
          border-top: 1px solid #888;
          text-align: center;
          color: #888;
        }
        .page-template .watermark {
          font-weight: bold;
          font-size: 400%;
          text-align: center;
          margin-top: 30%;
          color: #aaaaaa;
          opacity: 0.1;
          transform: rotate(-35deg) scale(1.7, 1.5);
        }

    </style>
    <script>
          var glcompid = "{!currentGlcmp.id}";
        var selectedDataItems = [];
        var grid;
        var items; // to store selected journlas
        var exportFlag = true;
        var nsPrefix = pageParms.namespaceprefix ? (pageParms.namespaceprefix + '__') : '';

        function createKendoGrid(year, period, showUnPosted) {
            var parsedResult;
            // get journals for a selected year and period
            var getJEs = function(){
                var deferred = $.Deferred();
                var namespaceprefix = null;
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ControllerExtnGljh.getallJEs}',year,period,showUnPosted,
                    function (result, event) {
                        console.log('result',result);
                        deferred.resolve(result, event);
                        var getJournalsBtn = document.getElementById("getAllGljh");
                        getJournalsBtn.disabled = false;

                    },
                    {escape: false}
                );  
            return deferred.promise();        
            };
			
			var  jeno = 'gljh_jeno__c';
			var  status = 'gljh_status__c';
			var  desc = 'gljh_desc__c';
			var  sum_of_debit = 'sum_of_debit__c';
			var  sum_of_credit = 'sum_of_credit__c';
			var reversed = 'gljh_reversed__c';
			
			var namespace = '{!namespace}';
			if(namespace != ''){
				jeno = 'rstkf__gljh_jeno__c';
				status = 'rstkf__gljh_status__c';
				desc = 'rstkf__gljh_desc__c';
				sum_of_debit = 'rstkf__sum_of_debit__c';
				sum_of_credit = 'rstkf__sum_of_credit__c';
				reversed = 'rstkf__gljh_reversed__c';
			
			}
            // creating JE kendo grid
           grid = $('#jegrid').kendoGridActionList({
                pdf: {
                    allPages: true,
                    avoidLinks: true,
                    paperSize: "A4",
                    margin: { top: "2cm", left: "1cm", right: "1cm", bottom: "1cm" },
                    landscape: true,
                    repeatHeaders: true,
                    template: $("#page-template").html(),
                    scale: 0.8
                },
                fieldList: [{field: 'Name',title: 'JE #',template: "<a href='/#=Id#'>#= Name #</a>"},
                            {fieldtype: 'number', field: jeno, title: 'JE Reference Number'},
                            {fieldtype: 'string', field: status, title: 'Status'},
                            {fieldtype: 'string', field: desc, title: 'Description'},
                            {fieldtype: 'number', field: sum_of_debit ,template:"<p align='right'> #= convertNumber("+sum_of_debit+") #</p>", title: 'Dr Amount'},
                            {fieldtype: 'number', field: sum_of_credit,template:"<p  align='right'> #= convertNumber("+sum_of_credit+") #</p>", title: 'Cr Amount'},
                            {field: reversed, title: 'Is a Reversal', template: '# if( '+reversed+' == "true") {# <p><img src="/img/checkbox_checked.gif" /></p> #} else{# <p><img src="/img/checkbox_unchecked.gif" /></p> #} #'}
                            
                           ],
                getActionListFunction: getJEs,
                modelIdField: 'id', //since we are using a wrapper we need to pass the full path to the id here
                toolbarButtons: [ 
                    // { name: "Test", text:"", template: "<a class='{!IF(isClosedForAdjustments,'btnDisabled','k-button')}' onclick ='{!IF(isClosedForAdjustments,'', 'testEntryCheckSpecific();')}'  title=''> {!$Label.Test}<span class='fa fa-plus-circle fa-lg kndy-green grid-new-custom-command'></span></a> "},
                    { name: "Set_selected_to_Ready_to_Post", text:"", template: "<a  class='{!IF(OR(isClosedForAdjustments,yearEndAdjustmentNotOpen),'btnDisabled','k-button')}' onclick ='{!IF(isClosedForAdjustments,'', 'readyToPostEntry();')}'  title=''> {!$Label.Test}<span class='fa fa-plus-circle fa-lg kndy-green grid-new-custom-command'></span></a> "},
                    { name: "Post", text:"", template: "<a  class='{!IF(OR(isClosedForAdjustments,yearEndAdjustmentNotOpen),'btnDisabled','k-button')}' onclick ='{!IF(isClosedForAdjustments,'', 'postEntry();')}'   title=''> {!$Label.Post}<span class='fa fa-plus-circle fa-lg kndy-green grid-new-custom-command'></span></a> "},
                    { name: "Add_New_Entry", text:"", template: "<a  class='{!IF(OR(isClosedForAdjustments,yearEndAdjustmentNotOpen),'btnDisabled','k-button')}' onclick ='{!IF(isClosedForAdjustments,'', 'addnewJOurnalHeader();')}'  title=''> {!$Label.New_JE}<span class='fa fa-plus-circle fa-lg kndy-green grid-new-custom-command'></span></a> "},
                    { name: "Clone_And_Reverse", text:"", template: "<a  class='{!IF(OR(isClosedForAdjustments,yearEndAdjustmentNotOpen),'btnDisabled','k-button')}' onclick ='{!IF(isClosedForAdjustments,'', 'docloneAndReverse();')}'   title=''> {!$Label.Clone_And_Reverse}<span class='fa fa-plus-circle fa-lg kndy-green grid-new-custom-command'></span></a> "},
                    { name: "Make_Template_From_Entry", text:"", template: "<a class='k-button' onclick ='docloneEntryAsTemplate()'  title=''> {!$Label.Template_JE}<span class='fa fa-plus-circle fa-lg kndy-green grid-new-custom-command'></span></a> "},
                    { name: "Delete_Entry", text:"", template: "<a  class='{!IF(OR(isClosedForAdjustments,yearEndAdjustmentNotOpen),'btnDisabled','k-button')}' onclick ='{!IF(isClosedForAdjustments,'', 'deleteEntry();')}'  title=''> {!$Label.Delete_JE}<span class='fa fa-plus-circle fa-lg kndy-green grid-new-custom-command'></span></a> "},
                     { name: "Print", text:"", template: "<a class='k-button' onclick='saveAsPDF()' title=''> {!$Label.Print}<span class='fa fa-plus-circle fa-lg kndy-green grid-new-custom-command'></span></a> "}

                ],
                    actionColumnButtons: [
                ]
            }).data('kendoGridActionList').bind("pdfExport", function (e) {
                // to print grid as a pdf
                if (!exportFlag) {
                  e.sender.hideColumn(0);
                  // e.sender.options.filterable = false;
                   $(".k-filter-row").hide();
                  e.preventDefault();
                  exportFlag = true;
                  e.sender.saveAsPDF().then(function(){
                    e.sender.showColumn(0);
                     $(".k-filter-row").show();
                    exportFlag = false;
                  });
                }
              });
        }

        //convert to two digit format
        function convertNumber(number){
          var s = kendo.toString(parseFloat(number),"n2");
          return s; 
        }

        //To get entries for a selected year and period
        function displayAllEntries() {
            // $('#jegrid').empty();
            var filterGljhYear = document.getElementById('pg:fm:filterGljh:pb:fllterGlYear:gljhglyear__c').value;
            var filterGljhPeriod = document.getElementById('pg:fm:filterGljh:pb:fllterGlPeriod:gljhperiod__c').value;
            createKendoGrid(filterGljhYear,filterGljhPeriod,false);
        }
       
        // To check selected year, period and create a kendo grid
        function getAllGljhsCheck() {
            var filterGljhYear = document.getElementById('pg:fm:filterGljh:pb:fllterGlYear:gljhglyear__c').value;
            var filterGljhPeriod = document.getElementById('pg:fm:filterGljh:pb:fllterGlPeriod:gljhperiod__c').value;
            
            if(filterGljhYear == '') {
                alert("{!$Label.Please_enter_GL_Year}");
                return false;
            }
            
            if(filterGljhPeriod == '') {
                alert("{!$Label.Please_enter_GL_Period}");
                return false;
            }
              getAllGljhs();
              createKendoGrid(filterGljhYear,filterGljhPeriod,false);
        }

        // To test selected entry
        function testEntryCheckSpecific(){
            //testEntryCheck('',true);
            testEntryCheck('',false);
        }
        
        function testEntryCheck(flag,clearSelectionFlag) {
           
            items = [];
            // To get selected journals
            var sel = $("input:checked", grid.tbody).closest("tr"); 
              $.each (sel, function(idx, row) {
                    var item = grid.dataItem(row);
                    items.push(item.Id);
              });

            // To check any journal is selected in the grid  
            if(items.length >= 1) {
              Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ControllerExtnGljh.testEntry}',items,
                function (result, event) {
                  testResultString = result;
                  if(testResultString != ''){
                    testResultString = testResultString.replace(/is incomplete or out of balance/g, '');
                    testResultString = testResultString.replace(/\|/g, '\n');               
                    testResultString = "{!$Label.Following_JE_are_incomplete_or_out_of_balance}"+'\n' + testResultString;
                    alert(testResultString);
                  }
                  else{
                     alert("{!$Label.All_selected_journal_entries_pass_test}");
                  }     
                  },
                  {escape: false}
              );  
            }
            else{
            alert("{!$Label.Please_select_at_least_One_Entry}");
            }                                
        }                       
        
        //change status of journal to Ready To post
        function readyToPostEntry() {   
            items = [];
            var sel = $("input:checked", grid.tbody).closest("tr"); 
            $.each (sel, function(idx, row) {
                 var item = grid.dataItem(row);
                items.push(item.Id);
            });
            if(items.length >= 1){
                 blockUI();
                 Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ControllerExtnGljh.readyTopostJournal}',items,
                    function (result, event) {
                        console.log("iam at remoting");
                       readyTopostEntryProcessResult(result)
                       
                    },
                    {escape: false}
                    );  
                 // readyTopostJournal();
             }else{
                 alert("{!$Label.Please_select_at_least_One_Entry}");
             }                                  
        }

        function readyTopostEntryProcessResult(testResultString) {
            if (testResultString != '') {
                if(testResultString.includes('is incomplete or out of balance')){
                    testResultString = testResultString.replace(/is incomplete or out of balance/g, '');
                    testResultString = testResultString.replace(/\|/g, '\n');               
                    testResultString = "{!$Label.Following_JE_are_incomplete_or_out_of_balance}"+'\n' + testResultString;               
                } else if((!testResultString.includes("{!$Label.Selected_Journal_Entries_are_now_in_Ready_to_Post_status}"))){
                    testResultString = testResultString.replace(/\|/g, '\n');

                } else { // to reload grid if status is changed
                    displayAllEntries();  
                }

                alert(testResultString);
            }           
            unblockUI();    
        }

        // change status of journal to posted
        function postEntry() {   
            items = [];
            var gljhIds = '';
            var sel = $("input:checked", grid.tbody).closest("tr"); 
            $.each (sel, function(idx, row) {
                 var item = grid.dataItem(row);
                items.push(item.Id);
                if(gljhIds == ''){
                 gljhIds = item.Id ;
                }else{
                	gljhIds = item.Id +',' + gljhIds;
                }
                
            });
            if(items.length >= 1){
                 blockUI();
                 postJournalQueble(gljhIds);
                 /*Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ControllerExtnGljh.postJournal}',items,
                    function (result, event) {
                        console.log("iam at remoting");
                        postEntryProcessResult(result)
                       
                    },
                    {escape: false}
                    );  
                 // readyTopostJournal();*/
                 
             }else {
                 alert("{!$Label.Please_select_at_least_One_Entry}");
             }
        }

        function postEntryProcessResult(testResultString) {
            if (testResultString != '') {
                if(testResultString.includes('is incomplete or out of balance')){
                    testResultString = testResultString.replace(/is incomplete or out of balance/g, '');
                    testResultString = testResultString.replace(/\|/g, '\n');               
                    testResultString = "{!$Label.Following_JE_are_incomplete_or_out_of_balance}"+'\n' + testResultString;
                     console.log('iam at display process 1');               
                } else if((!testResultString.includes("{!$Label.Selected_Journal_Entries_are_now_in_Ready_to_Post_status}"))){
                    testResultString = testResultString.replace(/\|/g, '\n');
                     console.log('iam at display process 2');
                     displayAllEntries();
                } 
                alert(testResultString);
            }           
            unblockUI();    
        }

        function maintainoldJeno() {        
            oldJeno =   document.getElementById('pg:fm:glheaderEdit_pb:pb_edit:pb_edit_op_gjno:gljh_jeno__c').value;
        }  


        // To delete journal entry
        function deleteEntry() {
            items = [];
            var isPosted = false;
            var sel = $("input:checked", grid.tbody).closest("tr"); 
                $.each (sel, function(idx, row) {
                    var item = grid.dataItem(row);
                    items.push(item.Id);
                    if(item.gljh_status__c == "Posted"){
                        isPosted = true;
                    }
                });

                if (items.length >= 1){
                    if(isPosted == true){
                        alert('Journal cannot be deleted as it is already posted.');
                    }else{
                        if(confirm("{!$Label.AreYouSure}")) {
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.ControllerExtnGljh.deleteJournal}',items,
                                function (result, event) {
                                    console.log(result);
                                    alert(result);
                                    displayAllEntries();
                                   
                                },
                                {escape: false}
                            );  
                        }  
                   }      
                }else{
                   alert("{!$Label.Please_select_at_least_One_Entry}");
                }
        }

        // To clone entry as template
        function docloneEntryAsTemplate() {
           items = [];
                var sel = $("input:checked", grid.tbody).closest("tr"); 
                $.each (sel, function(idx, row) {
                    var item = grid.dataItem(row);
                    items.push(item);
                });
             if(items.length > 1){
                    alert("{!$Label.Please_select_Only_One_Entry}");
                }
                else if (items.length == 1){
                    var templateID ;
                    while(true){
                        templateID = prompt("{!$Label.Please_enter_Template_ID_maximum_10_characters}", "");
                        var letters = /^[0-9a-zA-Z]+$/;
                        if(templateID.trim() != '' && templateID.length < 11 && templateID.match(letters)) {
                            break;
                        }
                    }
                    if(templateID == null) {
                        return false;
                    }else {
                        Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.ControllerExtnGljh.cloneEntryAsTemplateCheck}',items[0].Id,templateID,
                                function (result, event) {
                                    alert(result);
                                },
                                {escape: false}
                        );
                    }  
                }else{
                   alert("{!$Label.Please_select_at_least_One_Entry}");
                }              
        }


        function docloneAndReverse() {
            items = [];
            var sel = $("input:checked", grid.tbody).closest("tr"); 
                $.each (sel, function(idx, row) {
                    var item = grid.dataItem(row);
                    items.push(item);
            });

            if(items.length > 1){
               alert("{!$Label.Please_select_Only_One_Entry}");
            }
            else if (items.length == 1){
                if(items[0].get(nsPrefix+"gljh_status__c") == "Posted"){    
                        openCloneDialog();
                    }else{
                        alert("{!$Label.Journal_cannot_be_Cloned_and_Reversed_as_it_is_not_yet_posted}"); 
                        }      
            }
            else{
                   alert("{!$Label.Please_select_at_least_One_Entry}");
            }
        }

        function openCloneDialog() {
                console.log(" iam at openCloneDialog")
                showPopup('#cloneDialog', 400, 200);
                var cancelBtn = document.getElementById('Cancel');
                var submitBtn = document.getElementById('submit');
                cancelBtn.disabled = false;
                submitBtn.disabled = false;
        }

        function reloadcloneDialog() {
                var alertMessage = '';
                var destinationYear = document.getElementById('destinationYear').value;
                if(isNaN(destinationYear) || destinationYear.trim() == '') {
                    alertMessage = "{!$Label.Please_enter_valid_Destination_Year}"+' \n';
                }
                var destinationPeriod = document.getElementById('destinationPeriod').value;
                var x = parseInt(destinationPeriod);
                if(isNaN(destinationPeriod) || x < 1 || x > 13 || destinationPeriod.trim() == '') {
                    alertMessage = alertMessage + "{!$Label.Destination_period_must_be_specified_and_must_be_between_1_and_13}";
                }
                
                var postClonedEntry = document.getElementById('postClonedEntry').checked;
                console.log(' postClonedEntry : '+postClonedEntry);
                if(alertMessage == '') {
                    if (destinationYear != '' && destinationPeriod != '') {
                        unblockUI();
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.ControllerExtnGljh.cloneAndReverse}',items[0].Id,destinationYear,destinationPeriod,postClonedEntry,
                                    function (result, event) {
                                        console.log(result);
                                        alert(result[0]);
                                        if(result[1] == 'yes' ){
                                            displayAllEntries();
                                        }
                                    },
                                    {escape: false}
                        );
                    }                           
                } else {
                    alert(alertMessage);
                    alertMessage = '';
                }           
        }

        function cancelCloneDialog() {
                console.log("iam at cancelCloneDialog")
                document.getElementById('destinationYear').value = '';
                document.getElementById('destinationPeriod').value = '';
                document.getElementById('postClonedEntry').checked = false;
                unblockUI();
            }

        function saveAsPDF() {
            items = [];
            var selectedids = '';
                var sel = $("input:checked", grid.tbody).closest("tr"); 
                $.each (sel, function(idx, row) {
                    var item = grid.dataItem(row);
                    items.push(item);
                });
            if(items.length == 0){
              alert("{!$Label.Please_select_at_least_One_Entry}");
            }
            // else if(items.length > 1){
            //     alert("{!$Label.Please_select_Only_One_Entry}");
            // }
            else{
                var execQueryString = "select glcmp_je_email_template__c from glcmp__c where id = '"+glcompid+"' and glcmp_je_email_template__c != null ";
				var email_templateResults = execQuery(execQueryString);
				if( email_templateResults.length > 0) {
                    for(i = 0; i < items.length; i++) {
                        selectedids = selectedids +items[i].Id +',';
                    }
                    var newwindow = window.open('/apex/JEPrint?selectedids='+selectedids);
                } else {
                	alert("{!$Label.Email_Template_is_not_set_on_Financial_Company}");                      
                }                    
            }  
        }

                     
    </script>

    <!-- Template for pdf -->
    <script type="x/kendo-template" id="page-template">
      <div class="page-template">
        <div class="header">
          <div style="float: right">Page #: pageNum # of #: totalPages #</div>
          Multi-page grid with automatic page breaking
        </div>
        <div class="watermark">KENDO UI</div>
        <div class="footer">
          Page #: pageNum # of #: totalPages #
        </div>
      </div>
    </script>
	<script>
		function doAfterJobComplete(pl) {
			displayAllEntries();
            if(pl && pl.iserror__c) {
                unblockUI();
            } else {
                unblockUI();
           }
        }  
        
        function getJobSuccessMessage(pl) {
		    isErrorOccurred = false;
		    if(pl && pl.errormessagelong__c) {
		        isErrorOccurred = true;
		        return htmlEntityDecode(pl.errormessagelong__c);
		    }else{
		        return Label_Journal_Entries_are_Posted;
		    }
		    return null;
		} 
		var Label_Journal_Entries_are_Posted = "{!$Label.Journal_Entries_are_Posted}"; 
	</script>

    <c:standardHeader cntr="{!controller}" customInclude="{!$Resource.rstkf__gljh_cli}" showHeader="false" subtitle="{!$Label.rstkf__general_journal_entries}"/>
    <apex:stylesheet value="{!$Resource.rstkf__ModalPopup_css}"/>
    <apex:includeScript value="{!$Resource.rstkf__RowHandler_js}"/>
    <apex:includeScript value="{!$Resource.rstkf__BlockUI}" />
    <apex:form id="fm">
        
        <apex:actionFunction name="postJournalQueble" action="{!postJournalQueble}" rerender="op_JobStatus,pageMessages,glheaderEdit" immediate="false" status="pleaseWaitStatus" oncomplete="checkJobStatus();" >
        	<apex:param name="selectedgljhIds" assignTo="{!selectedgljhIds}" value=""/>
        </apex:actionFunction>
        <apex:actionFunction name="disableGljhs" action="{!disableGljhs}" reRender="glheaderList,glheaderEdit,glDetail,journalSelectedSize" immediate="false" status="pleaseWaitStatus" />
        <apex:actionFunction name="getAllGljhs" action="{!getAllGljhs}" reRender="pageMessages,glheaderEdit,glDetail,journalSelectedSize" immediate="false" status="pleaseWaitStatus" />
        <apex:actionFunction name="addnewJOurnalHeader" action="{!addnewJOurnalHeader}" immediate="false" rerender="pageMessages,glheaderEdit,glheaderList,journalSelectedSize" status="pleaseWaitStatus" oncomplete="maintainoldJeno();"/> 
        <apex:outputPanel id="journalSelectedSize">
        </apex:outputPanel>
        <apex:outputPanel id="op_JobStatus">
           <input type="hidden" id="processlogId" value="{!processlogId}"/>
       </apex:outputPanel>
        <apex:actionStatus onstart="showTopDialog('pleaseWaitPopup');" onstop="closeTopDialog();" id="pleaseWaitStatus"/>
        <apex:pageblock id="filterGljh">        
            <apex:pageblocksection id="pb" columns="1">
                <apex:pageBlockSectionItem helpText="{!f_customext.rstkf__custom_glcmp__c.inlineHelpText}">
                    <apex:outputLabel value="{!f_customext.rstkf__custom_glcmp__c.label}"/>
                    <apex:outputPanel >                     
                        <apex:outputField value="{!o_customext.rstkf__custom_glcmp__c}" />
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                
                <apex:pageBlockSectionItem helpText="{!f.rstkf__gljh_glyear__c.inlineHelpText}" id="fllterGlYear">
                    <apex:outputLabel value="{!f.rstkf__gljh_glyear__c.label}"/>
                    <apex:outputPanel >
                        <apex:selectList id="gljhglyear__c" value="{!o.rstkf__gljh_glyear__c}" size="1" onchange="disableGljhs();">
                            <apex:selectOptions value="{!fiscalyears}" /> 
                        </apex:selectList>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                
                <apex:pageBlockSectionItem helpText="{!f.rstkf__gljh_period__c.inlineHelpText}" id="fllterGlPeriod">
                    <apex:outputLabel value="{!f.rstkf__gljh_period__c.label}"/>
                    <apex:outputPanel >
                        <apex:selectList id="gljhperiod__c" value="{!o.rstkf__gljh_period__c}" size="1" onchange="disableGljhs();"> 
                            <apex:selectOptions value="{!periods}" /> 
                        </apex:selectList>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                    
                <apex:pageBlockSectionItem >
                    <apex:outputPanel >
                        <input type="button" id="getAllGljh" value="{!$Label.Get_All_Journal_Entries}" class="btn" onclick="getAllGljhsCheck();"/>
                    </apex:outputPanel> 
                </apex:pageBlockSectionItem>
            </apex:pageblocksection>
        </apex:pageblock>
       
        <apex:outputPanel id="glheaderList">
            <apex:pageBlock id="gljhs" mode="detail">
                <div id="jegrid">
                </div>
            </apex:pageBlock>
        </apex:outputPanel>
            
        <div id="pleaseWaitPopup" style="display:none">
            <apex:outputPanel styleClass="topPopupBackground" layout="block"/>
            <apex:outputPanel styleClass="topPopup">
                <apex:image url="{!$Resource.rstkf__busy}"/>
            </apex:outputPanel>
        </div>

        
    </apex:form>

    <apex:outputPanel id="CloneDialogBox">
        <div id="cloneDialog" title="Dialog Form" style="display:none">
            <apex:pageBlock id="pb_cloneDialog"  mode="detail">
                <apex:pageblocksection id="pb_edit_cloneDialog" columns="1">
                    <form action="" method="post">
                        <apex:pageBlockSectionItem id="pbs_pb_cloneDialog_titles">
                            <apex:outputLabel value="{!$Label.rstkf__please_enter_following_details}"/>
                        </apex:pageBlockSectionItem>    
                        
                        <apex:pageBlockSectionItem id="pbs_destinationYear">
                            <apex:outputPanel style="width:200px">
                                <apex:outputLabel value="{!$Label.rstkf__destination_year}" />
                            </apex:outputPanel>
                            
                            <input id="destinationYear" name="destinationYear" type="text"/>
                        </apex:pageBlockSectionItem>    
                        
                        <apex:pageBlockSectionItem id="pbs_destinationPeriod">
                            <apex:outputPanel style="width:200px">
                                <apex:outputLabel value="{!$Label.rstkf__destination_period}" style="width:150px"/>
                            </apex:outputPanel>                         
                            <input id="destinationPeriod" name="destinationPeriod" type="text"/>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem id="pbs_postClonedEntry">
                            <apex:outputPanel style="width:200px">
                                <apex:outputLabel value="{!$Label.rstkf__post_cloned_entry}" style="width:150px"/>
                            </apex:outputPanel>                         
                            <input id="postClonedEntry" name="postClonedEntry" type="checkbox"/>
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem >
                            <apex:outputPanel >
                                <input id="submit" type="button" value="{!$Label.Submit}" class="btn" onclick="reloadcloneDialog()"/>
                                <input id="Cancel" type="button" value="{!$Label.Cancel}" class="btn" onclick="cancelCloneDialog()"/>
                            </apex:outputPanel>                     
                        </apex:pageBlockSectionItem>                    
                    </form>
                </apex:pageblocksection>
            </apex:pageBlock>
        </div>
    </apex:outputPanel>
    <c:footerInclude cntr="{!controller}" />
</apex:page>